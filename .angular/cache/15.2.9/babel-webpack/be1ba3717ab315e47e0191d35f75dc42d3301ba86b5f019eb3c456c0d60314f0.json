{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computesTemplateSourceFromComponent = exports.computesTemplateFromComponent = void 0;\nconst NgComponentAnalyzer_1 = require(\"./utils/NgComponentAnalyzer\");\nconst separateInputsOutputsAttributes = (ngComponentInputsOutputs, props = {}) => {\n  const inputs = ngComponentInputsOutputs.inputs.filter(i => i.templateName in props).map(i => i.templateName);\n  const outputs = ngComponentInputsOutputs.outputs.filter(o => o.templateName in props).map(o => o.templateName);\n  return {\n    inputs,\n    outputs,\n    otherProps: Object.keys(props).filter(k => ![...inputs, ...outputs].includes(k))\n  };\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nexports.computesTemplateFromComponent = (component, initialProps, innerTemplate = '') => {\n  const ngComponentMetadata = NgComponentAnalyzer_1.getComponentDecoratorMetadata(component);\n  const ngComponentInputsOutputs = NgComponentAnalyzer_1.getComponentInputsOutputs(component);\n  if (!ngComponentMetadata.selector) {\n    // Allow to add renderer component when NgComponent selector is undefined\n    return `<ng-container *ngComponentOutlet=\"storyComponent\"></ng-container>`;\n  }\n  const {\n    inputs: initialInputs,\n    outputs: initialOutputs\n  } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n  const templateInputs = initialInputs.length > 0 ? ` ${initialInputs.map(i => `[${i}]=\"${i}\"`).join(' ')}` : '';\n  const templateOutputs = initialOutputs.length > 0 ? ` ${initialOutputs.map(i => `(${i})=\"${i}($event)\"`).join(' ')}` : '';\n  return buildTemplate(ngComponentMetadata.selector, innerTemplate, templateInputs, templateOutputs);\n};\nconst createAngularInputProperty = ({\n  propertyName,\n  value,\n  argType\n}) => {\n  const {\n    name: type = null,\n    summary = null\n  } = (argType === null || argType === void 0 ? void 0 : argType.type) || {};\n  let templateValue = type === 'enum' && !!summary ? `${summary}.${value}` : value;\n  const actualType = type === 'enum' && summary ? 'enum' : typeof value;\n  const requiresBrackets = ['object', 'any', 'boolean', 'enum', 'number'].includes(actualType);\n  if (typeof value === 'object') {\n    templateValue = propertyName;\n  }\n  return `${requiresBrackets ? '[' : ''}${propertyName}${requiresBrackets ? ']' : ''}=\"${templateValue}\"`;\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nexports.computesTemplateSourceFromComponent = (component, initialProps, argTypes) => {\n  const ngComponentMetadata = NgComponentAnalyzer_1.getComponentDecoratorMetadata(component);\n  if (!ngComponentMetadata) {\n    return null;\n  }\n  if (!ngComponentMetadata.selector) {\n    // Allow to add renderer component when NgComponent selector is undefined\n    return `<ng-container *ngComponentOutlet=\"${component.name}\"></ng-container>`;\n  }\n  const ngComponentInputsOutputs = NgComponentAnalyzer_1.getComponentInputsOutputs(component);\n  const {\n    inputs: initialInputs,\n    outputs: initialOutputs\n  } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n  const templateInputs = initialInputs.length > 0 ? ` ${initialInputs.map(propertyName => createAngularInputProperty({\n    propertyName,\n    value: initialProps[propertyName],\n    argType: argTypes === null || argTypes === void 0 ? void 0 : argTypes[propertyName]\n  })).join(' ')}` : '';\n  const templateOutputs = initialOutputs.length > 0 ? ` ${initialOutputs.map(i => `(${i})=\"${i}($event)\"`).join(' ')}` : '';\n  return buildTemplate(ngComponentMetadata.selector, '', templateInputs, templateOutputs);\n};\nconst buildTemplate = (selector, innerTemplate, inputs, outputs) => {\n  // https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#syntax-elements\n  const voidElements = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n  const firstSelector = selector.split(',')[0];\n  const templateReplacers = [[/(^.*?)(?=[,])/, '$1'], [/(^\\..+)/, 'div$1'], [/(^\\[.+?])/, 'div$1'], [/([\\w[\\]]+)(\\s*,[\\w\\s-[\\],]+)+/, `$1`], [/#([\\w-]+)/, ` id=\"$1\"`], [/((\\.[\\w-]+)+)/, (_, c) => ` class=\"${c.split`.`.join` `.trim()}\"`], [/(\\[.+?])/g, (_, a) => ` ${a.slice(1, -1)}`], [/([\\S]+)(.*)/, (template, elementSelector) => {\n    return voidElements.some(element => elementSelector === element) ? template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs} />`) : template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs}>${innerTemplate}</$1>`);\n  }]];\n  return templateReplacers.reduce((prevSelector, [searchValue, replacer]) => prevSelector.replace(searchValue, replacer), firstSelector);\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","computesTemplateSourceFromComponent","computesTemplateFromComponent","NgComponentAnalyzer_1","require","separateInputsOutputsAttributes","ngComponentInputsOutputs","props","inputs","filter","i","templateName","map","outputs","o","otherProps","keys","k","includes","component","initialProps","innerTemplate","ngComponentMetadata","getComponentDecoratorMetadata","getComponentInputsOutputs","selector","initialInputs","initialOutputs","templateInputs","length","join","templateOutputs","buildTemplate","createAngularInputProperty","propertyName","argType","name","type","summary","templateValue","actualType","requiresBrackets","argTypes","voidElements","firstSelector","split","templateReplacers","_","c","trim","a","slice","template","elementSelector","some","element","replace","reduce","prevSelector","searchValue","replacer"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/@storybook/angular/dist/ts3.9/client/preview/angular-beta/ComputesTemplateFromComponent.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computesTemplateSourceFromComponent = exports.computesTemplateFromComponent = void 0;\nconst NgComponentAnalyzer_1 = require(\"./utils/NgComponentAnalyzer\");\nconst separateInputsOutputsAttributes = (ngComponentInputsOutputs, props = {}) => {\n    const inputs = ngComponentInputsOutputs.inputs\n        .filter((i) => i.templateName in props)\n        .map((i) => i.templateName);\n    const outputs = ngComponentInputsOutputs.outputs\n        .filter((o) => o.templateName in props)\n        .map((o) => o.templateName);\n    return {\n        inputs,\n        outputs,\n        otherProps: Object.keys(props).filter((k) => ![...inputs, ...outputs].includes(k)),\n    };\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nexports.computesTemplateFromComponent = (component, initialProps, innerTemplate = '') => {\n    const ngComponentMetadata = NgComponentAnalyzer_1.getComponentDecoratorMetadata(component);\n    const ngComponentInputsOutputs = NgComponentAnalyzer_1.getComponentInputsOutputs(component);\n    if (!ngComponentMetadata.selector) {\n        // Allow to add renderer component when NgComponent selector is undefined\n        return `<ng-container *ngComponentOutlet=\"storyComponent\"></ng-container>`;\n    }\n    const { inputs: initialInputs, outputs: initialOutputs } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n    const templateInputs = initialInputs.length > 0 ? ` ${initialInputs.map((i) => `[${i}]=\"${i}\"`).join(' ')}` : '';\n    const templateOutputs = initialOutputs.length > 0\n        ? ` ${initialOutputs.map((i) => `(${i})=\"${i}($event)\"`).join(' ')}`\n        : '';\n    return buildTemplate(ngComponentMetadata.selector, innerTemplate, templateInputs, templateOutputs);\n};\nconst createAngularInputProperty = ({ propertyName, value, argType, }) => {\n    const { name: type = null, summary = null } = (argType === null || argType === void 0 ? void 0 : argType.type) || {};\n    let templateValue = type === 'enum' && !!summary ? `${summary}.${value}` : value;\n    const actualType = type === 'enum' && summary ? 'enum' : typeof value;\n    const requiresBrackets = ['object', 'any', 'boolean', 'enum', 'number'].includes(actualType);\n    if (typeof value === 'object') {\n        templateValue = propertyName;\n    }\n    return `${requiresBrackets ? '[' : ''}${propertyName}${requiresBrackets ? ']' : ''}=\"${templateValue}\"`;\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nexports.computesTemplateSourceFromComponent = (component, initialProps, argTypes) => {\n    const ngComponentMetadata = NgComponentAnalyzer_1.getComponentDecoratorMetadata(component);\n    if (!ngComponentMetadata) {\n        return null;\n    }\n    if (!ngComponentMetadata.selector) {\n        // Allow to add renderer component when NgComponent selector is undefined\n        return `<ng-container *ngComponentOutlet=\"${component.name}\"></ng-container>`;\n    }\n    const ngComponentInputsOutputs = NgComponentAnalyzer_1.getComponentInputsOutputs(component);\n    const { inputs: initialInputs, outputs: initialOutputs } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n    const templateInputs = initialInputs.length > 0\n        ? ` ${initialInputs\n            .map((propertyName) => createAngularInputProperty({\n            propertyName,\n            value: initialProps[propertyName],\n            argType: argTypes === null || argTypes === void 0 ? void 0 : argTypes[propertyName],\n        }))\n            .join(' ')}`\n        : '';\n    const templateOutputs = initialOutputs.length > 0\n        ? ` ${initialOutputs.map((i) => `(${i})=\"${i}($event)\"`).join(' ')}`\n        : '';\n    return buildTemplate(ngComponentMetadata.selector, '', templateInputs, templateOutputs);\n};\nconst buildTemplate = (selector, innerTemplate, inputs, outputs) => {\n    // https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#syntax-elements\n    const voidElements = [\n        'area',\n        'base',\n        'br',\n        'col',\n        'command',\n        'embed',\n        'hr',\n        'img',\n        'input',\n        'keygen',\n        'link',\n        'meta',\n        'param',\n        'source',\n        'track',\n        'wbr',\n    ];\n    const firstSelector = selector.split(',')[0];\n    const templateReplacers = [\n        [/(^.*?)(?=[,])/, '$1'],\n        [/(^\\..+)/, 'div$1'],\n        [/(^\\[.+?])/, 'div$1'],\n        [/([\\w[\\]]+)(\\s*,[\\w\\s-[\\],]+)+/, `$1`],\n        [/#([\\w-]+)/, ` id=\"$1\"`],\n        [/((\\.[\\w-]+)+)/, (_, c) => ` class=\"${c.split `.`.join ` `.trim()}\"`],\n        [/(\\[.+?])/g, (_, a) => ` ${a.slice(1, -1)}`],\n        [\n            /([\\S]+)(.*)/,\n            (template, elementSelector) => {\n                return voidElements.some((element) => elementSelector === element)\n                    ? template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs} />`)\n                    : template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs}>${innerTemplate}</$1>`);\n            },\n        ],\n    ];\n    return templateReplacers.reduce((prevSelector, [searchValue, replacer]) => prevSelector.replace(searchValue, replacer), firstSelector);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}