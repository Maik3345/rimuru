{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar inspect = require('object-inspect');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-get-o-p\n\nmodule.exports = function Get(O, P) {\n  // 7.3.1.1\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: Type(O) is not Object');\n  }\n  // 7.3.1.2\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true, got ' + inspect(P));\n  }\n  // 7.3.1.3\n  return O[P];\n};","map":{"version":3,"names":["$TypeError","require","inspect","IsPropertyKey","Type","module","exports","Get","O","P"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/es-abstract/2023/Get.js"],"sourcesContent":["'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar inspect = require('object-inspect');\n\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-get-o-p\n\nmodule.exports = function Get(O, P) {\n\t// 7.3.1.1\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\t// 7.3.1.2\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true, got ' + inspect(P));\n\t}\n\t// 7.3.1.3\n\treturn O[P];\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE1C,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAEvC,IAAIE,aAAa,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAC9C,IAAIG,IAAI,GAAGH,OAAO,CAAC,QAAQ,CAAC;;AAE5B;;AAEAI,MAAM,CAACC,OAAO,GAAG,SAASC,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACnC;EACA,IAAIL,IAAI,CAACI,CAAC,CAAC,KAAK,QAAQ,EAAE;IACzB,MAAM,IAAIR,UAAU,CAAC,yCAAyC,CAAC;EAChE;EACA;EACA,IAAI,CAACG,aAAa,CAACM,CAAC,CAAC,EAAE;IACtB,MAAM,IAAIT,UAAU,CAAC,sDAAsD,GAAGE,OAAO,CAACO,CAAC,CAAC,CAAC;EAC1F;EACA;EACA,OAAOD,CAAC,CAACC,CAAC,CAAC;AACZ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}