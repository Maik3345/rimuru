{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/regenerator/index.js\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport \"regenerator-runtime/runtime.js\";\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport memoize from 'memoizerific';\nimport mapValues from 'lodash/mapValues';\nimport pick from 'lodash/pick';\nimport global from 'global';\nimport { SynchronousPromise } from 'synchronous-promise';\nimport { StoryIndexStore } from './StoryIndexStore';\nimport { ArgsStore } from './ArgsStore';\nimport { GlobalsStore } from './GlobalsStore';\nimport { processCSFFile, prepareStory, normalizeProjectAnnotations } from './csf';\nimport { HooksContext } from './hooks'; // TODO -- what are reasonable values for these?\n\nvar CSF_CACHE_SIZE = 1000;\nvar STORY_CACHE_SIZE = 10000;\nexport var StoryStore = /*#__PURE__*/function () {\n  function StoryStore() {\n    var _this = this;\n    _classCallCheck(this, StoryStore);\n    this.storyIndex = void 0;\n    this.importFn = void 0;\n    this.projectAnnotations = void 0;\n    this.globals = void 0;\n    this.args = void 0;\n    this.hooks = void 0;\n    this.cachedCSFFiles = void 0;\n    this.processCSFFileWithCache = void 0;\n    this.prepareStoryWithCache = void 0;\n    this.initializationPromise = void 0;\n    this.resolveInitializationPromise = void 0;\n    this.getStoriesJsonData = function () {\n      var value = _this.getSetStoriesPayload();\n      var allowedParameters = ['fileName', 'docsOnly', 'framework', '__id', '__isArgsStory'];\n      var stories = mapValues(value.stories, function (story) {\n        var _global$FEATURES;\n        return Object.assign({}, pick(story, ['id', 'name', 'title']), {\n          importPath: _this.storyIndex.stories[story.id].importPath\n        }, !((_global$FEATURES = global.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7) && {\n          kind: story.title,\n          story: story.name,\n          parameters: Object.assign({}, pick(story.parameters, allowedParameters), {\n            fileName: _this.storyIndex.stories[story.id].importPath\n          })\n        });\n      });\n      return {\n        v: 3,\n        stories: stories\n      };\n    };\n    this.globals = new GlobalsStore();\n    this.args = new ArgsStore();\n    this.hooks = {}; // We use a cache for these two functions for two reasons:\n    //  1. For performance\n    //  2. To ensure that when the same story is prepared with the same inputs you get the same output\n\n    this.processCSFFileWithCache = memoize(CSF_CACHE_SIZE)(processCSFFile);\n    this.prepareStoryWithCache = memoize(STORY_CACHE_SIZE)(prepareStory); // We cannot call `loadStory()` until we've been initialized properly. But we can wait for it.\n\n    this.initializationPromise = new SynchronousPromise(function (resolve) {\n      _this.resolveInitializationPromise = resolve;\n    });\n  }\n  _createClass(StoryStore, [{\n    key: \"setProjectAnnotations\",\n    value: function setProjectAnnotations(projectAnnotations) {\n      // By changing `this.projectAnnotations, we implicitly invalidate the `prepareStoryWithCache`\n      this.projectAnnotations = normalizeProjectAnnotations(projectAnnotations);\n      var globals = projectAnnotations.globals,\n        globalTypes = projectAnnotations.globalTypes;\n      this.globals.set({\n        globals: globals,\n        globalTypes: globalTypes\n      });\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize(_ref) {\n      var storyIndex = _ref.storyIndex,\n        importFn = _ref.importFn,\n        _ref$cache = _ref.cache,\n        cache = _ref$cache === void 0 ? false : _ref$cache;\n      this.storyIndex = new StoryIndexStore(storyIndex);\n      this.importFn = importFn; // We don't need the cache to be loaded to call `loadStory`, we just need the index ready\n\n      this.resolveInitializationPromise();\n      return cache ? this.cacheAllCSFFiles() : SynchronousPromise.resolve();\n    } // This means that one of the CSF files has changed.\n    // If the `importFn` has changed, we will invalidate both caches.\n    // If the `storyIndex` data has changed, we may or may not invalidate the caches, depending\n    // on whether we've loaded the relevant files yet.\n  }, {\n    key: \"onStoriesChanged\",\n    value: function () {\n      var _onStoriesChanged = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n        var importFn, storyIndex;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                importFn = _ref2.importFn, storyIndex = _ref2.storyIndex;\n                if (importFn) this.importFn = importFn;\n                if (storyIndex) this.storyIndex.stories = storyIndex.stories;\n                if (!this.cachedCSFFiles) {\n                  _context.next = 6;\n                  break;\n                }\n                _context.next = 6;\n                return this.cacheAllCSFFiles();\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function onStoriesChanged(_x) {\n        return _onStoriesChanged.apply(this, arguments);\n      }\n      return onStoriesChanged;\n    }() // To load a single CSF file to service a story we need to look up the importPath in the index\n  }, {\n    key: \"loadCSFFileByStoryId\",\n    value: function loadCSFFileByStoryId(storyId) {\n      var _this2 = this;\n      var _this$storyIndex$stor = this.storyIndex.storyIdToEntry(storyId),\n        importPath = _this$storyIndex$stor.importPath,\n        title = _this$storyIndex$stor.title;\n      return this.importFn(importPath).then(function (moduleExports) {\n        return (\n          // We pass the title in here as it may have been generated by autoTitle on the server.\n          _this2.processCSFFileWithCache(moduleExports, importPath, title)\n        );\n      });\n    }\n  }, {\n    key: \"loadAllCSFFiles\",\n    value: function loadAllCSFFiles() {\n      var _this3 = this;\n      var importPaths = {};\n      Object.entries(this.storyIndex.stories).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          storyId = _ref4[0],\n          importPath = _ref4[1].importPath;\n        importPaths[importPath] = storyId;\n      });\n      var csfFilePromiseList = Object.entries(importPaths).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n          importPath = _ref6[0],\n          storyId = _ref6[1];\n        return _this3.loadCSFFileByStoryId(storyId).then(function (csfFile) {\n          return {\n            importPath: importPath,\n            csfFile: csfFile\n          };\n        });\n      });\n      return SynchronousPromise.all(csfFilePromiseList).then(function (list) {\n        return list.reduce(function (acc, _ref7) {\n          var importPath = _ref7.importPath,\n            csfFile = _ref7.csfFile;\n          acc[importPath] = csfFile;\n          return acc;\n        }, {});\n      });\n    }\n  }, {\n    key: \"cacheAllCSFFiles\",\n    value: function cacheAllCSFFiles() {\n      var _this4 = this;\n      return this.initializationPromise.then(function () {\n        return _this4.loadAllCSFFiles().then(function (csfFiles) {\n          _this4.cachedCSFFiles = csfFiles;\n        });\n      });\n    } // Load the CSF file for a story and prepare the story from it and the project annotations.\n  }, {\n    key: \"loadStory\",\n    value: function () {\n      var _loadStory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref8) {\n        var storyId, csfFile;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                storyId = _ref8.storyId;\n                _context2.next = 3;\n                return this.initializationPromise;\n              case 3:\n                _context2.next = 5;\n                return this.loadCSFFileByStoryId(storyId);\n              case 5:\n                csfFile = _context2.sent;\n                return _context2.abrupt(\"return\", this.storyFromCSFFile({\n                  storyId: storyId,\n                  csfFile: csfFile\n                }));\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function loadStory(_x2) {\n        return _loadStory.apply(this, arguments);\n      }\n      return loadStory;\n    }() // This function is synchronous for convenience -- often times if you have a CSF file already\n    // it is easier not to have to await `loadStory`.\n  }, {\n    key: \"storyFromCSFFile\",\n    value: function storyFromCSFFile(_ref9) {\n      var storyId = _ref9.storyId,\n        csfFile = _ref9.csfFile;\n      var storyAnnotations = csfFile.stories[storyId];\n      if (!storyAnnotations) {\n        throw new Error(\"Didn't find '\".concat(storyId, \"' in CSF file, this is unexpected\"));\n      }\n      var componentAnnotations = csfFile.meta;\n      var story = this.prepareStoryWithCache(storyAnnotations, componentAnnotations, this.projectAnnotations);\n      this.args.setInitial(story);\n      this.hooks[story.id] = this.hooks[story.id] || new HooksContext();\n      return story;\n    } // If we have a CSF file we can get all the stories from it synchronously\n  }, {\n    key: \"componentStoriesFromCSFFile\",\n    value: function componentStoriesFromCSFFile(_ref10) {\n      var _this5 = this;\n      var csfFile = _ref10.csfFile;\n      return Object.keys(this.storyIndex.stories).filter(function (storyId) {\n        return !!csfFile.stories[storyId];\n      }).map(function (storyId) {\n        return _this5.storyFromCSFFile({\n          storyId: storyId,\n          csfFile: csfFile\n        });\n      });\n    } // A prepared story does not include args, globals or hooks. These are stored in the story store\n    // and updated separtely to the (immutable) story.\n  }, {\n    key: \"getStoryContext\",\n    value: function getStoryContext(story) {\n      return Object.assign({}, story, {\n        args: this.args.get(story.id),\n        globals: this.globals.get(),\n        hooks: this.hooks[story.id]\n      });\n    }\n  }, {\n    key: \"cleanupStory\",\n    value: function cleanupStory(story) {\n      this.hooks[story.id].clean();\n    }\n  }, {\n    key: \"extract\",\n    value: function extract() {\n      var _this6 = this;\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeDocsOnly: false\n      };\n      if (!this.cachedCSFFiles) {\n        throw new Error('Cannot call extract() unless you call cacheAllCSFFiles() first.');\n      }\n      return Object.entries(this.storyIndex.stories).reduce(function (acc, _ref11) {\n        var _ref12 = _slicedToArray(_ref11, 2),\n          storyId = _ref12[0],\n          importPath = _ref12[1].importPath;\n        var csfFile = _this6.cachedCSFFiles[importPath];\n        var story = _this6.storyFromCSFFile({\n          storyId: storyId,\n          csfFile: csfFile\n        });\n        if (!options.includeDocsOnly && story.parameters.docsOnly) {\n          return acc;\n        }\n        acc[storyId] = Object.entries(story).reduce(function (storyAcc, _ref13) {\n          var _ref14 = _slicedToArray(_ref13, 2),\n            key = _ref14[0],\n            value = _ref14[1];\n          if (typeof value === 'function') {\n            return storyAcc;\n          }\n          if (Array.isArray(value)) {\n            return Object.assign(storyAcc, _defineProperty({}, key, value.slice().sort()));\n          }\n          return Object.assign(storyAcc, _defineProperty({}, key, value));\n        }, {\n          args: story.initialArgs\n        });\n        return acc;\n      }, {});\n    }\n  }, {\n    key: \"getSetStoriesPayload\",\n    value: function getSetStoriesPayload() {\n      var stories = this.extract({\n        includeDocsOnly: true\n      });\n      var kindParameters = Object.values(stories).reduce(function (acc, _ref15) {\n        var title = _ref15.title;\n        acc[title] = {};\n        return acc;\n      }, {});\n      return {\n        v: 2,\n        globals: this.globals.get(),\n        globalParameters: {},\n        kindParameters: kindParameters,\n        stories: stories\n      };\n    }\n  }, {\n    key: \"raw\",\n    value: function raw() {\n      var _this7 = this;\n      return Object.values(this.extract()).map(function (_ref16) {\n        var id = _ref16.id;\n        return _this7.fromId(id);\n      });\n    }\n  }, {\n    key: \"fromId\",\n    value: function fromId(storyId) {\n      var _this8 = this;\n      if (!this.cachedCSFFiles) {\n        throw new Error('Cannot call fromId/raw() unless you call cacheAllCSFFiles() first.');\n      }\n      var importPath;\n      try {\n        var _this$storyIndex$stor2 = this.storyIndex.storyIdToEntry(storyId);\n        importPath = _this$storyIndex$stor2.importPath;\n      } catch (err) {\n        return null;\n      }\n      var csfFile = this.cachedCSFFiles[importPath];\n      var story = this.storyFromCSFFile({\n        storyId: storyId,\n        csfFile: csfFile\n      });\n      return Object.assign({}, story, {\n        storyFn: function storyFn(update) {\n          var context = Object.assign({}, _this8.getStoryContext(story), {\n            viewMode: 'story'\n          });\n          return story.unboundStoryFn(Object.assign({}, context, update));\n        }\n      });\n    }\n  }]);\n  return StoryStore;\n}();","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","err","isArray","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","memoize","mapValues","pick","global","SynchronousPromise","StoryIndexStore","ArgsStore","GlobalsStore","processCSFFile","prepareStory","normalizeProjectAnnotations","HooksContext","CSF_CACHE_SIZE","STORY_CACHE_SIZE","StoryStore","_this","storyIndex","importFn","projectAnnotations","globals","hooks","cachedCSFFiles","processCSFFileWithCache","prepareStoryWithCache","initializationPromise","resolveInitializationPromise","getStoriesJsonData","getSetStoriesPayload","allowedParameters","stories","story","_global$FEATURES","assign","importPath","id","FEATURES","breakingChangesV7","kind","title","parameters","fileName","v","setProjectAnnotations","globalTypes","set","initialize","_ref","_ref$cache","cache","cacheAllCSFFiles","_onStoriesChanged","_regeneratorRuntime","mark","_callee","_ref2","wrap","_callee$","_context","prev","stop","onStoriesChanged","_x","loadCSFFileByStoryId","storyId","_this2","_this$storyIndex$stor","storyIdToEntry","moduleExports","loadAllCSFFiles","_this3","importPaths","entries","forEach","_ref3","_ref4","csfFilePromiseList","map","_ref5","_ref6","csfFile","all","list","reduce","acc","_ref7","_this4","csfFiles","_loadStory","_callee2","_ref8","_callee2$","_context2","sent","abrupt","storyFromCSFFile","loadStory","_x2","_ref9","storyAnnotations","Error","concat","componentAnnotations","meta","setInitial","componentStoriesFromCSFFile","_ref10","_this5","keys","filter","getStoryContext","get","cleanupStory","clean","extract","_this6","options","includeDocsOnly","_ref11","_ref12","docsOnly","storyAcc","_ref13","_ref14","sort","initialArgs","kindParameters","values","_ref15","globalParameters","raw","_this7","_ref16","fromId","_this8","_this$storyIndex$stor2","storyFn","update","context","viewMode","unboundStoryFn"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/@storybook/store/dist/esm/StoryStore.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport memoize from 'memoizerific';\nimport mapValues from 'lodash/mapValues';\nimport pick from 'lodash/pick';\nimport global from 'global';\nimport { SynchronousPromise } from 'synchronous-promise';\nimport { StoryIndexStore } from './StoryIndexStore';\nimport { ArgsStore } from './ArgsStore';\nimport { GlobalsStore } from './GlobalsStore';\nimport { processCSFFile, prepareStory, normalizeProjectAnnotations } from './csf';\nimport { HooksContext } from './hooks'; // TODO -- what are reasonable values for these?\n\nvar CSF_CACHE_SIZE = 1000;\nvar STORY_CACHE_SIZE = 10000;\nexport var StoryStore = /*#__PURE__*/function () {\n  function StoryStore() {\n    var _this = this;\n\n    _classCallCheck(this, StoryStore);\n\n    this.storyIndex = void 0;\n    this.importFn = void 0;\n    this.projectAnnotations = void 0;\n    this.globals = void 0;\n    this.args = void 0;\n    this.hooks = void 0;\n    this.cachedCSFFiles = void 0;\n    this.processCSFFileWithCache = void 0;\n    this.prepareStoryWithCache = void 0;\n    this.initializationPromise = void 0;\n    this.resolveInitializationPromise = void 0;\n\n    this.getStoriesJsonData = function () {\n      var value = _this.getSetStoriesPayload();\n\n      var allowedParameters = ['fileName', 'docsOnly', 'framework', '__id', '__isArgsStory'];\n      var stories = mapValues(value.stories, function (story) {\n        var _global$FEATURES;\n\n        return Object.assign({}, pick(story, ['id', 'name', 'title']), {\n          importPath: _this.storyIndex.stories[story.id].importPath\n        }, !((_global$FEATURES = global.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7) && {\n          kind: story.title,\n          story: story.name,\n          parameters: Object.assign({}, pick(story.parameters, allowedParameters), {\n            fileName: _this.storyIndex.stories[story.id].importPath\n          })\n        });\n      });\n      return {\n        v: 3,\n        stories: stories\n      };\n    };\n\n    this.globals = new GlobalsStore();\n    this.args = new ArgsStore();\n    this.hooks = {}; // We use a cache for these two functions for two reasons:\n    //  1. For performance\n    //  2. To ensure that when the same story is prepared with the same inputs you get the same output\n\n    this.processCSFFileWithCache = memoize(CSF_CACHE_SIZE)(processCSFFile);\n    this.prepareStoryWithCache = memoize(STORY_CACHE_SIZE)(prepareStory); // We cannot call `loadStory()` until we've been initialized properly. But we can wait for it.\n\n    this.initializationPromise = new SynchronousPromise(function (resolve) {\n      _this.resolveInitializationPromise = resolve;\n    });\n  }\n\n  _createClass(StoryStore, [{\n    key: \"setProjectAnnotations\",\n    value: function setProjectAnnotations(projectAnnotations) {\n      // By changing `this.projectAnnotations, we implicitly invalidate the `prepareStoryWithCache`\n      this.projectAnnotations = normalizeProjectAnnotations(projectAnnotations);\n      var globals = projectAnnotations.globals,\n          globalTypes = projectAnnotations.globalTypes;\n      this.globals.set({\n        globals: globals,\n        globalTypes: globalTypes\n      });\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize(_ref) {\n      var storyIndex = _ref.storyIndex,\n          importFn = _ref.importFn,\n          _ref$cache = _ref.cache,\n          cache = _ref$cache === void 0 ? false : _ref$cache;\n      this.storyIndex = new StoryIndexStore(storyIndex);\n      this.importFn = importFn; // We don't need the cache to be loaded to call `loadStory`, we just need the index ready\n\n      this.resolveInitializationPromise();\n      return cache ? this.cacheAllCSFFiles() : SynchronousPromise.resolve();\n    } // This means that one of the CSF files has changed.\n    // If the `importFn` has changed, we will invalidate both caches.\n    // If the `storyIndex` data has changed, we may or may not invalidate the caches, depending\n    // on whether we've loaded the relevant files yet.\n\n  }, {\n    key: \"onStoriesChanged\",\n    value: function () {\n      var _onStoriesChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref2) {\n        var importFn, storyIndex;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                importFn = _ref2.importFn, storyIndex = _ref2.storyIndex;\n                if (importFn) this.importFn = importFn;\n                if (storyIndex) this.storyIndex.stories = storyIndex.stories;\n\n                if (!this.cachedCSFFiles) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 6;\n                return this.cacheAllCSFFiles();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onStoriesChanged(_x) {\n        return _onStoriesChanged.apply(this, arguments);\n      }\n\n      return onStoriesChanged;\n    }() // To load a single CSF file to service a story we need to look up the importPath in the index\n\n  }, {\n    key: \"loadCSFFileByStoryId\",\n    value: function loadCSFFileByStoryId(storyId) {\n      var _this2 = this;\n\n      var _this$storyIndex$stor = this.storyIndex.storyIdToEntry(storyId),\n          importPath = _this$storyIndex$stor.importPath,\n          title = _this$storyIndex$stor.title;\n\n      return this.importFn(importPath).then(function (moduleExports) {\n        return (// We pass the title in here as it may have been generated by autoTitle on the server.\n          _this2.processCSFFileWithCache(moduleExports, importPath, title)\n        );\n      });\n    }\n  }, {\n    key: \"loadAllCSFFiles\",\n    value: function loadAllCSFFiles() {\n      var _this3 = this;\n\n      var importPaths = {};\n      Object.entries(this.storyIndex.stories).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            storyId = _ref4[0],\n            importPath = _ref4[1].importPath;\n\n        importPaths[importPath] = storyId;\n      });\n      var csfFilePromiseList = Object.entries(importPaths).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            importPath = _ref6[0],\n            storyId = _ref6[1];\n\n        return _this3.loadCSFFileByStoryId(storyId).then(function (csfFile) {\n          return {\n            importPath: importPath,\n            csfFile: csfFile\n          };\n        });\n      });\n      return SynchronousPromise.all(csfFilePromiseList).then(function (list) {\n        return list.reduce(function (acc, _ref7) {\n          var importPath = _ref7.importPath,\n              csfFile = _ref7.csfFile;\n          acc[importPath] = csfFile;\n          return acc;\n        }, {});\n      });\n    }\n  }, {\n    key: \"cacheAllCSFFiles\",\n    value: function cacheAllCSFFiles() {\n      var _this4 = this;\n\n      return this.initializationPromise.then(function () {\n        return _this4.loadAllCSFFiles().then(function (csfFiles) {\n          _this4.cachedCSFFiles = csfFiles;\n        });\n      });\n    } // Load the CSF file for a story and prepare the story from it and the project annotations.\n\n  }, {\n    key: \"loadStory\",\n    value: function () {\n      var _loadStory = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref8) {\n        var storyId, csfFile;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                storyId = _ref8.storyId;\n                _context2.next = 3;\n                return this.initializationPromise;\n\n              case 3:\n                _context2.next = 5;\n                return this.loadCSFFileByStoryId(storyId);\n\n              case 5:\n                csfFile = _context2.sent;\n                return _context2.abrupt(\"return\", this.storyFromCSFFile({\n                  storyId: storyId,\n                  csfFile: csfFile\n                }));\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadStory(_x2) {\n        return _loadStory.apply(this, arguments);\n      }\n\n      return loadStory;\n    }() // This function is synchronous for convenience -- often times if you have a CSF file already\n    // it is easier not to have to await `loadStory`.\n\n  }, {\n    key: \"storyFromCSFFile\",\n    value: function storyFromCSFFile(_ref9) {\n      var storyId = _ref9.storyId,\n          csfFile = _ref9.csfFile;\n      var storyAnnotations = csfFile.stories[storyId];\n\n      if (!storyAnnotations) {\n        throw new Error(\"Didn't find '\".concat(storyId, \"' in CSF file, this is unexpected\"));\n      }\n\n      var componentAnnotations = csfFile.meta;\n      var story = this.prepareStoryWithCache(storyAnnotations, componentAnnotations, this.projectAnnotations);\n      this.args.setInitial(story);\n      this.hooks[story.id] = this.hooks[story.id] || new HooksContext();\n      return story;\n    } // If we have a CSF file we can get all the stories from it synchronously\n\n  }, {\n    key: \"componentStoriesFromCSFFile\",\n    value: function componentStoriesFromCSFFile(_ref10) {\n      var _this5 = this;\n\n      var csfFile = _ref10.csfFile;\n      return Object.keys(this.storyIndex.stories).filter(function (storyId) {\n        return !!csfFile.stories[storyId];\n      }).map(function (storyId) {\n        return _this5.storyFromCSFFile({\n          storyId: storyId,\n          csfFile: csfFile\n        });\n      });\n    } // A prepared story does not include args, globals or hooks. These are stored in the story store\n    // and updated separtely to the (immutable) story.\n\n  }, {\n    key: \"getStoryContext\",\n    value: function getStoryContext(story) {\n      return Object.assign({}, story, {\n        args: this.args.get(story.id),\n        globals: this.globals.get(),\n        hooks: this.hooks[story.id]\n      });\n    }\n  }, {\n    key: \"cleanupStory\",\n    value: function cleanupStory(story) {\n      this.hooks[story.id].clean();\n    }\n  }, {\n    key: \"extract\",\n    value: function extract() {\n      var _this6 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeDocsOnly: false\n      };\n\n      if (!this.cachedCSFFiles) {\n        throw new Error('Cannot call extract() unless you call cacheAllCSFFiles() first.');\n      }\n\n      return Object.entries(this.storyIndex.stories).reduce(function (acc, _ref11) {\n        var _ref12 = _slicedToArray(_ref11, 2),\n            storyId = _ref12[0],\n            importPath = _ref12[1].importPath;\n\n        var csfFile = _this6.cachedCSFFiles[importPath];\n\n        var story = _this6.storyFromCSFFile({\n          storyId: storyId,\n          csfFile: csfFile\n        });\n\n        if (!options.includeDocsOnly && story.parameters.docsOnly) {\n          return acc;\n        }\n\n        acc[storyId] = Object.entries(story).reduce(function (storyAcc, _ref13) {\n          var _ref14 = _slicedToArray(_ref13, 2),\n              key = _ref14[0],\n              value = _ref14[1];\n\n          if (typeof value === 'function') {\n            return storyAcc;\n          }\n\n          if (Array.isArray(value)) {\n            return Object.assign(storyAcc, _defineProperty({}, key, value.slice().sort()));\n          }\n\n          return Object.assign(storyAcc, _defineProperty({}, key, value));\n        }, {\n          args: story.initialArgs\n        });\n        return acc;\n      }, {});\n    }\n  }, {\n    key: \"getSetStoriesPayload\",\n    value: function getSetStoriesPayload() {\n      var stories = this.extract({\n        includeDocsOnly: true\n      });\n      var kindParameters = Object.values(stories).reduce(function (acc, _ref15) {\n        var title = _ref15.title;\n        acc[title] = {};\n        return acc;\n      }, {});\n      return {\n        v: 2,\n        globals: this.globals.get(),\n        globalParameters: {},\n        kindParameters: kindParameters,\n        stories: stories\n      };\n    }\n  }, {\n    key: \"raw\",\n    value: function raw() {\n      var _this7 = this;\n\n      return Object.values(this.extract()).map(function (_ref16) {\n        var id = _ref16.id;\n        return _this7.fromId(id);\n      });\n    }\n  }, {\n    key: \"fromId\",\n    value: function fromId(storyId) {\n      var _this8 = this;\n\n      if (!this.cachedCSFFiles) {\n        throw new Error('Cannot call fromId/raw() unless you call cacheAllCSFFiles() first.');\n      }\n\n      var importPath;\n\n      try {\n        var _this$storyIndex$stor2 = this.storyIndex.storyIdToEntry(storyId);\n\n        importPath = _this$storyIndex$stor2.importPath;\n      } catch (err) {\n        return null;\n      }\n\n      var csfFile = this.cachedCSFFiles[importPath];\n      var story = this.storyFromCSFFile({\n        storyId: storyId,\n        csfFile: csfFile\n      });\n      return Object.assign({}, story, {\n        storyFn: function storyFn(update) {\n          var context = Object.assign({}, _this8.getStoryContext(story), {\n            viewMode: 'story'\n          });\n          return story.unboundStoryFn(Object.assign({}, context, update));\n        }\n      });\n    }\n  }]);\n\n  return StoryStore;\n}();"],"mappings":";AAAA,SAASA,eAAeA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAE;EAAE,IAAID,GAAG,IAAID,GAAG,EAAE;IAAEG,MAAM,CAACC,cAAc,CAACJ,GAAG,EAAEC,GAAG,EAAE;MAAEC,KAAK,EAAEA,KAAK;MAAEG,UAAU,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEP,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;EAAE;EAAE,OAAOF,GAAG;AAAE;AAEhN,SAASQ,cAAcA,CAACC,GAAG,EAAEC,CAAC,EAAE;EAAE,OAAOC,eAAe,CAACF,GAAG,CAAC,IAAIG,qBAAqB,CAACH,GAAG,EAAEC,CAAC,CAAC,IAAIG,2BAA2B,CAACJ,GAAG,EAAEC,CAAC,CAAC,IAAII,gBAAgB,CAAC,CAAC;AAAE;AAE7J,SAASA,gBAAgBA,CAAA,EAAG;EAAE,MAAM,IAAIC,SAAS,CAAC,2IAA2I,CAAC;AAAE;AAEhM,SAASF,2BAA2BA,CAACG,CAAC,EAAEC,MAAM,EAAE;EAAE,IAAI,CAACD,CAAC,EAAE;EAAQ,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE,OAAOE,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;EAAE,IAAIE,CAAC,GAAGhB,MAAM,CAACiB,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACN,CAAC,CAAC,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAAE,IAAIJ,CAAC,KAAK,QAAQ,IAAIH,CAAC,CAACQ,WAAW,EAAEL,CAAC,GAAGH,CAAC,CAACQ,WAAW,CAACC,IAAI;EAAE,IAAIN,CAAC,KAAK,KAAK,IAAIA,CAAC,KAAK,KAAK,EAAE,OAAOO,KAAK,CAACC,IAAI,CAACX,CAAC,CAAC;EAAE,IAAIG,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAACS,IAAI,CAACT,CAAC,CAAC,EAAE,OAAOD,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;AAAE;AAE/Z,SAASC,iBAAiBA,CAACT,GAAG,EAAEoB,GAAG,EAAE;EAAE,IAAIA,GAAG,IAAI,IAAI,IAAIA,GAAG,GAAGpB,GAAG,CAACqB,MAAM,EAAED,GAAG,GAAGpB,GAAG,CAACqB,MAAM;EAAE,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEqB,IAAI,GAAG,IAAIL,KAAK,CAACG,GAAG,CAAC,EAAEnB,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;IAAEqB,IAAI,CAACrB,CAAC,CAAC,GAAGD,GAAG,CAACC,CAAC,CAAC;EAAE;EAAE,OAAOqB,IAAI;AAAE;AAEtL,SAASnB,qBAAqBA,CAACH,GAAG,EAAEC,CAAC,EAAE;EAAE,IAAIsB,EAAE,GAAGvB,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,OAAOwB,MAAM,KAAK,WAAW,IAAIxB,GAAG,CAACwB,MAAM,CAACC,QAAQ,CAAC,IAAIzB,GAAG,CAAC,YAAY,CAAC;EAAE,IAAIuB,EAAE,IAAI,IAAI,EAAE;EAAQ,IAAIG,IAAI,GAAG,EAAE;EAAE,IAAIC,EAAE,GAAG,IAAI;EAAE,IAAIC,EAAE,GAAG,KAAK;EAAE,IAAIC,EAAE,EAAEC,EAAE;EAAE,IAAI;IAAE,KAAKP,EAAE,GAAGA,EAAE,CAACV,IAAI,CAACb,GAAG,CAAC,EAAE,EAAE2B,EAAE,GAAG,CAACE,EAAE,GAAGN,EAAE,CAACQ,IAAI,CAAC,CAAC,EAAEC,IAAI,CAAC,EAAEL,EAAE,GAAG,IAAI,EAAE;MAAED,IAAI,CAACO,IAAI,CAACJ,EAAE,CAACpC,KAAK,CAAC;MAAE,IAAIQ,CAAC,IAAIyB,IAAI,CAACL,MAAM,KAAKpB,CAAC,EAAE;IAAO;EAAE,CAAC,CAAC,OAAOiC,GAAG,EAAE;IAAEN,EAAE,GAAG,IAAI;IAAEE,EAAE,GAAGI,GAAG;EAAE,CAAC,SAAS;IAAE,IAAI;MAAE,IAAI,CAACP,EAAE,IAAIJ,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAEA,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAAE,CAAC,SAAS;MAAE,IAAIK,EAAE,EAAE,MAAME,EAAE;IAAE;EAAE;EAAE,OAAOJ,IAAI;AAAE;AAEhgB,SAASxB,eAAeA,CAACF,GAAG,EAAE;EAAE,IAAIiB,KAAK,CAACkB,OAAO,CAACnC,GAAG,CAAC,EAAE,OAAOA,GAAG;AAAE;AAEpE,OAAO,gCAAgC;AAEvC,SAASoC,kBAAkBA,CAACC,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEjD,GAAG,EAAEkD,GAAG,EAAE;EAAE,IAAI;IAAE,IAAIC,IAAI,GAAGN,GAAG,CAAC7C,GAAG,CAAC,CAACkD,GAAG,CAAC;IAAE,IAAIjD,KAAK,GAAGkD,IAAI,CAAClD,KAAK;EAAE,CAAC,CAAC,OAAOmD,KAAK,EAAE;IAAEL,MAAM,CAACK,KAAK,CAAC;IAAE;EAAQ;EAAE,IAAID,IAAI,CAACX,IAAI,EAAE;IAAEM,OAAO,CAAC7C,KAAK,CAAC;EAAE,CAAC,MAAM;IAAEoD,OAAO,CAACP,OAAO,CAAC7C,KAAK,CAAC,CAACqD,IAAI,CAACN,KAAK,EAAEC,MAAM,CAAC;EAAE;AAAE;AAExQ,SAASM,iBAAiBA,CAACC,EAAE,EAAE;EAAE,OAAO,YAAY;IAAE,IAAIC,IAAI,GAAG,IAAI;MAAEC,IAAI,GAAGC,SAAS;IAAE,OAAO,IAAIN,OAAO,CAAC,UAAUP,OAAO,EAAEC,MAAM,EAAE;MAAE,IAAIF,GAAG,GAAGW,EAAE,CAACI,KAAK,CAACH,IAAI,EAAEC,IAAI,CAAC;MAAE,SAASV,KAAKA,CAAC/C,KAAK,EAAE;QAAE2C,kBAAkB,CAACC,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAE,MAAM,EAAEhD,KAAK,CAAC;MAAE;MAAE,SAASgD,MAAMA,CAACP,GAAG,EAAE;QAAEE,kBAAkB,CAACC,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAE,OAAO,EAAEP,GAAG,CAAC;MAAE;MAAEM,KAAK,CAACa,SAAS,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAE;AAEpY,OAAO,qCAAqC;AAC5C,OAAO,qCAAqC;AAC5C,OAAO,wCAAwC;AAC/C,OAAO,iDAAiD;AACxD,OAAO,sCAAsC;AAC7C,OAAO,iCAAiC;AACxC,OAAO,oCAAoC;AAC3C,OAAO,mCAAmC;AAC1C,OAAO,kCAAkC;AACzC,OAAO,mCAAmC;AAC1C,OAAO,qCAAqC;AAC5C,OAAO,+BAA+B;AACtC,OAAO,8BAA8B;AACrC,OAAO,0CAA0C;AACjD,OAAO,uCAAuC;AAC9C,OAAO,sCAAsC;AAC7C,OAAO,uCAAuC;AAC9C,OAAO,iDAAiD;AACxD,OAAO,kCAAkC;AACzC,OAAO,mCAAmC;AAE1C,SAASC,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIlD,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAExJ,SAASmD,iBAAiBA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAAE,KAAK,IAAI1D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0D,KAAK,CAACtC,MAAM,EAAEpB,CAAC,EAAE,EAAE;IAAE,IAAI2D,UAAU,GAAGD,KAAK,CAAC1D,CAAC,CAAC;IAAE2D,UAAU,CAAChE,UAAU,GAAGgE,UAAU,CAAChE,UAAU,IAAI,KAAK;IAAEgE,UAAU,CAAC/D,YAAY,GAAG,IAAI;IAAE,IAAI,OAAO,IAAI+D,UAAU,EAAEA,UAAU,CAAC9D,QAAQ,GAAG,IAAI;IAAEJ,MAAM,CAACC,cAAc,CAAC+D,MAAM,EAAEE,UAAU,CAACpE,GAAG,EAAEoE,UAAU,CAAC;EAAE;AAAE;AAE5T,SAASC,YAAYA,CAACL,WAAW,EAAEM,UAAU,EAAEC,WAAW,EAAE;EAAE,IAAID,UAAU,EAAEL,iBAAiB,CAACD,WAAW,CAAC7C,SAAS,EAAEmD,UAAU,CAAC;EAAE,IAAIC,WAAW,EAAEN,iBAAiB,CAACD,WAAW,EAAEO,WAAW,CAAC;EAAErE,MAAM,CAACC,cAAc,CAAC6D,WAAW,EAAE,WAAW,EAAE;IAAE1D,QAAQ,EAAE;EAAM,CAAC,CAAC;EAAE,OAAO0D,WAAW;AAAE;AAE5R,OAAOQ,OAAO,MAAM,cAAc;AAClC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,kBAAkB,QAAQ,qBAAqB;AACxD,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,cAAc,EAAEC,YAAY,EAAEC,2BAA2B,QAAQ,OAAO;AACjF,SAASC,YAAY,QAAQ,SAAS,CAAC,CAAC;;AAExC,IAAIC,cAAc,GAAG,IAAI;AACzB,IAAIC,gBAAgB,GAAG,KAAK;AAC5B,OAAO,IAAIC,UAAU,GAAG,aAAa,YAAY;EAC/C,SAASA,UAAUA,CAAA,EAAG;IACpB,IAAIC,KAAK,GAAG,IAAI;IAEhBzB,eAAe,CAAC,IAAI,EAAEwB,UAAU,CAAC;IAEjC,IAAI,CAACE,UAAU,GAAG,KAAK,CAAC;IACxB,IAAI,CAACC,QAAQ,GAAG,KAAK,CAAC;IACtB,IAAI,CAACC,kBAAkB,GAAG,KAAK,CAAC;IAChC,IAAI,CAACC,OAAO,GAAG,KAAK,CAAC;IACrB,IAAI,CAACjC,IAAI,GAAG,KAAK,CAAC;IAClB,IAAI,CAACkC,KAAK,GAAG,KAAK,CAAC;IACnB,IAAI,CAACC,cAAc,GAAG,KAAK,CAAC;IAC5B,IAAI,CAACC,uBAAuB,GAAG,KAAK,CAAC;IACrC,IAAI,CAACC,qBAAqB,GAAG,KAAK,CAAC;IACnC,IAAI,CAACC,qBAAqB,GAAG,KAAK,CAAC;IACnC,IAAI,CAACC,4BAA4B,GAAG,KAAK,CAAC;IAE1C,IAAI,CAACC,kBAAkB,GAAG,YAAY;MACpC,IAAIjG,KAAK,GAAGsF,KAAK,CAACY,oBAAoB,CAAC,CAAC;MAExC,IAAIC,iBAAiB,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,eAAe,CAAC;MACtF,IAAIC,OAAO,GAAG5B,SAAS,CAACxE,KAAK,CAACoG,OAAO,EAAE,UAAUC,KAAK,EAAE;QACtD,IAAIC,gBAAgB;QAEpB,OAAOrG,MAAM,CAACsG,MAAM,CAAC,CAAC,CAAC,EAAE9B,IAAI,CAAC4B,KAAK,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,EAAE;UAC7DG,UAAU,EAAElB,KAAK,CAACC,UAAU,CAACa,OAAO,CAACC,KAAK,CAACI,EAAE,CAAC,CAACD;QACjD,CAAC,EAAE,EAAE,CAACF,gBAAgB,GAAG5B,MAAM,CAACgC,QAAQ,MAAM,IAAI,IAAIJ,gBAAgB,KAAK,KAAK,CAAC,IAAIA,gBAAgB,CAACK,iBAAiB,CAAC,IAAI;UAC1HC,IAAI,EAAEP,KAAK,CAACQ,KAAK;UACjBR,KAAK,EAAEA,KAAK,CAAC9E,IAAI;UACjBuF,UAAU,EAAE7G,MAAM,CAACsG,MAAM,CAAC,CAAC,CAAC,EAAE9B,IAAI,CAAC4B,KAAK,CAACS,UAAU,EAAEX,iBAAiB,CAAC,EAAE;YACvEY,QAAQ,EAAEzB,KAAK,CAACC,UAAU,CAACa,OAAO,CAACC,KAAK,CAACI,EAAE,CAAC,CAACD;UAC/C,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAO;QACLQ,CAAC,EAAE,CAAC;QACJZ,OAAO,EAAEA;MACX,CAAC;IACH,CAAC;IAED,IAAI,CAACV,OAAO,GAAG,IAAIZ,YAAY,CAAC,CAAC;IACjC,IAAI,CAACrB,IAAI,GAAG,IAAIoB,SAAS,CAAC,CAAC;IAC3B,IAAI,CAACc,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB;IACA;;IAEA,IAAI,CAACE,uBAAuB,GAAGtB,OAAO,CAACY,cAAc,CAAC,CAACJ,cAAc,CAAC;IACtE,IAAI,CAACe,qBAAqB,GAAGvB,OAAO,CAACa,gBAAgB,CAAC,CAACJ,YAAY,CAAC,CAAC,CAAC;;IAEtE,IAAI,CAACe,qBAAqB,GAAG,IAAIpB,kBAAkB,CAAC,UAAU9B,OAAO,EAAE;MACrEyC,KAAK,CAACU,4BAA4B,GAAGnD,OAAO;IAC9C,CAAC,CAAC;EACJ;EAEAuB,YAAY,CAACiB,UAAU,EAAE,CAAC;IACxBtF,GAAG,EAAE,uBAAuB;IAC5BC,KAAK,EAAE,SAASiH,qBAAqBA,CAACxB,kBAAkB,EAAE;MACxD;MACA,IAAI,CAACA,kBAAkB,GAAGR,2BAA2B,CAACQ,kBAAkB,CAAC;MACzE,IAAIC,OAAO,GAAGD,kBAAkB,CAACC,OAAO;QACpCwB,WAAW,GAAGzB,kBAAkB,CAACyB,WAAW;MAChD,IAAI,CAACxB,OAAO,CAACyB,GAAG,CAAC;QACfzB,OAAO,EAAEA,OAAO;QAChBwB,WAAW,EAAEA;MACf,CAAC,CAAC;IACJ;EACF,CAAC,EAAE;IACDnH,GAAG,EAAE,YAAY;IACjBC,KAAK,EAAE,SAASoH,UAAUA,CAACC,IAAI,EAAE;MAC/B,IAAI9B,UAAU,GAAG8B,IAAI,CAAC9B,UAAU;QAC5BC,QAAQ,GAAG6B,IAAI,CAAC7B,QAAQ;QACxB8B,UAAU,GAAGD,IAAI,CAACE,KAAK;QACvBA,KAAK,GAAGD,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,UAAU;MACtD,IAAI,CAAC/B,UAAU,GAAG,IAAIX,eAAe,CAACW,UAAU,CAAC;MACjD,IAAI,CAACC,QAAQ,GAAGA,QAAQ,CAAC,CAAC;;MAE1B,IAAI,CAACQ,4BAA4B,CAAC,CAAC;MACnC,OAAOuB,KAAK,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC,GAAG7C,kBAAkB,CAAC9B,OAAO,CAAC,CAAC;IACvE,CAAC,CAAC;IACF;IACA;IACA;EAEF,CAAC,EAAE;IACD9C,GAAG,EAAE,kBAAkB;IACvBC,KAAK,EAAE,YAAY;MACjB,IAAIyH,iBAAiB,GAAGnE,iBAAiB,EAAE,aAAaoE,mBAAA,CAAmBC,IAAI,CAAC,SAASC,OAAOA,CAACC,KAAK,EAAE;QACtG,IAAIrC,QAAQ,EAAED,UAAU;QACxB,OAAOmC,mBAAA,CAAmBI,IAAI,CAAC,SAASC,QAAQA,CAACC,QAAQ,EAAE;UACzD,OAAO,CAAC,EAAE;YACR,QAAQA,QAAQ,CAACC,IAAI,GAAGD,QAAQ,CAAC1F,IAAI;cACnC,KAAK,CAAC;gBACJkD,QAAQ,GAAGqC,KAAK,CAACrC,QAAQ,EAAED,UAAU,GAAGsC,KAAK,CAACtC,UAAU;gBACxD,IAAIC,QAAQ,EAAE,IAAI,CAACA,QAAQ,GAAGA,QAAQ;gBACtC,IAAID,UAAU,EAAE,IAAI,CAACA,UAAU,CAACa,OAAO,GAAGb,UAAU,CAACa,OAAO;gBAE5D,IAAI,CAAC,IAAI,CAACR,cAAc,EAAE;kBACxBoC,QAAQ,CAAC1F,IAAI,GAAG,CAAC;kBACjB;gBACF;gBAEA0F,QAAQ,CAAC1F,IAAI,GAAG,CAAC;gBACjB,OAAO,IAAI,CAACkF,gBAAgB,CAAC,CAAC;cAEhC,KAAK,CAAC;cACN,KAAK,KAAK;gBACR,OAAOQ,QAAQ,CAACE,IAAI,CAAC,CAAC;YAC1B;UACF;QACF,CAAC,EAAEN,OAAO,EAAE,IAAI,CAAC;MACnB,CAAC,CAAC,CAAC;MAEH,SAASO,gBAAgBA,CAACC,EAAE,EAAE;QAC5B,OAAOX,iBAAiB,CAAC9D,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC;MACjD;MAEA,OAAOyE,gBAAgB;IACzB,CAAC,CAAC,CAAC,CAAC;EAEN,CAAC,EAAE;IACDpI,GAAG,EAAE,sBAAsB;IAC3BC,KAAK,EAAE,SAASqI,oBAAoBA,CAACC,OAAO,EAAE;MAC5C,IAAIC,MAAM,GAAG,IAAI;MAEjB,IAAIC,qBAAqB,GAAG,IAAI,CAACjD,UAAU,CAACkD,cAAc,CAACH,OAAO,CAAC;QAC/D9B,UAAU,GAAGgC,qBAAqB,CAAChC,UAAU;QAC7CK,KAAK,GAAG2B,qBAAqB,CAAC3B,KAAK;MAEvC,OAAO,IAAI,CAACrB,QAAQ,CAACgB,UAAU,CAAC,CAACnD,IAAI,CAAC,UAAUqF,aAAa,EAAE;QAC7D;UAAQ;UACNH,MAAM,CAAC1C,uBAAuB,CAAC6C,aAAa,EAAElC,UAAU,EAAEK,KAAK;QAAC;MAEpE,CAAC,CAAC;IACJ;EACF,CAAC,EAAE;IACD9G,GAAG,EAAE,iBAAiB;IACtBC,KAAK,EAAE,SAAS2I,eAAeA,CAAA,EAAG;MAChC,IAAIC,MAAM,GAAG,IAAI;MAEjB,IAAIC,WAAW,GAAG,CAAC,CAAC;MACpB5I,MAAM,CAAC6I,OAAO,CAAC,IAAI,CAACvD,UAAU,CAACa,OAAO,CAAC,CAAC2C,OAAO,CAAC,UAAUC,KAAK,EAAE;QAC/D,IAAIC,KAAK,GAAG3I,cAAc,CAAC0I,KAAK,EAAE,CAAC,CAAC;UAChCV,OAAO,GAAGW,KAAK,CAAC,CAAC,CAAC;UAClBzC,UAAU,GAAGyC,KAAK,CAAC,CAAC,CAAC,CAACzC,UAAU;QAEpCqC,WAAW,CAACrC,UAAU,CAAC,GAAG8B,OAAO;MACnC,CAAC,CAAC;MACF,IAAIY,kBAAkB,GAAGjJ,MAAM,CAAC6I,OAAO,CAACD,WAAW,CAAC,CAACM,GAAG,CAAC,UAAUC,KAAK,EAAE;QACxE,IAAIC,KAAK,GAAG/I,cAAc,CAAC8I,KAAK,EAAE,CAAC,CAAC;UAChC5C,UAAU,GAAG6C,KAAK,CAAC,CAAC,CAAC;UACrBf,OAAO,GAAGe,KAAK,CAAC,CAAC,CAAC;QAEtB,OAAOT,MAAM,CAACP,oBAAoB,CAACC,OAAO,CAAC,CAACjF,IAAI,CAAC,UAAUiG,OAAO,EAAE;UAClE,OAAO;YACL9C,UAAU,EAAEA,UAAU;YACtB8C,OAAO,EAAEA;UACX,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAO3E,kBAAkB,CAAC4E,GAAG,CAACL,kBAAkB,CAAC,CAAC7F,IAAI,CAAC,UAAUmG,IAAI,EAAE;QACrE,OAAOA,IAAI,CAACC,MAAM,CAAC,UAAUC,GAAG,EAAEC,KAAK,EAAE;UACvC,IAAInD,UAAU,GAAGmD,KAAK,CAACnD,UAAU;YAC7B8C,OAAO,GAAGK,KAAK,CAACL,OAAO;UAC3BI,GAAG,CAAClD,UAAU,CAAC,GAAG8C,OAAO;UACzB,OAAOI,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;MACR,CAAC,CAAC;IACJ;EACF,CAAC,EAAE;IACD3J,GAAG,EAAE,kBAAkB;IACvBC,KAAK,EAAE,SAASwH,gBAAgBA,CAAA,EAAG;MACjC,IAAIoC,MAAM,GAAG,IAAI;MAEjB,OAAO,IAAI,CAAC7D,qBAAqB,CAAC1C,IAAI,CAAC,YAAY;QACjD,OAAOuG,MAAM,CAACjB,eAAe,CAAC,CAAC,CAACtF,IAAI,CAAC,UAAUwG,QAAQ,EAAE;UACvDD,MAAM,CAAChE,cAAc,GAAGiE,QAAQ;QAClC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EAEJ,CAAC,EAAE;IACD9J,GAAG,EAAE,WAAW;IAChBC,KAAK,EAAE,YAAY;MACjB,IAAI8J,UAAU,GAAGxG,iBAAiB,EAAE,aAAaoE,mBAAA,CAAmBC,IAAI,CAAC,SAASoC,QAAQA,CAACC,KAAK,EAAE;QAChG,IAAI1B,OAAO,EAAEgB,OAAO;QACpB,OAAO5B,mBAAA,CAAmBI,IAAI,CAAC,SAASmC,SAASA,CAACC,SAAS,EAAE;UAC3D,OAAO,CAAC,EAAE;YACR,QAAQA,SAAS,CAACjC,IAAI,GAAGiC,SAAS,CAAC5H,IAAI;cACrC,KAAK,CAAC;gBACJgG,OAAO,GAAG0B,KAAK,CAAC1B,OAAO;gBACvB4B,SAAS,CAAC5H,IAAI,GAAG,CAAC;gBAClB,OAAO,IAAI,CAACyD,qBAAqB;cAEnC,KAAK,CAAC;gBACJmE,SAAS,CAAC5H,IAAI,GAAG,CAAC;gBAClB,OAAO,IAAI,CAAC+F,oBAAoB,CAACC,OAAO,CAAC;cAE3C,KAAK,CAAC;gBACJgB,OAAO,GAAGY,SAAS,CAACC,IAAI;gBACxB,OAAOD,SAAS,CAACE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAACC,gBAAgB,CAAC;kBACtD/B,OAAO,EAAEA,OAAO;kBAChBgB,OAAO,EAAEA;gBACX,CAAC,CAAC,CAAC;cAEL,KAAK,CAAC;cACN,KAAK,KAAK;gBACR,OAAOY,SAAS,CAAChC,IAAI,CAAC,CAAC;YAC3B;UACF;QACF,CAAC,EAAE6B,QAAQ,EAAE,IAAI,CAAC;MACpB,CAAC,CAAC,CAAC;MAEH,SAASO,SAASA,CAACC,GAAG,EAAE;QACtB,OAAOT,UAAU,CAACnG,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC;MAC1C;MAEA,OAAO4G,SAAS;IAClB,CAAC,CAAC,CAAC,CAAC;IACJ;EAEF,CAAC,EAAE;IACDvK,GAAG,EAAE,kBAAkB;IACvBC,KAAK,EAAE,SAASqK,gBAAgBA,CAACG,KAAK,EAAE;MACtC,IAAIlC,OAAO,GAAGkC,KAAK,CAAClC,OAAO;QACvBgB,OAAO,GAAGkB,KAAK,CAAClB,OAAO;MAC3B,IAAImB,gBAAgB,GAAGnB,OAAO,CAAClD,OAAO,CAACkC,OAAO,CAAC;MAE/C,IAAI,CAACmC,gBAAgB,EAAE;QACrB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAACC,MAAM,CAACrC,OAAO,EAAE,mCAAmC,CAAC,CAAC;MACvF;MAEA,IAAIsC,oBAAoB,GAAGtB,OAAO,CAACuB,IAAI;MACvC,IAAIxE,KAAK,GAAG,IAAI,CAACP,qBAAqB,CAAC2E,gBAAgB,EAAEG,oBAAoB,EAAE,IAAI,CAACnF,kBAAkB,CAAC;MACvG,IAAI,CAAChC,IAAI,CAACqH,UAAU,CAACzE,KAAK,CAAC;MAC3B,IAAI,CAACV,KAAK,CAACU,KAAK,CAACI,EAAE,CAAC,GAAG,IAAI,CAACd,KAAK,CAACU,KAAK,CAACI,EAAE,CAAC,IAAI,IAAIvB,YAAY,CAAC,CAAC;MACjE,OAAOmB,KAAK;IACd,CAAC,CAAC;EAEJ,CAAC,EAAE;IACDtG,GAAG,EAAE,6BAA6B;IAClCC,KAAK,EAAE,SAAS+K,2BAA2BA,CAACC,MAAM,EAAE;MAClD,IAAIC,MAAM,GAAG,IAAI;MAEjB,IAAI3B,OAAO,GAAG0B,MAAM,CAAC1B,OAAO;MAC5B,OAAOrJ,MAAM,CAACiL,IAAI,CAAC,IAAI,CAAC3F,UAAU,CAACa,OAAO,CAAC,CAAC+E,MAAM,CAAC,UAAU7C,OAAO,EAAE;QACpE,OAAO,CAAC,CAACgB,OAAO,CAAClD,OAAO,CAACkC,OAAO,CAAC;MACnC,CAAC,CAAC,CAACa,GAAG,CAAC,UAAUb,OAAO,EAAE;QACxB,OAAO2C,MAAM,CAACZ,gBAAgB,CAAC;UAC7B/B,OAAO,EAAEA,OAAO;UAChBgB,OAAO,EAAEA;QACX,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACF;EAEF,CAAC,EAAE;IACDvJ,GAAG,EAAE,iBAAiB;IACtBC,KAAK,EAAE,SAASoL,eAAeA,CAAC/E,KAAK,EAAE;MACrC,OAAOpG,MAAM,CAACsG,MAAM,CAAC,CAAC,CAAC,EAAEF,KAAK,EAAE;QAC9B5C,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC4H,GAAG,CAAChF,KAAK,CAACI,EAAE,CAAC;QAC7Bf,OAAO,EAAE,IAAI,CAACA,OAAO,CAAC2F,GAAG,CAAC,CAAC;QAC3B1F,KAAK,EAAE,IAAI,CAACA,KAAK,CAACU,KAAK,CAACI,EAAE;MAC5B,CAAC,CAAC;IACJ;EACF,CAAC,EAAE;IACD1G,GAAG,EAAE,cAAc;IACnBC,KAAK,EAAE,SAASsL,YAAYA,CAACjF,KAAK,EAAE;MAClC,IAAI,CAACV,KAAK,CAACU,KAAK,CAACI,EAAE,CAAC,CAAC8E,KAAK,CAAC,CAAC;IAC9B;EACF,CAAC,EAAE;IACDxL,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,SAASwL,OAAOA,CAAA,EAAG;MACxB,IAAIC,MAAM,GAAG,IAAI;MAEjB,IAAIC,OAAO,GAAGhI,SAAS,CAAC9B,MAAM,GAAG,CAAC,IAAI8B,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG;QAChFiI,eAAe,EAAE;MACnB,CAAC;MAED,IAAI,CAAC,IAAI,CAAC/F,cAAc,EAAE;QACxB,MAAM,IAAI8E,KAAK,CAAC,iEAAiE,CAAC;MACpF;MAEA,OAAOzK,MAAM,CAAC6I,OAAO,CAAC,IAAI,CAACvD,UAAU,CAACa,OAAO,CAAC,CAACqD,MAAM,CAAC,UAAUC,GAAG,EAAEkC,MAAM,EAAE;QAC3E,IAAIC,MAAM,GAAGvL,cAAc,CAACsL,MAAM,EAAE,CAAC,CAAC;UAClCtD,OAAO,GAAGuD,MAAM,CAAC,CAAC,CAAC;UACnBrF,UAAU,GAAGqF,MAAM,CAAC,CAAC,CAAC,CAACrF,UAAU;QAErC,IAAI8C,OAAO,GAAGmC,MAAM,CAAC7F,cAAc,CAACY,UAAU,CAAC;QAE/C,IAAIH,KAAK,GAAGoF,MAAM,CAACpB,gBAAgB,CAAC;UAClC/B,OAAO,EAAEA,OAAO;UAChBgB,OAAO,EAAEA;QACX,CAAC,CAAC;QAEF,IAAI,CAACoC,OAAO,CAACC,eAAe,IAAItF,KAAK,CAACS,UAAU,CAACgF,QAAQ,EAAE;UACzD,OAAOpC,GAAG;QACZ;QAEAA,GAAG,CAACpB,OAAO,CAAC,GAAGrI,MAAM,CAAC6I,OAAO,CAACzC,KAAK,CAAC,CAACoD,MAAM,CAAC,UAAUsC,QAAQ,EAAEC,MAAM,EAAE;UACtE,IAAIC,MAAM,GAAG3L,cAAc,CAAC0L,MAAM,EAAE,CAAC,CAAC;YAClCjM,GAAG,GAAGkM,MAAM,CAAC,CAAC,CAAC;YACfjM,KAAK,GAAGiM,MAAM,CAAC,CAAC,CAAC;UAErB,IAAI,OAAOjM,KAAK,KAAK,UAAU,EAAE;YAC/B,OAAO+L,QAAQ;UACjB;UAEA,IAAIvK,KAAK,CAACkB,OAAO,CAAC1C,KAAK,CAAC,EAAE;YACxB,OAAOC,MAAM,CAACsG,MAAM,CAACwF,QAAQ,EAAElM,eAAe,CAAC,CAAC,CAAC,EAAEE,GAAG,EAAEC,KAAK,CAACqB,KAAK,CAAC,CAAC,CAAC6K,IAAI,CAAC,CAAC,CAAC,CAAC;UAChF;UAEA,OAAOjM,MAAM,CAACsG,MAAM,CAACwF,QAAQ,EAAElM,eAAe,CAAC,CAAC,CAAC,EAAEE,GAAG,EAAEC,KAAK,CAAC,CAAC;QACjE,CAAC,EAAE;UACDyD,IAAI,EAAE4C,KAAK,CAAC8F;QACd,CAAC,CAAC;QACF,OAAOzC,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IACR;EACF,CAAC,EAAE;IACD3J,GAAG,EAAE,sBAAsB;IAC3BC,KAAK,EAAE,SAASkG,oBAAoBA,CAAA,EAAG;MACrC,IAAIE,OAAO,GAAG,IAAI,CAACoF,OAAO,CAAC;QACzBG,eAAe,EAAE;MACnB,CAAC,CAAC;MACF,IAAIS,cAAc,GAAGnM,MAAM,CAACoM,MAAM,CAACjG,OAAO,CAAC,CAACqD,MAAM,CAAC,UAAUC,GAAG,EAAE4C,MAAM,EAAE;QACxE,IAAIzF,KAAK,GAAGyF,MAAM,CAACzF,KAAK;QACxB6C,GAAG,CAAC7C,KAAK,CAAC,GAAG,CAAC,CAAC;QACf,OAAO6C,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;MACN,OAAO;QACL1C,CAAC,EAAE,CAAC;QACJtB,OAAO,EAAE,IAAI,CAACA,OAAO,CAAC2F,GAAG,CAAC,CAAC;QAC3BkB,gBAAgB,EAAE,CAAC,CAAC;QACpBH,cAAc,EAAEA,cAAc;QAC9BhG,OAAO,EAAEA;MACX,CAAC;IACH;EACF,CAAC,EAAE;IACDrG,GAAG,EAAE,KAAK;IACVC,KAAK,EAAE,SAASwM,GAAGA,CAAA,EAAG;MACpB,IAAIC,MAAM,GAAG,IAAI;MAEjB,OAAOxM,MAAM,CAACoM,MAAM,CAAC,IAAI,CAACb,OAAO,CAAC,CAAC,CAAC,CAACrC,GAAG,CAAC,UAAUuD,MAAM,EAAE;QACzD,IAAIjG,EAAE,GAAGiG,MAAM,CAACjG,EAAE;QAClB,OAAOgG,MAAM,CAACE,MAAM,CAAClG,EAAE,CAAC;MAC1B,CAAC,CAAC;IACJ;EACF,CAAC,EAAE;IACD1G,GAAG,EAAE,QAAQ;IACbC,KAAK,EAAE,SAAS2M,MAAMA,CAACrE,OAAO,EAAE;MAC9B,IAAIsE,MAAM,GAAG,IAAI;MAEjB,IAAI,CAAC,IAAI,CAAChH,cAAc,EAAE;QACxB,MAAM,IAAI8E,KAAK,CAAC,oEAAoE,CAAC;MACvF;MAEA,IAAIlE,UAAU;MAEd,IAAI;QACF,IAAIqG,sBAAsB,GAAG,IAAI,CAACtH,UAAU,CAACkD,cAAc,CAACH,OAAO,CAAC;QAEpE9B,UAAU,GAAGqG,sBAAsB,CAACrG,UAAU;MAChD,CAAC,CAAC,OAAO/D,GAAG,EAAE;QACZ,OAAO,IAAI;MACb;MAEA,IAAI6G,OAAO,GAAG,IAAI,CAAC1D,cAAc,CAACY,UAAU,CAAC;MAC7C,IAAIH,KAAK,GAAG,IAAI,CAACgE,gBAAgB,CAAC;QAChC/B,OAAO,EAAEA,OAAO;QAChBgB,OAAO,EAAEA;MACX,CAAC,CAAC;MACF,OAAOrJ,MAAM,CAACsG,MAAM,CAAC,CAAC,CAAC,EAAEF,KAAK,EAAE;QAC9ByG,OAAO,EAAE,SAASA,OAAOA,CAACC,MAAM,EAAE;UAChC,IAAIC,OAAO,GAAG/M,MAAM,CAACsG,MAAM,CAAC,CAAC,CAAC,EAAEqG,MAAM,CAACxB,eAAe,CAAC/E,KAAK,CAAC,EAAE;YAC7D4G,QAAQ,EAAE;UACZ,CAAC,CAAC;UACF,OAAO5G,KAAK,CAAC6G,cAAc,CAACjN,MAAM,CAACsG,MAAM,CAAC,CAAC,CAAC,EAAEyG,OAAO,EAAED,MAAM,CAAC,CAAC;QACjE;MACF,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,CAAC;EAEH,OAAO1H,UAAU;AACnB,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}