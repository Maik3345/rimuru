{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { combineArgs, mapArgsToTypes, validateOptions, deepDiff, DEEPLY_EQUAL } from './args';\nfunction deleteUndefined(obj) {\n  // eslint-disable-next-line no-param-reassign\n  Object.keys(obj).forEach(function (key) {\n    return obj[key] === undefined && delete obj[key];\n  });\n  return obj;\n}\nexport var ArgsStore = /*#__PURE__*/function () {\n  function ArgsStore() {\n    _classCallCheck(this, ArgsStore);\n    this.initialArgsByStoryId = {};\n    this.argsByStoryId = {};\n  }\n  _createClass(ArgsStore, [{\n    key: \"get\",\n    value: function get(storyId) {\n      if (!(storyId in this.argsByStoryId)) {\n        throw new Error(\"No args known for \".concat(storyId, \" -- has it been rendered yet?\"));\n      }\n      return this.argsByStoryId[storyId];\n    }\n  }, {\n    key: \"setInitial\",\n    value: function setInitial(story) {\n      if (!this.initialArgsByStoryId[story.id]) {\n        this.initialArgsByStoryId[story.id] = story.initialArgs;\n        this.argsByStoryId[story.id] = story.initialArgs;\n      } else if (this.initialArgsByStoryId[story.id] !== story.initialArgs) {\n        // When we get a new version of a story (with new initialArgs), we re-apply the same diff\n        // that we had previously applied to the old version of the story\n        var delta = deepDiff(this.initialArgsByStoryId[story.id], this.argsByStoryId[story.id]);\n        this.initialArgsByStoryId[story.id] = story.initialArgs;\n        this.argsByStoryId[story.id] = story.initialArgs;\n        if (delta !== DEEPLY_EQUAL) {\n          this.updateFromDelta(story, delta);\n        }\n      }\n    }\n  }, {\n    key: \"updateFromDelta\",\n    value: function updateFromDelta(story, delta) {\n      // Use the argType to ensure we setting a type with defined options to something outside of that\n      var validatedDelta = validateOptions(delta, story.argTypes); // NOTE: we use `combineArgs` here rather than `combineParameters` because changes to arg\n      // array values are persisted in the URL as sparse arrays, and we have to take that into\n      // account when overriding the initialArgs (e.g. we patch [,'changed'] over ['initial', 'val'])\n\n      this.argsByStoryId[story.id] = combineArgs(this.argsByStoryId[story.id], validatedDelta);\n    }\n  }, {\n    key: \"updateFromPersisted\",\n    value: function updateFromPersisted(story, persisted) {\n      // Use the argType to ensure we aren't persisting the wrong type of value to the type.\n      // For instance you could try and set a string-valued arg to a number by changing the URL\n      var mappedPersisted = mapArgsToTypes(persisted, story.argTypes);\n      return this.updateFromDelta(story, mappedPersisted);\n    }\n  }, {\n    key: \"update\",\n    value: function update(storyId, argsUpdate) {\n      if (!(storyId in this.argsByStoryId)) {\n        throw new Error(\"No args known for \".concat(storyId, \" -- has it been rendered yet?\"));\n      }\n      this.argsByStoryId[storyId] = deleteUndefined(Object.assign({}, this.argsByStoryId[storyId], argsUpdate));\n    }\n  }]);\n  return ArgsStore;\n}();","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","combineArgs","mapArgsToTypes","validateOptions","deepDiff","DEEPLY_EQUAL","deleteUndefined","obj","keys","forEach","undefined","ArgsStore","initialArgsByStoryId","argsByStoryId","value","get","storyId","Error","concat","setInitial","story","id","initialArgs","delta","updateFromDelta","validatedDelta","argTypes","updateFromPersisted","persisted","mappedPersisted","update","argsUpdate","assign"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/@storybook/store/dist/esm/ArgsStore.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport { combineArgs, mapArgsToTypes, validateOptions, deepDiff, DEEPLY_EQUAL } from './args';\n\nfunction deleteUndefined(obj) {\n  // eslint-disable-next-line no-param-reassign\n  Object.keys(obj).forEach(function (key) {\n    return obj[key] === undefined && delete obj[key];\n  });\n  return obj;\n}\n\nexport var ArgsStore = /*#__PURE__*/function () {\n  function ArgsStore() {\n    _classCallCheck(this, ArgsStore);\n\n    this.initialArgsByStoryId = {};\n    this.argsByStoryId = {};\n  }\n\n  _createClass(ArgsStore, [{\n    key: \"get\",\n    value: function get(storyId) {\n      if (!(storyId in this.argsByStoryId)) {\n        throw new Error(\"No args known for \".concat(storyId, \" -- has it been rendered yet?\"));\n      }\n\n      return this.argsByStoryId[storyId];\n    }\n  }, {\n    key: \"setInitial\",\n    value: function setInitial(story) {\n      if (!this.initialArgsByStoryId[story.id]) {\n        this.initialArgsByStoryId[story.id] = story.initialArgs;\n        this.argsByStoryId[story.id] = story.initialArgs;\n      } else if (this.initialArgsByStoryId[story.id] !== story.initialArgs) {\n        // When we get a new version of a story (with new initialArgs), we re-apply the same diff\n        // that we had previously applied to the old version of the story\n        var delta = deepDiff(this.initialArgsByStoryId[story.id], this.argsByStoryId[story.id]);\n        this.initialArgsByStoryId[story.id] = story.initialArgs;\n        this.argsByStoryId[story.id] = story.initialArgs;\n\n        if (delta !== DEEPLY_EQUAL) {\n          this.updateFromDelta(story, delta);\n        }\n      }\n    }\n  }, {\n    key: \"updateFromDelta\",\n    value: function updateFromDelta(story, delta) {\n      // Use the argType to ensure we setting a type with defined options to something outside of that\n      var validatedDelta = validateOptions(delta, story.argTypes); // NOTE: we use `combineArgs` here rather than `combineParameters` because changes to arg\n      // array values are persisted in the URL as sparse arrays, and we have to take that into\n      // account when overriding the initialArgs (e.g. we patch [,'changed'] over ['initial', 'val'])\n\n      this.argsByStoryId[story.id] = combineArgs(this.argsByStoryId[story.id], validatedDelta);\n    }\n  }, {\n    key: \"updateFromPersisted\",\n    value: function updateFromPersisted(story, persisted) {\n      // Use the argType to ensure we aren't persisting the wrong type of value to the type.\n      // For instance you could try and set a string-valued arg to a number by changing the URL\n      var mappedPersisted = mapArgsToTypes(persisted, story.argTypes);\n      return this.updateFromDelta(story, mappedPersisted);\n    }\n  }, {\n    key: \"update\",\n    value: function update(storyId, argsUpdate) {\n      if (!(storyId in this.argsByStoryId)) {\n        throw new Error(\"No args known for \".concat(storyId, \" -- has it been rendered yet?\"));\n      }\n\n      this.argsByStoryId[storyId] = deleteUndefined(Object.assign({}, this.argsByStoryId[storyId], argsUpdate));\n    }\n  }]);\n\n  return ArgsStore;\n}();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}