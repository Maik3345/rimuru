{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\n// NOTE: The types exported from this file are simplified versions of the types exported\n// by @storybook/csf, with the simpler form retained for backwards compatibility.\n// We will likely start exporting the more complex <StoryFnReturnType> based types in 7.0\n// The `any` here is the story store's `StoreItem` record. Ideally we should probably only\n// pass a defined subset of that full data, but we pass it all so far :shrug:\nexport var types;\n(function (types) {\n  types[\"TAB\"] = \"tab\";\n  types[\"PANEL\"] = \"panel\";\n  types[\"TOOL\"] = \"tool\";\n  types[\"TOOLEXTRA\"] = \"toolextra\";\n  types[\"PREVIEW\"] = \"preview\";\n  types[\"NOTES_ELEMENT\"] = \"notes-element\";\n})(types || (types = {}));\nexport function isSupportedType(type) {\n  return !!Object.values(types).find(function (typeVal) {\n    return typeVal === type;\n  });\n}","map":{"version":3,"names":["types","isSupportedType","type","Object","values","find","typeVal"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/@storybook/addons/dist/esm/types.js"],"sourcesContent":["import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\n// NOTE: The types exported from this file are simplified versions of the types exported\n// by @storybook/csf, with the simpler form retained for backwards compatibility.\n// We will likely start exporting the more complex <StoryFnReturnType> based types in 7.0\n// The `any` here is the story store's `StoreItem` record. Ideally we should probably only\n// pass a defined subset of that full data, but we pass it all so far :shrug:\nexport var types;\n\n(function (types) {\n  types[\"TAB\"] = \"tab\";\n  types[\"PANEL\"] = \"panel\";\n  types[\"TOOL\"] = \"tool\";\n  types[\"TOOLEXTRA\"] = \"toolextra\";\n  types[\"PREVIEW\"] = \"preview\";\n  types[\"NOTES_ELEMENT\"] = \"notes-element\";\n})(types || (types = {}));\n\nexport function isSupportedType(type) {\n  return !!Object.values(types).find(function (typeVal) {\n    return typeVal === type;\n  });\n}"],"mappings":"AAAA,OAAO,kCAAkC;AACzC,OAAO,wCAAwC;AAC/C,OAAO,qCAAqC;AAC5C;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,KAAK;AAEhB,CAAC,UAAUA,KAAK,EAAE;EAChBA,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK;EACpBA,KAAK,CAAC,OAAO,CAAC,GAAG,OAAO;EACxBA,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM;EACtBA,KAAK,CAAC,WAAW,CAAC,GAAG,WAAW;EAChCA,KAAK,CAAC,SAAS,CAAC,GAAG,SAAS;EAC5BA,KAAK,CAAC,eAAe,CAAC,GAAG,eAAe;AAC1C,CAAC,EAAEA,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AAEzB,OAAO,SAASC,eAAeA,CAACC,IAAI,EAAE;EACpC,OAAO,CAAC,CAACC,MAAM,CAACC,MAAM,CAACJ,KAAK,CAAC,CAACK,IAAI,CAAC,UAAUC,OAAO,EAAE;IACpD,OAAOA,OAAO,KAAKJ,IAAI;EACzB,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}