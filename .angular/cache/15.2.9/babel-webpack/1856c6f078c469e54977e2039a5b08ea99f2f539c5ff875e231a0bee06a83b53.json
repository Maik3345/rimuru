{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { parseJsDoc } from '../jsdocParser';\nimport { TypeSystem } from './types';\nimport { getDocgenSection, isValidDocgenSection, getDocgenDescription } from './utils';\nimport { getPropDefFactory } from './createPropDef';\nvar getTypeSystem = function getTypeSystem(docgenInfo) {\n  if (docgenInfo.type != null) {\n    return TypeSystem.JAVASCRIPT;\n  }\n  if (docgenInfo.flowType != null) {\n    return TypeSystem.FLOW;\n  }\n  if (docgenInfo.tsType != null) {\n    return TypeSystem.TYPESCRIPT;\n  }\n  return TypeSystem.UNKNOWN;\n};\nexport var extractComponentSectionArray = function extractComponentSectionArray(docgenSection) {\n  var typeSystem = getTypeSystem(docgenSection[0]);\n  var createPropDef = getPropDefFactory(typeSystem);\n  return docgenSection.map(function (item) {\n    var _item$type;\n    var sanitizedItem = item;\n    if ((_item$type = item.type) !== null && _item$type !== void 0 && _item$type.elements) {\n      sanitizedItem = Object.assign({}, item, {\n        type: Object.assign({}, item.type, {\n          value: item.type.elements\n        })\n      });\n    }\n    return extractProp(sanitizedItem.name, sanitizedItem, typeSystem, createPropDef);\n  });\n};\nexport var extractComponentSectionObject = function extractComponentSectionObject(docgenSection) {\n  var docgenPropsKeys = Object.keys(docgenSection);\n  var typeSystem = getTypeSystem(docgenSection[docgenPropsKeys[0]]);\n  var createPropDef = getPropDefFactory(typeSystem);\n  return docgenPropsKeys.map(function (propName) {\n    var docgenInfo = docgenSection[propName];\n    return docgenInfo != null ? extractProp(propName, docgenInfo, typeSystem, createPropDef) : null;\n  }).filter(Boolean);\n};\nexport var extractComponentProps = function extractComponentProps(component, section) {\n  var docgenSection = getDocgenSection(component, section);\n  if (!isValidDocgenSection(docgenSection)) {\n    return [];\n  } // vue-docgen-api has diverged from react-docgen and returns an array\n\n  return Array.isArray(docgenSection) ? extractComponentSectionArray(docgenSection) : extractComponentSectionObject(docgenSection);\n};\nfunction extractProp(propName, docgenInfo, typeSystem, createPropDef) {\n  var jsDocParsingResult = parseJsDoc(docgenInfo.description);\n  var isIgnored = jsDocParsingResult.includesJsDoc && jsDocParsingResult.ignore;\n  if (!isIgnored) {\n    var propDef = createPropDef(propName, docgenInfo, jsDocParsingResult);\n    return {\n      propDef: propDef,\n      jsDocTags: jsDocParsingResult.extractedTags,\n      docgenInfo: docgenInfo,\n      typeSystem: typeSystem\n    };\n  }\n  return null;\n}\nexport function extractComponentDescription(component) {\n  return component != null && getDocgenDescription(component);\n}","map":{"version":3,"names":["parseJsDoc","TypeSystem","getDocgenSection","isValidDocgenSection","getDocgenDescription","getPropDefFactory","getTypeSystem","docgenInfo","type","JAVASCRIPT","flowType","FLOW","tsType","TYPESCRIPT","UNKNOWN","extractComponentSectionArray","docgenSection","typeSystem","createPropDef","map","item","_item$type","sanitizedItem","elements","Object","assign","value","extractProp","name","extractComponentSectionObject","docgenPropsKeys","keys","propName","filter","Boolean","extractComponentProps","component","section","Array","isArray","jsDocParsingResult","description","isIgnored","includesJsDoc","ignore","propDef","jsDocTags","extractedTags","extractComponentDescription"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/extractDocgenProps.js"],"sourcesContent":["import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { parseJsDoc } from '../jsdocParser';\nimport { TypeSystem } from './types';\nimport { getDocgenSection, isValidDocgenSection, getDocgenDescription } from './utils';\nimport { getPropDefFactory } from './createPropDef';\n\nvar getTypeSystem = function getTypeSystem(docgenInfo) {\n  if (docgenInfo.type != null) {\n    return TypeSystem.JAVASCRIPT;\n  }\n\n  if (docgenInfo.flowType != null) {\n    return TypeSystem.FLOW;\n  }\n\n  if (docgenInfo.tsType != null) {\n    return TypeSystem.TYPESCRIPT;\n  }\n\n  return TypeSystem.UNKNOWN;\n};\n\nexport var extractComponentSectionArray = function extractComponentSectionArray(docgenSection) {\n  var typeSystem = getTypeSystem(docgenSection[0]);\n  var createPropDef = getPropDefFactory(typeSystem);\n  return docgenSection.map(function (item) {\n    var _item$type;\n\n    var sanitizedItem = item;\n\n    if ((_item$type = item.type) !== null && _item$type !== void 0 && _item$type.elements) {\n      sanitizedItem = Object.assign({}, item, {\n        type: Object.assign({}, item.type, {\n          value: item.type.elements\n        })\n      });\n    }\n\n    return extractProp(sanitizedItem.name, sanitizedItem, typeSystem, createPropDef);\n  });\n};\nexport var extractComponentSectionObject = function extractComponentSectionObject(docgenSection) {\n  var docgenPropsKeys = Object.keys(docgenSection);\n  var typeSystem = getTypeSystem(docgenSection[docgenPropsKeys[0]]);\n  var createPropDef = getPropDefFactory(typeSystem);\n  return docgenPropsKeys.map(function (propName) {\n    var docgenInfo = docgenSection[propName];\n    return docgenInfo != null ? extractProp(propName, docgenInfo, typeSystem, createPropDef) : null;\n  }).filter(Boolean);\n};\nexport var extractComponentProps = function extractComponentProps(component, section) {\n  var docgenSection = getDocgenSection(component, section);\n\n  if (!isValidDocgenSection(docgenSection)) {\n    return [];\n  } // vue-docgen-api has diverged from react-docgen and returns an array\n\n\n  return Array.isArray(docgenSection) ? extractComponentSectionArray(docgenSection) : extractComponentSectionObject(docgenSection);\n};\n\nfunction extractProp(propName, docgenInfo, typeSystem, createPropDef) {\n  var jsDocParsingResult = parseJsDoc(docgenInfo.description);\n  var isIgnored = jsDocParsingResult.includesJsDoc && jsDocParsingResult.ignore;\n\n  if (!isIgnored) {\n    var propDef = createPropDef(propName, docgenInfo, jsDocParsingResult);\n    return {\n      propDef: propDef,\n      jsDocTags: jsDocParsingResult.extractedTags,\n      docgenInfo: docgenInfo,\n      typeSystem: typeSystem\n    };\n  }\n\n  return null;\n}\n\nexport function extractComponentDescription(component) {\n  return component != null && getDocgenDescription(component);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}