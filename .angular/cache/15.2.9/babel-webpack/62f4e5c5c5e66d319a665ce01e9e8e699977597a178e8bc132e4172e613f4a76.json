{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.freeze.js\";\nvar _templateObject;\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nimport mapValues from 'lodash/mapValues';\nimport dedent from 'ts-dedent';\nimport { logger } from '@storybook/client-logger';\nimport { combineParameters } from './parameters';\nvar inferType = function inferType(value, name, visited) {\n  var type = _typeof(value);\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'function':\n    case 'symbol':\n      return {\n        name: type\n      };\n    default:\n      break;\n  }\n  if (value) {\n    if (visited.has(value)) {\n      logger.warn(dedent(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n        We've detected a cycle in arg '\", \"'. Args should be JSON-serializable.\\n\\n        Consider using the mapping feature or fully custom args:\\n        - Mapping: https://storybook.js.org/docs/react/writing-stories/args#mapping-to-complex-arg-values\\n        - Custom args: https://storybook.js.org/docs/react/essentials/controls#fully-custom-args\\n      \"])), name));\n      return {\n        name: 'other',\n        value: 'cyclic object'\n      };\n    }\n    visited.add(value);\n    if (Array.isArray(value)) {\n      var childType = value.length > 0 ? inferType(value[0], name, new Set(visited)) : {\n        name: 'other',\n        value: 'unknown'\n      };\n      return {\n        name: 'array',\n        value: childType\n      };\n    }\n    var fieldTypes = mapValues(value, function (field) {\n      return inferType(field, name, new Set(visited));\n    });\n    return {\n      name: 'object',\n      value: fieldTypes\n    };\n  }\n  return {\n    name: 'object',\n    value: {}\n  };\n};\nexport var inferArgTypes = function inferArgTypes(context) {\n  var id = context.id,\n    _context$argTypes = context.argTypes,\n    userArgTypes = _context$argTypes === void 0 ? {} : _context$argTypes,\n    _context$initialArgs = context.initialArgs,\n    initialArgs = _context$initialArgs === void 0 ? {} : _context$initialArgs;\n  var argTypes = mapValues(initialArgs, function (arg, key) {\n    return {\n      name: key,\n      type: inferType(arg, \"\".concat(id, \".\").concat(key), new Set())\n    };\n  });\n  var userArgTypesNames = mapValues(userArgTypes, function (argType, key) {\n    return {\n      name: key\n    };\n  });\n  return combineParameters(argTypes, userArgTypesNames, userArgTypes);\n};\ninferArgTypes.secondPass = true;","map":{"version":3,"names":["_templateObject","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","_typeof","obj","Symbol","iterator","constructor","prototype","mapValues","dedent","logger","combineParameters","inferType","name","visited","type","has","warn","add","Array","isArray","childType","length","Set","fieldTypes","field","inferArgTypes","context","id","_context$argTypes","argTypes","userArgTypes","_context$initialArgs","initialArgs","arg","key","concat","userArgTypesNames","argType","secondPass"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/@storybook/store/dist/esm/inferArgTypes.js"],"sourcesContent":["import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.freeze.js\";\n\nvar _templateObject;\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport mapValues from 'lodash/mapValues';\nimport dedent from 'ts-dedent';\nimport { logger } from '@storybook/client-logger';\nimport { combineParameters } from './parameters';\n\nvar inferType = function inferType(value, name, visited) {\n  var type = _typeof(value);\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'function':\n    case 'symbol':\n      return {\n        name: type\n      };\n\n    default:\n      break;\n  }\n\n  if (value) {\n    if (visited.has(value)) {\n      logger.warn(dedent(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n        We've detected a cycle in arg '\", \"'. Args should be JSON-serializable.\\n\\n        Consider using the mapping feature or fully custom args:\\n        - Mapping: https://storybook.js.org/docs/react/writing-stories/args#mapping-to-complex-arg-values\\n        - Custom args: https://storybook.js.org/docs/react/essentials/controls#fully-custom-args\\n      \"])), name));\n      return {\n        name: 'other',\n        value: 'cyclic object'\n      };\n    }\n\n    visited.add(value);\n\n    if (Array.isArray(value)) {\n      var childType = value.length > 0 ? inferType(value[0], name, new Set(visited)) : {\n        name: 'other',\n        value: 'unknown'\n      };\n      return {\n        name: 'array',\n        value: childType\n      };\n    }\n\n    var fieldTypes = mapValues(value, function (field) {\n      return inferType(field, name, new Set(visited));\n    });\n    return {\n      name: 'object',\n      value: fieldTypes\n    };\n  }\n\n  return {\n    name: 'object',\n    value: {}\n  };\n};\n\nexport var inferArgTypes = function inferArgTypes(context) {\n  var id = context.id,\n      _context$argTypes = context.argTypes,\n      userArgTypes = _context$argTypes === void 0 ? {} : _context$argTypes,\n      _context$initialArgs = context.initialArgs,\n      initialArgs = _context$initialArgs === void 0 ? {} : _context$initialArgs;\n  var argTypes = mapValues(initialArgs, function (arg, key) {\n    return {\n      name: key,\n      type: inferType(arg, \"\".concat(id, \".\").concat(key), new Set())\n    };\n  });\n  var userArgTypesNames = mapValues(userArgTypes, function (argType, key) {\n    return {\n      name: key\n    };\n  });\n  return combineParameters(argTypes, userArgTypesNames, userArgTypes);\n};\ninferArgTypes.secondPass = true;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}