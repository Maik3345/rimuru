{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\n\n/* eslint-disable no-case-declarations */\nimport mapValues from 'lodash/mapValues';\nimport { includesQuotes, trimQuotes } from '../utils';\nvar SIGNATURE_REGEXP = /^\\(.*\\) => /;\nexport var convert = function convert(type) {\n  var name = type.name,\n    raw = type.raw,\n    computed = type.computed,\n    value = type.value;\n  var base = {};\n  if (typeof raw !== 'undefined') base.raw = raw;\n  switch (name) {\n    case 'enum':\n      {\n        var _values = computed ? value : value.map(function (v) {\n          var trimmedValue = trimQuotes(v.value);\n          return includesQuotes(v.value) || Number.isNaN(Number(trimmedValue)) ? trimmedValue : Number(trimmedValue);\n        });\n        return Object.assign({}, base, {\n          name: name,\n          value: _values\n        });\n      }\n    case 'string':\n    case 'number':\n    case 'symbol':\n      return Object.assign({}, base, {\n        name: name\n      });\n    case 'func':\n      return Object.assign({}, base, {\n        name: 'function'\n      });\n    case 'bool':\n    case 'boolean':\n      return Object.assign({}, base, {\n        name: 'boolean'\n      });\n    case 'arrayOf':\n    case 'array':\n      return Object.assign({}, base, {\n        name: 'array',\n        value: value && convert(value)\n      });\n    case 'object':\n      return Object.assign({}, base, {\n        name: name\n      });\n    case 'objectOf':\n      return Object.assign({}, base, {\n        name: name,\n        value: convert(value)\n      });\n    case 'shape':\n    case 'exact':\n      var values = mapValues(value, function (field) {\n        return convert(field);\n      });\n      return Object.assign({}, base, {\n        name: 'object',\n        value: values\n      });\n    case 'union':\n      return Object.assign({}, base, {\n        name: 'union',\n        value: value.map(function (v) {\n          return convert(v);\n        })\n      });\n    case 'instanceOf':\n    case 'element':\n    case 'elementType':\n    default:\n      {\n        if ((name === null || name === void 0 ? void 0 : name.indexOf('|')) > 0) {\n          // react-docgen-typescript-plugin doesn't always produce enum-like unions\n          // (like if a user has turned off shouldExtractValuesFromUnion) so here we\n          // try to recover and construct one.\n          try {\n            var literalValues = name.split('|').map(function (v) {\n              return JSON.parse(v);\n            });\n            return Object.assign({}, base, {\n              name: 'enum',\n              value: literalValues\n            });\n          } catch (err) {// fall through\n          }\n        }\n        var otherVal = value ? \"\".concat(name, \"(\").concat(value, \")\") : name;\n        var otherName = SIGNATURE_REGEXP.test(name) ? 'function' : 'other';\n        return Object.assign({}, base, {\n          name: otherName,\n          value: otherVal\n        });\n      }\n  }\n};","map":{"version":3,"names":["mapValues","includesQuotes","trimQuotes","SIGNATURE_REGEXP","convert","type","name","raw","computed","value","base","_values","map","v","trimmedValue","Number","isNaN","Object","assign","values","field","indexOf","literalValues","split","JSON","parse","err","otherVal","concat","otherName","test"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/proptypes/convert.js"],"sourcesContent":["import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\n\n/* eslint-disable no-case-declarations */\nimport mapValues from 'lodash/mapValues';\nimport { includesQuotes, trimQuotes } from '../utils';\nvar SIGNATURE_REGEXP = /^\\(.*\\) => /;\nexport var convert = function convert(type) {\n  var name = type.name,\n      raw = type.raw,\n      computed = type.computed,\n      value = type.value;\n  var base = {};\n  if (typeof raw !== 'undefined') base.raw = raw;\n\n  switch (name) {\n    case 'enum':\n      {\n        var _values = computed ? value : value.map(function (v) {\n          var trimmedValue = trimQuotes(v.value);\n          return includesQuotes(v.value) || Number.isNaN(Number(trimmedValue)) ? trimmedValue : Number(trimmedValue);\n        });\n\n        return Object.assign({}, base, {\n          name: name,\n          value: _values\n        });\n      }\n\n    case 'string':\n    case 'number':\n    case 'symbol':\n      return Object.assign({}, base, {\n        name: name\n      });\n\n    case 'func':\n      return Object.assign({}, base, {\n        name: 'function'\n      });\n\n    case 'bool':\n    case 'boolean':\n      return Object.assign({}, base, {\n        name: 'boolean'\n      });\n\n    case 'arrayOf':\n    case 'array':\n      return Object.assign({}, base, {\n        name: 'array',\n        value: value && convert(value)\n      });\n\n    case 'object':\n      return Object.assign({}, base, {\n        name: name\n      });\n\n    case 'objectOf':\n      return Object.assign({}, base, {\n        name: name,\n        value: convert(value)\n      });\n\n    case 'shape':\n    case 'exact':\n      var values = mapValues(value, function (field) {\n        return convert(field);\n      });\n      return Object.assign({}, base, {\n        name: 'object',\n        value: values\n      });\n\n    case 'union':\n      return Object.assign({}, base, {\n        name: 'union',\n        value: value.map(function (v) {\n          return convert(v);\n        })\n      });\n\n    case 'instanceOf':\n    case 'element':\n    case 'elementType':\n    default:\n      {\n        if ((name === null || name === void 0 ? void 0 : name.indexOf('|')) > 0) {\n          // react-docgen-typescript-plugin doesn't always produce enum-like unions\n          // (like if a user has turned off shouldExtractValuesFromUnion) so here we\n          // try to recover and construct one.\n          try {\n            var literalValues = name.split('|').map(function (v) {\n              return JSON.parse(v);\n            });\n            return Object.assign({}, base, {\n              name: 'enum',\n              value: literalValues\n            });\n          } catch (err) {// fall through\n          }\n        }\n\n        var otherVal = value ? \"\".concat(name, \"(\").concat(value, \")\") : name;\n        var otherName = SIGNATURE_REGEXP.test(name) ? 'function' : 'other';\n        return Object.assign({}, base, {\n          name: otherName,\n          value: otherVal\n        });\n      }\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}