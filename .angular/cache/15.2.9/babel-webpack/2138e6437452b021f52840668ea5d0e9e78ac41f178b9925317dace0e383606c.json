{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $TypeError = require('es-errors/type');\nvar $asyncIterator = GetIntrinsic('%Symbol.asyncIterator%', true);\nvar inspect = require('object-inspect');\nvar hasSymbols = require('has-symbols')();\nvar AdvanceStringIndex = require('./AdvanceStringIndex');\nvar CreateAsyncFromSyncIterator = require('./CreateAsyncFromSyncIterator');\nvar GetIteratorFromMethod = require('./GetIteratorFromMethod');\nvar GetMethod = require('./GetMethod');\nvar IsArray = require('./IsArray');\nvar getIteratorMethod = require('../helpers/getIteratorMethod');\n\n// https://262.ecma-international.org/14.0/#sec-getiterator\n\nmodule.exports = function GetIterator(obj, kind) {\n  if (kind !== 'sync' && kind !== 'async') {\n    throw new $TypeError(\"Assertion failed: `kind` must be one of 'sync' or 'async', got \" + inspect(kind));\n  }\n  var method;\n  if (kind === 'async') {\n    // step 1\n    if (hasSymbols && $asyncIterator) {\n      method = GetMethod(obj, $asyncIterator); // step 1.a\n    }\n  }\n  if (typeof method === 'undefined') {\n    // step 1.b\n    // var syncMethod = GetMethod(obj, $iterator); // step 1.b.i\n    var syncMethod = getIteratorMethod({\n      AdvanceStringIndex: AdvanceStringIndex,\n      GetMethod: GetMethod,\n      IsArray: IsArray\n    }, obj);\n    if (kind === 'async') {\n      if (typeof syncMethod === 'undefined') {\n        throw new $TypeError('iterator method is `undefined`'); // step 1.b.ii\n      }\n      var syncIteratorRecord = GetIteratorFromMethod(obj, syncMethod); // step 1.b.iii\n      return CreateAsyncFromSyncIterator(syncIteratorRecord); // step 1.b.iv\n    }\n    method = syncMethod; // step 2, kind of\n  }\n  if (typeof method === 'undefined') {\n    throw new $TypeError('iterator method is `undefined`'); // step 3\n  }\n  return GetIteratorFromMethod(obj, method); // step 4\n};","map":{"version":3,"names":["GetIntrinsic","require","$TypeError","$asyncIterator","inspect","hasSymbols","AdvanceStringIndex","CreateAsyncFromSyncIterator","GetIteratorFromMethod","GetMethod","IsArray","getIteratorMethod","module","exports","GetIterator","obj","kind","method","syncMethod","syncIteratorRecord"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/es-abstract/2023/GetIterator.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = require('es-errors/type');\nvar $asyncIterator = GetIntrinsic('%Symbol.asyncIterator%', true);\n\nvar inspect = require('object-inspect');\nvar hasSymbols = require('has-symbols')();\n\nvar AdvanceStringIndex = require('./AdvanceStringIndex');\nvar CreateAsyncFromSyncIterator = require('./CreateAsyncFromSyncIterator');\nvar GetIteratorFromMethod = require('./GetIteratorFromMethod');\nvar GetMethod = require('./GetMethod');\nvar IsArray = require('./IsArray');\n\nvar getIteratorMethod = require('../helpers/getIteratorMethod');\n\n// https://262.ecma-international.org/14.0/#sec-getiterator\n\nmodule.exports = function GetIterator(obj, kind) {\n\tif (kind !== 'sync' && kind !== 'async') {\n\t\tthrow new $TypeError(\"Assertion failed: `kind` must be one of 'sync' or 'async', got \" + inspect(kind));\n\t}\n\n\tvar method;\n\tif (kind === 'async') { // step 1\n\t\tif (hasSymbols && $asyncIterator) {\n\t\t\tmethod = GetMethod(obj, $asyncIterator); // step 1.a\n\t\t}\n\t}\n\tif (typeof method === 'undefined') { // step 1.b\n\t\t// var syncMethod = GetMethod(obj, $iterator); // step 1.b.i\n\t\tvar syncMethod = getIteratorMethod(\n\t\t\t{\n\t\t\t\tAdvanceStringIndex: AdvanceStringIndex,\n\t\t\t\tGetMethod: GetMethod,\n\t\t\t\tIsArray: IsArray\n\t\t\t},\n\t\t\tobj\n\t\t);\n\t\tif (kind === 'async') {\n\t\t\tif (typeof syncMethod === 'undefined') {\n\t\t\t\tthrow new $TypeError('iterator method is `undefined`'); // step 1.b.ii\n\t\t\t}\n\t\t\tvar syncIteratorRecord = GetIteratorFromMethod(obj, syncMethod); // step 1.b.iii\n\t\t\treturn CreateAsyncFromSyncIterator(syncIteratorRecord); // step 1.b.iv\n\t\t}\n\t\tmethod = syncMethod; // step 2, kind of\n\t}\n\n\tif (typeof method === 'undefined') {\n\t\tthrow new $TypeError('iterator method is `undefined`'); // step 3\n\t}\n\treturn GetIteratorFromMethod(obj, method); // step 4\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAIC,UAAU,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC1C,IAAIE,cAAc,GAAGH,YAAY,CAAC,wBAAwB,EAAE,IAAI,CAAC;AAEjE,IAAII,OAAO,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AACvC,IAAII,UAAU,GAAGJ,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;AAEzC,IAAIK,kBAAkB,GAAGL,OAAO,CAAC,sBAAsB,CAAC;AACxD,IAAIM,2BAA2B,GAAGN,OAAO,CAAC,+BAA+B,CAAC;AAC1E,IAAIO,qBAAqB,GAAGP,OAAO,CAAC,yBAAyB,CAAC;AAC9D,IAAIQ,SAAS,GAAGR,OAAO,CAAC,aAAa,CAAC;AACtC,IAAIS,OAAO,GAAGT,OAAO,CAAC,WAAW,CAAC;AAElC,IAAIU,iBAAiB,GAAGV,OAAO,CAAC,8BAA8B,CAAC;;AAE/D;;AAEAW,MAAM,CAACC,OAAO,GAAG,SAASC,WAAWA,CAACC,GAAG,EAAEC,IAAI,EAAE;EAChD,IAAIA,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,OAAO,EAAE;IACxC,MAAM,IAAId,UAAU,CAAC,iEAAiE,GAAGE,OAAO,CAACY,IAAI,CAAC,CAAC;EACxG;EAEA,IAAIC,MAAM;EACV,IAAID,IAAI,KAAK,OAAO,EAAE;IAAE;IACvB,IAAIX,UAAU,IAAIF,cAAc,EAAE;MACjCc,MAAM,GAAGR,SAAS,CAACM,GAAG,EAAEZ,cAAc,CAAC,CAAC,CAAC;IAC1C;EACD;EACA,IAAI,OAAOc,MAAM,KAAK,WAAW,EAAE;IAAE;IACpC;IACA,IAAIC,UAAU,GAAGP,iBAAiB,CACjC;MACCL,kBAAkB,EAAEA,kBAAkB;MACtCG,SAAS,EAAEA,SAAS;MACpBC,OAAO,EAAEA;IACV,CAAC,EACDK,GACD,CAAC;IACD,IAAIC,IAAI,KAAK,OAAO,EAAE;MACrB,IAAI,OAAOE,UAAU,KAAK,WAAW,EAAE;QACtC,MAAM,IAAIhB,UAAU,CAAC,gCAAgC,CAAC,CAAC,CAAC;MACzD;MACA,IAAIiB,kBAAkB,GAAGX,qBAAqB,CAACO,GAAG,EAAEG,UAAU,CAAC,CAAC,CAAC;MACjE,OAAOX,2BAA2B,CAACY,kBAAkB,CAAC,CAAC,CAAC;IACzD;IACAF,MAAM,GAAGC,UAAU,CAAC,CAAC;EACtB;EAEA,IAAI,OAAOD,MAAM,KAAK,WAAW,EAAE;IAClC,MAAM,IAAIf,UAAU,CAAC,gCAAgC,CAAC,CAAC,CAAC;EACzD;EACA,OAAOM,qBAAqB,CAACO,GAAG,EAAEE,MAAM,CAAC,CAAC,CAAC;AAC5C,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}