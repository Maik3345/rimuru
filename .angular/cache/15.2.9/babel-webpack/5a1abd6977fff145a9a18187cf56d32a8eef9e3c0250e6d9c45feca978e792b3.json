{"ast":null,"code":"/*!\n * https://github.com/es-shims/es5-shim\n * @license es5-shim Copyright 2009-2020 by contributors, MIT License\n * see https://github.com/es-shims/es5-shim/blob/master/LICENSE\n */\n\n// vim: ts=4 sts=4 sw=4 expandtab\n\n// Add semicolon to prevent IIFE from being passed as argument to concatenated code.\n; // eslint-disable-line no-extra-semi\n\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n(function (root, factory) {\n  'use strict';\n\n  /* global define */\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(factory);\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.returnExports = factory(); // eslint-disable-line no-param-reassign\n  }\n})(this, function () {\n  var call = Function.call;\n  var prototypeOfObject = Object.prototype;\n  var owns = call.bind(prototypeOfObject.hasOwnProperty);\n  var isEnumerable = call.bind(prototypeOfObject.propertyIsEnumerable);\n  var toStr = call.bind(prototypeOfObject.toString);\n\n  // If JS engine supports accessors creating shortcuts.\n  var defineGetter;\n  var defineSetter;\n  var lookupGetter;\n  var lookupSetter;\n  var supportsAccessors = owns(prototypeOfObject, '__defineGetter__');\n  if (supportsAccessors) {\n    /* eslint-disable no-underscore-dangle, no-restricted-properties */\n    defineGetter = call.bind(prototypeOfObject.__defineGetter__);\n    defineSetter = call.bind(prototypeOfObject.__defineSetter__);\n    lookupGetter = call.bind(prototypeOfObject.__lookupGetter__);\n    lookupSetter = call.bind(prototypeOfObject.__lookupSetter__);\n    /* eslint-enable no-underscore-dangle, no-restricted-properties */\n  }\n  var isPrimitive = function isPrimitive(o) {\n    return o == null || typeof o !== 'object' && typeof o !== 'function';\n  };\n\n  // ES5 15.2.3.2\n  // https://es5.github.io/#x15.2.3.2\n  if (!Object.getPrototypeOf) {\n    // https://github.com/es-shims/es5-shim/issues#issue/2\n    // https://johnresig.com/blog/objectgetprototypeof/\n    // recommended by fschaefer on github\n    //\n    // sure, and webreflection says ^_^\n    // ... this will nerever possibly return null\n    // ... Opera Mini breaks here with infinite loops\n    Object.getPrototypeOf = function getPrototypeOf(object) {\n      // eslint-disable-next-line no-proto\n      var proto = object.__proto__;\n      if (proto || proto == null) {\n        // `undefined` is for pre-proto browsers\n        return proto;\n      } else if (toStr(object.constructor) === '[object Function]') {\n        return object.constructor.prototype;\n      } else if (object instanceof Object) {\n        return prototypeOfObject;\n      }\n      // Correctly return null for Objects created with `Object.create(null)`\n      // (shammed or native) or `{ __proto__: null}`.  Also returns null for\n      // cross-realm objects on browsers that lack `__proto__` support (like\n      // IE <11), but that's the best we can do.\n      return null;\n    };\n  }\n\n  // ES5 15.2.3.3\n  // https://es5.github.io/#x15.2.3.3\n\n  // check whether getOwnPropertyDescriptor works if it's given. Otherwise, shim partially.\n  if (Object.defineProperty) {\n    var doesGetOwnPropertyDescriptorWork = function doesGetOwnPropertyDescriptorWork(object) {\n      try {\n        object.sentinel = 0; // eslint-disable-line no-param-reassign\n        return Object.getOwnPropertyDescriptor(object, 'sentinel').value === 0;\n      } catch (exception) {\n        return false;\n      }\n    };\n    var getOwnPropertyDescriptorWorksOnObject = doesGetOwnPropertyDescriptorWork({});\n    var getOwnPropertyDescriptorWorksOnDom = typeof document === 'undefined' || doesGetOwnPropertyDescriptorWork(document.createElement('div'));\n    if (!getOwnPropertyDescriptorWorksOnDom || !getOwnPropertyDescriptorWorksOnObject) {\n      var getOwnPropertyDescriptorFallback = Object.getOwnPropertyDescriptor;\n    }\n  }\n  if (!Object.getOwnPropertyDescriptor || getOwnPropertyDescriptorFallback) {\n    var ERR_NON_OBJECT = 'Object.getOwnPropertyDescriptor called on a non-object: ';\n\n    /* eslint-disable no-proto */\n    Object.getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n      if (isPrimitive(object)) {\n        throw new TypeError(ERR_NON_OBJECT + object);\n      }\n\n      // make a valiant attempt to use the real getOwnPropertyDescriptor\n      // for I8's DOM elements.\n      if (getOwnPropertyDescriptorFallback) {\n        try {\n          return getOwnPropertyDescriptorFallback.call(Object, object, property);\n        } catch (exception) {\n          // try the shim if the real one doesn't work\n        }\n      }\n      var descriptor;\n\n      // If object does not owns property return undefined immediately.\n      if (!owns(object, property)) {\n        return descriptor;\n      }\n\n      // If object has a property then it's for sure `configurable`, and\n      // probably `enumerable`. Detect enumerability though.\n      descriptor = {\n        enumerable: isEnumerable(object, property),\n        configurable: true\n      };\n\n      // If JS engine supports accessor properties then property may be a\n      // getter or setter.\n      if (supportsAccessors) {\n        // Unfortunately `__lookupGetter__` will return a getter even\n        // if object has own non getter property along with a same named\n        // inherited getter. To avoid misbehavior we temporary remove\n        // `__proto__` so that `__lookupGetter__` will return getter only\n        // if it's owned by an object.\n        var prototype = object.__proto__;\n        var notPrototypeOfObject = object !== prototypeOfObject;\n        // avoid recursion problem, breaking in Opera Mini when\n        // Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n        // or any other Object.prototype accessor\n        if (notPrototypeOfObject) {\n          object.__proto__ = prototypeOfObject; // eslint-disable-line no-param-reassign\n        }\n        var getter = lookupGetter(object, property);\n        var setter = lookupSetter(object, property);\n        if (notPrototypeOfObject) {\n          // Once we have getter and setter we can put values back.\n          object.__proto__ = prototype; // eslint-disable-line no-param-reassign\n        }\n        if (getter || setter) {\n          if (getter) {\n            descriptor.get = getter;\n          }\n          if (setter) {\n            descriptor.set = setter;\n          }\n          // If it was accessor property we're done and return here\n          // in order to avoid adding `value` to the descriptor.\n          return descriptor;\n        }\n      }\n\n      // If we got this far we know that object has an own property that is\n      // not an accessor so we set it as a value and return descriptor.\n      descriptor.value = object[property];\n      descriptor.writable = true;\n      return descriptor;\n    };\n    /* eslint-enable no-proto */\n  }\n\n  // ES5 15.2.3.4\n  // https://es5.github.io/#x15.2.3.4\n  if (!Object.getOwnPropertyNames) {\n    Object.getOwnPropertyNames = function getOwnPropertyNames(object) {\n      return Object.keys(object);\n    };\n  }\n\n  // ES5 15.2.3.5\n  // https://es5.github.io/#x15.2.3.5\n  if (!Object.create) {\n    // Contributed by Brandon Benvie, October, 2012\n    var createEmpty;\n    var supportsProto = !({\n      __proto__: null\n    } instanceof Object);\n    // the following produces false positives\n    // in Opera Mini => not a reliable check\n    // Object.prototype.__proto__ === null\n\n    // Check for document.domain and active x support\n    // No need to use active x approach when document.domain is not set\n    // see https://github.com/es-shims/es5-shim/issues/150\n    // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n    /* global ActiveXObject */\n    var shouldUseActiveX = function shouldUseActiveX() {\n      // return early if document.domain not set\n      if (!document.domain) {\n        return false;\n      }\n      try {\n        return !!new ActiveXObject('htmlfile');\n      } catch (exception) {\n        return false;\n      }\n    };\n\n    // This supports IE8 when document.domain is used\n    // see https://github.com/es-shims/es5-shim/issues/150\n    // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n    var getEmptyViaActiveX = function getEmptyViaActiveX() {\n      var empty;\n      var xDoc;\n      xDoc = new ActiveXObject('htmlfile');\n      var script = 'script';\n      xDoc.write('<' + script + '></' + script + '>');\n      xDoc.close();\n      empty = xDoc.parentWindow.Object.prototype;\n      xDoc = null;\n      return empty;\n    };\n\n    // The original implementation using an iframe\n    // before the activex approach was added\n    // see https://github.com/es-shims/es5-shim/issues/150\n    var getEmptyViaIFrame = function getEmptyViaIFrame() {\n      var iframe = document.createElement('iframe');\n      var parent = document.body || document.documentElement;\n      var empty;\n      iframe.style.display = 'none';\n      parent.appendChild(iframe);\n      // eslint-disable-next-line no-script-url\n      iframe.src = 'javascript:';\n      empty = iframe.contentWindow.Object.prototype;\n      parent.removeChild(iframe);\n      iframe = null;\n      return empty;\n    };\n\n    /* global document */\n    if (supportsProto || typeof document === 'undefined') {\n      createEmpty = function () {\n        return {\n          __proto__: null\n        };\n      };\n    } else {\n      // In old IE __proto__ can't be used to manually set `null`, nor does\n      // any other method exist to make an object that inherits from nothing,\n      // aside from Object.prototype itself. Instead, create a new global\n      // object and *steal* its Object.prototype and strip it bare. This is\n      // used as the prototype to create nullary objects.\n      createEmpty = function () {\n        // Determine which approach to use\n        // see https://github.com/es-shims/es5-shim/issues/150\n        var empty = shouldUseActiveX() ? getEmptyViaActiveX() : getEmptyViaIFrame();\n        delete empty.constructor;\n        delete empty.hasOwnProperty;\n        delete empty.propertyIsEnumerable;\n        delete empty.isPrototypeOf;\n        delete empty.toLocaleString;\n        delete empty.toString;\n        delete empty.valueOf;\n        var Empty = function Empty() {};\n        Empty.prototype = empty;\n        // short-circuit future calls\n        createEmpty = function () {\n          return new Empty();\n        };\n        return new Empty();\n      };\n    }\n    Object.create = function create(prototype, properties) {\n      var object;\n      var Type = function Type() {}; // An empty constructor.\n\n      if (prototype === null) {\n        object = createEmpty();\n      } else if (isPrimitive(prototype)) {\n        // In the native implementation `parent` can be `null`\n        // OR *any* `instanceof Object`  (Object|Function|Array|RegExp|etc)\n        // Use `typeof` tho, b/c in old IE, DOM elements are not `instanceof Object`\n        // like they are in modern browsers. Using `Object.create` on DOM elements\n        // is...err...probably inappropriate, but the native version allows for it.\n        throw new TypeError('Object prototype may only be an Object or null'); // same msg as Chrome\n      } else {\n        Type.prototype = prototype;\n        object = new Type();\n        // IE has no built-in implementation of `Object.getPrototypeOf`\n        // neither `__proto__`, but this manually setting `__proto__` will\n        // guarantee that `Object.getPrototypeOf` will work as expected with\n        // objects created using `Object.create`\n        // eslint-disable-next-line no-proto\n        object.__proto__ = prototype;\n      }\n      if (properties !== void 0) {\n        Object.defineProperties(object, properties);\n      }\n      return object;\n    };\n  }\n\n  // ES5 15.2.3.6\n  // https://es5.github.io/#x15.2.3.6\n\n  // Patch for WebKit and IE8 standard mode\n  // Designed by hax <hax.github.com>\n  // related issue: https://github.com/es-shims/es5-shim/issues#issue/5\n  // IE8 Reference:\n  //     https://msdn.microsoft.com/en-us/library/dd282900.aspx\n  //     https://msdn.microsoft.com/en-us/library/dd229916.aspx\n  // WebKit Bugs:\n  //     https://bugs.webkit.org/show_bug.cgi?id=36423\n\n  var doesDefinePropertyWork = function doesDefinePropertyWork(object) {\n    try {\n      Object.defineProperty(object, 'sentinel', {});\n      return 'sentinel' in object;\n    } catch (exception) {\n      return false;\n    }\n  };\n\n  // check whether defineProperty works if it's given. Otherwise,\n  // shim partially.\n  if (Object.defineProperty) {\n    var definePropertyWorksOnObject = doesDefinePropertyWork({});\n    var definePropertyWorksOnDom = typeof document === 'undefined' || doesDefinePropertyWork(document.createElement('div'));\n    if (!definePropertyWorksOnObject || !definePropertyWorksOnDom) {\n      var definePropertyFallback = Object.defineProperty,\n        definePropertiesFallback = Object.defineProperties;\n    }\n  }\n  if (!Object.defineProperty || definePropertyFallback) {\n    var ERR_NON_OBJECT_DESCRIPTOR = 'Property description must be an object: ';\n    var ERR_NON_OBJECT_TARGET = 'Object.defineProperty called on non-object: ';\n    var ERR_ACCESSORS_NOT_SUPPORTED = 'getters & setters can not be defined on this javascript engine';\n    Object.defineProperty = function defineProperty(object, property, descriptor) {\n      if (isPrimitive(object)) {\n        throw new TypeError(ERR_NON_OBJECT_TARGET + object);\n      }\n      if (isPrimitive(descriptor)) {\n        throw new TypeError(ERR_NON_OBJECT_DESCRIPTOR + descriptor);\n      }\n      // make a valiant attempt to use the real defineProperty\n      // for I8's DOM elements.\n      if (definePropertyFallback) {\n        try {\n          return definePropertyFallback.call(Object, object, property, descriptor);\n        } catch (exception) {\n          // try the shim if the real one doesn't work\n        }\n      }\n\n      // If it's a data property.\n      if ('value' in descriptor) {\n        // fail silently if 'writable', 'enumerable', or 'configurable'\n        // are requested but not supported\n        /*\n        // alternate approach:\n        if ( // can't implement these features; allow false but not true\n            ('writable' in descriptor && !descriptor.writable) ||\n            ('enumerable' in descriptor && !descriptor.enumerable) ||\n            ('configurable' in descriptor && !descriptor.configurable)\n        ))\n            throw new RangeError(\n                'This implementation of Object.defineProperty does not support configurable, enumerable, or writable.'\n            );\n        */\n\n        if (supportsAccessors && (lookupGetter(object, property) || lookupSetter(object, property))) {\n          // As accessors are supported only on engines implementing\n          // `__proto__` we can safely override `__proto__` while defining\n          // a property to make sure that we don't hit an inherited\n          // accessor.\n          /* eslint-disable no-proto, no-param-reassign */\n          var prototype = object.__proto__;\n          object.__proto__ = prototypeOfObject;\n          // Deleting a property anyway since getter / setter may be\n          // defined on object itself.\n          delete object[property];\n          object[property] = descriptor.value;\n          // Setting original `__proto__` back now.\n          object.__proto__ = prototype;\n          /* eslint-enable no-proto, no-param-reassign */\n        } else {\n          object[property] = descriptor.value; // eslint-disable-line no-param-reassign\n        }\n      } else {\n        var hasGetter = ('get' in descriptor);\n        var hasSetter = ('set' in descriptor);\n        if (!supportsAccessors && (hasGetter || hasSetter)) {\n          throw new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\n        }\n        // If we got that far then getters and setters can be defined !!\n        if (hasGetter) {\n          defineGetter(object, property, descriptor.get);\n        }\n        if (hasSetter) {\n          defineSetter(object, property, descriptor.set);\n        }\n      }\n      return object;\n    };\n  }\n\n  // ES5 15.2.3.7\n  // https://es5.github.io/#x15.2.3.7\n  if (!Object.defineProperties || definePropertiesFallback) {\n    Object.defineProperties = function defineProperties(object, properties) {\n      // make a valiant attempt to use the real defineProperties\n      if (definePropertiesFallback) {\n        try {\n          return definePropertiesFallback.call(Object, object, properties);\n        } catch (exception) {\n          // try the shim if the real one doesn't work\n        }\n      }\n      Object.keys(properties).forEach(function (property) {\n        if (property !== '__proto__') {\n          Object.defineProperty(object, property, properties[property]);\n        }\n      });\n      return object;\n    };\n  }\n\n  // ES5 15.2.3.8\n  // https://es5.github.io/#x15.2.3.8\n  if (!Object.seal) {\n    Object.seal = function seal(object) {\n      if (Object(object) !== object) {\n        throw new TypeError('Object.seal can only be called on Objects.');\n      }\n      // this is misleading and breaks feature-detection, but\n      // allows \"securable\" code to \"gracefully\" degrade to working\n      // but insecure code.\n      return object;\n    };\n  }\n\n  // ES5 15.2.3.9\n  // https://es5.github.io/#x15.2.3.9\n  if (!Object.freeze) {\n    Object.freeze = function freeze(object) {\n      if (Object(object) !== object) {\n        throw new TypeError('Object.freeze can only be called on Objects.');\n      }\n      // this is misleading and breaks feature-detection, but\n      // allows \"securable\" code to \"gracefully\" degrade to working\n      // but insecure code.\n      return object;\n    };\n  }\n\n  // detect a Rhino bug and patch it\n  try {\n    Object.freeze(function () {});\n  } catch (exception) {\n    Object.freeze = function (freezeObject) {\n      return function freeze(object) {\n        if (typeof object === 'function') {\n          return object;\n        }\n        return freezeObject(object);\n      };\n    }(Object.freeze);\n  }\n\n  // ES5 15.2.3.10\n  // https://es5.github.io/#x15.2.3.10\n  if (!Object.preventExtensions) {\n    Object.preventExtensions = function preventExtensions(object) {\n      if (Object(object) !== object) {\n        throw new TypeError('Object.preventExtensions can only be called on Objects.');\n      }\n      // this is misleading and breaks feature-detection, but\n      // allows \"securable\" code to \"gracefully\" degrade to working\n      // but insecure code.\n      return object;\n    };\n  }\n\n  // ES5 15.2.3.11\n  // https://es5.github.io/#x15.2.3.11\n  if (!Object.isSealed) {\n    Object.isSealed = function isSealed(object) {\n      if (Object(object) !== object) {\n        throw new TypeError('Object.isSealed can only be called on Objects.');\n      }\n      return false;\n    };\n  }\n\n  // ES5 15.2.3.12\n  // https://es5.github.io/#x15.2.3.12\n  if (!Object.isFrozen) {\n    Object.isFrozen = function isFrozen(object) {\n      if (Object(object) !== object) {\n        throw new TypeError('Object.isFrozen can only be called on Objects.');\n      }\n      return false;\n    };\n  }\n\n  // ES5 15.2.3.13\n  // https://es5.github.io/#x15.2.3.13\n  if (!Object.isExtensible) {\n    Object.isExtensible = function isExtensible(object) {\n      // 1. If Type(O) is not Object throw a TypeError exception.\n      if (Object(object) !== object) {\n        throw new TypeError('Object.isExtensible can only be called on Objects.');\n      }\n      // 2. Return the Boolean value of the [[Extensible]] internal property of O.\n      var name = '';\n      while (owns(object, name)) {\n        name += '?';\n      }\n      object[name] = true; // eslint-disable-line no-param-reassign\n      var returnValue = owns(object, name);\n      delete object[name]; // eslint-disable-line no-param-reassign\n      return returnValue;\n    };\n  }\n});","map":{"version":3,"names":["root","factory","define","amd","exports","module","returnExports","call","Function","prototypeOfObject","Object","prototype","owns","bind","hasOwnProperty","isEnumerable","propertyIsEnumerable","toStr","toString","defineGetter","defineSetter","lookupGetter","lookupSetter","supportsAccessors","__defineGetter__","__defineSetter__","__lookupGetter__","__lookupSetter__","isPrimitive","o","getPrototypeOf","object","proto","__proto__","constructor","defineProperty","doesGetOwnPropertyDescriptorWork","sentinel","getOwnPropertyDescriptor","value","exception","getOwnPropertyDescriptorWorksOnObject","getOwnPropertyDescriptorWorksOnDom","document","createElement","getOwnPropertyDescriptorFallback","ERR_NON_OBJECT","property","TypeError","descriptor","enumerable","configurable","notPrototypeOfObject","getter","setter","get","set","writable","getOwnPropertyNames","keys","create","createEmpty","supportsProto","shouldUseActiveX","domain","ActiveXObject","getEmptyViaActiveX","empty","xDoc","script","write","close","parentWindow","getEmptyViaIFrame","iframe","parent","body","documentElement","style","display","appendChild","src","contentWindow","removeChild","isPrototypeOf","toLocaleString","valueOf","Empty","properties","Type","defineProperties","doesDefinePropertyWork","definePropertyWorksOnObject","definePropertyWorksOnDom","definePropertyFallback","definePropertiesFallback","ERR_NON_OBJECT_DESCRIPTOR","ERR_NON_OBJECT_TARGET","ERR_ACCESSORS_NOT_SUPPORTED","hasGetter","hasSetter","forEach","seal","freeze","freezeObject","preventExtensions","isSealed","isFrozen","isExtensible","name","returnValue"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/es5-shim/es5-sham.js"],"sourcesContent":["/*!\n * https://github.com/es-shims/es5-shim\n * @license es5-shim Copyright 2009-2020 by contributors, MIT License\n * see https://github.com/es-shims/es5-shim/blob/master/LICENSE\n */\n\n// vim: ts=4 sts=4 sw=4 expandtab\n\n// Add semicolon to prevent IIFE from being passed as argument to concatenated code.\n; // eslint-disable-line no-extra-semi\n\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n(function (root, factory) {\n    'use strict';\n\n    /* global define */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like enviroments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.returnExports = factory(); // eslint-disable-line no-param-reassign\n    }\n}(this, function () {\n\n    var call = Function.call;\n    var prototypeOfObject = Object.prototype;\n    var owns = call.bind(prototypeOfObject.hasOwnProperty);\n    var isEnumerable = call.bind(prototypeOfObject.propertyIsEnumerable);\n    var toStr = call.bind(prototypeOfObject.toString);\n\n    // If JS engine supports accessors creating shortcuts.\n    var defineGetter;\n    var defineSetter;\n    var lookupGetter;\n    var lookupSetter;\n    var supportsAccessors = owns(prototypeOfObject, '__defineGetter__');\n    if (supportsAccessors) {\n        /* eslint-disable no-underscore-dangle, no-restricted-properties */\n        defineGetter = call.bind(prototypeOfObject.__defineGetter__);\n        defineSetter = call.bind(prototypeOfObject.__defineSetter__);\n        lookupGetter = call.bind(prototypeOfObject.__lookupGetter__);\n        lookupSetter = call.bind(prototypeOfObject.__lookupSetter__);\n        /* eslint-enable no-underscore-dangle, no-restricted-properties */\n    }\n\n    var isPrimitive = function isPrimitive(o) {\n        return o == null || (typeof o !== 'object' && typeof o !== 'function');\n    };\n\n    // ES5 15.2.3.2\n    // https://es5.github.io/#x15.2.3.2\n    if (!Object.getPrototypeOf) {\n        // https://github.com/es-shims/es5-shim/issues#issue/2\n        // https://johnresig.com/blog/objectgetprototypeof/\n        // recommended by fschaefer on github\n        //\n        // sure, and webreflection says ^_^\n        // ... this will nerever possibly return null\n        // ... Opera Mini breaks here with infinite loops\n        Object.getPrototypeOf = function getPrototypeOf(object) {\n            // eslint-disable-next-line no-proto\n            var proto = object.__proto__;\n            if (proto || proto == null) { // `undefined` is for pre-proto browsers\n                return proto;\n            } else if (toStr(object.constructor) === '[object Function]') {\n                return object.constructor.prototype;\n            } else if (object instanceof Object) {\n                return prototypeOfObject;\n            }\n            // Correctly return null for Objects created with `Object.create(null)`\n            // (shammed or native) or `{ __proto__: null}`.  Also returns null for\n            // cross-realm objects on browsers that lack `__proto__` support (like\n            // IE <11), but that's the best we can do.\n            return null;\n\n        };\n    }\n\n    // ES5 15.2.3.3\n    // https://es5.github.io/#x15.2.3.3\n\n    // check whether getOwnPropertyDescriptor works if it's given. Otherwise, shim partially.\n    if (Object.defineProperty) {\n        var doesGetOwnPropertyDescriptorWork = function doesGetOwnPropertyDescriptorWork(object) {\n            try {\n                object.sentinel = 0; // eslint-disable-line no-param-reassign\n                return Object.getOwnPropertyDescriptor(object, 'sentinel').value === 0;\n            } catch (exception) {\n                return false;\n            }\n        };\n        var getOwnPropertyDescriptorWorksOnObject = doesGetOwnPropertyDescriptorWork({});\n        var getOwnPropertyDescriptorWorksOnDom = typeof document === 'undefined'\n            || doesGetOwnPropertyDescriptorWork(document.createElement('div'));\n        if (!getOwnPropertyDescriptorWorksOnDom || !getOwnPropertyDescriptorWorksOnObject) {\n            var getOwnPropertyDescriptorFallback = Object.getOwnPropertyDescriptor;\n        }\n    }\n\n    if (!Object.getOwnPropertyDescriptor || getOwnPropertyDescriptorFallback) {\n        var ERR_NON_OBJECT = 'Object.getOwnPropertyDescriptor called on a non-object: ';\n\n        /* eslint-disable no-proto */\n        Object.getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            if (isPrimitive(object)) {\n                throw new TypeError(ERR_NON_OBJECT + object);\n            }\n\n            // make a valiant attempt to use the real getOwnPropertyDescriptor\n            // for I8's DOM elements.\n            if (getOwnPropertyDescriptorFallback) {\n                try {\n                    return getOwnPropertyDescriptorFallback.call(Object, object, property);\n                } catch (exception) {\n                    // try the shim if the real one doesn't work\n                }\n            }\n\n            var descriptor;\n\n            // If object does not owns property return undefined immediately.\n            if (!owns(object, property)) {\n                return descriptor;\n            }\n\n            // If object has a property then it's for sure `configurable`, and\n            // probably `enumerable`. Detect enumerability though.\n            descriptor = {\n                enumerable: isEnumerable(object, property),\n                configurable: true\n            };\n\n            // If JS engine supports accessor properties then property may be a\n            // getter or setter.\n            if (supportsAccessors) {\n                // Unfortunately `__lookupGetter__` will return a getter even\n                // if object has own non getter property along with a same named\n                // inherited getter. To avoid misbehavior we temporary remove\n                // `__proto__` so that `__lookupGetter__` will return getter only\n                // if it's owned by an object.\n                var prototype = object.__proto__;\n                var notPrototypeOfObject = object !== prototypeOfObject;\n                // avoid recursion problem, breaking in Opera Mini when\n                // Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n                // or any other Object.prototype accessor\n                if (notPrototypeOfObject) {\n                    object.__proto__ = prototypeOfObject; // eslint-disable-line no-param-reassign\n                }\n\n                var getter = lookupGetter(object, property);\n                var setter = lookupSetter(object, property);\n\n                if (notPrototypeOfObject) {\n                    // Once we have getter and setter we can put values back.\n                    object.__proto__ = prototype; // eslint-disable-line no-param-reassign\n                }\n\n                if (getter || setter) {\n                    if (getter) {\n                        descriptor.get = getter;\n                    }\n                    if (setter) {\n                        descriptor.set = setter;\n                    }\n                    // If it was accessor property we're done and return here\n                    // in order to avoid adding `value` to the descriptor.\n                    return descriptor;\n                }\n            }\n\n            // If we got this far we know that object has an own property that is\n            // not an accessor so we set it as a value and return descriptor.\n            descriptor.value = object[property];\n            descriptor.writable = true;\n            return descriptor;\n        };\n        /* eslint-enable no-proto */\n    }\n\n    // ES5 15.2.3.4\n    // https://es5.github.io/#x15.2.3.4\n    if (!Object.getOwnPropertyNames) {\n        Object.getOwnPropertyNames = function getOwnPropertyNames(object) {\n            return Object.keys(object);\n        };\n    }\n\n    // ES5 15.2.3.5\n    // https://es5.github.io/#x15.2.3.5\n    if (!Object.create) {\n\n        // Contributed by Brandon Benvie, October, 2012\n        var createEmpty;\n        var supportsProto = !({ __proto__: null } instanceof Object);\n        // the following produces false positives\n        // in Opera Mini => not a reliable check\n        // Object.prototype.__proto__ === null\n\n        // Check for document.domain and active x support\n        // No need to use active x approach when document.domain is not set\n        // see https://github.com/es-shims/es5-shim/issues/150\n        // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n        /* global ActiveXObject */\n        var shouldUseActiveX = function shouldUseActiveX() {\n            // return early if document.domain not set\n            if (!document.domain) {\n                return false;\n            }\n\n            try {\n                return !!new ActiveXObject('htmlfile');\n            } catch (exception) {\n                return false;\n            }\n        };\n\n        // This supports IE8 when document.domain is used\n        // see https://github.com/es-shims/es5-shim/issues/150\n        // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n        var getEmptyViaActiveX = function getEmptyViaActiveX() {\n            var empty;\n            var xDoc;\n\n            xDoc = new ActiveXObject('htmlfile');\n\n            var script = 'script';\n            xDoc.write('<' + script + '></' + script + '>');\n            xDoc.close();\n\n            empty = xDoc.parentWindow.Object.prototype;\n            xDoc = null;\n\n            return empty;\n        };\n\n        // The original implementation using an iframe\n        // before the activex approach was added\n        // see https://github.com/es-shims/es5-shim/issues/150\n        var getEmptyViaIFrame = function getEmptyViaIFrame() {\n            var iframe = document.createElement('iframe');\n            var parent = document.body || document.documentElement;\n            var empty;\n\n            iframe.style.display = 'none';\n            parent.appendChild(iframe);\n            // eslint-disable-next-line no-script-url\n            iframe.src = 'javascript:';\n\n            empty = iframe.contentWindow.Object.prototype;\n            parent.removeChild(iframe);\n            iframe = null;\n\n            return empty;\n        };\n\n        /* global document */\n        if (supportsProto || typeof document === 'undefined') {\n            createEmpty = function () {\n                return { __proto__: null };\n            };\n        } else {\n            // In old IE __proto__ can't be used to manually set `null`, nor does\n            // any other method exist to make an object that inherits from nothing,\n            // aside from Object.prototype itself. Instead, create a new global\n            // object and *steal* its Object.prototype and strip it bare. This is\n            // used as the prototype to create nullary objects.\n            createEmpty = function () {\n                // Determine which approach to use\n                // see https://github.com/es-shims/es5-shim/issues/150\n                var empty = shouldUseActiveX() ? getEmptyViaActiveX() : getEmptyViaIFrame();\n\n                delete empty.constructor;\n                delete empty.hasOwnProperty;\n                delete empty.propertyIsEnumerable;\n                delete empty.isPrototypeOf;\n                delete empty.toLocaleString;\n                delete empty.toString;\n                delete empty.valueOf;\n\n                var Empty = function Empty() {};\n                Empty.prototype = empty;\n                // short-circuit future calls\n                createEmpty = function () {\n                    return new Empty();\n                };\n                return new Empty();\n            };\n        }\n\n        Object.create = function create(prototype, properties) {\n\n            var object;\n            var Type = function Type() {}; // An empty constructor.\n\n            if (prototype === null) {\n                object = createEmpty();\n            } else if (isPrimitive(prototype)) {\n                // In the native implementation `parent` can be `null`\n                // OR *any* `instanceof Object`  (Object|Function|Array|RegExp|etc)\n                // Use `typeof` tho, b/c in old IE, DOM elements are not `instanceof Object`\n                // like they are in modern browsers. Using `Object.create` on DOM elements\n                // is...err...probably inappropriate, but the native version allows for it.\n                throw new TypeError('Object prototype may only be an Object or null'); // same msg as Chrome\n            } else {\n                Type.prototype = prototype;\n                object = new Type();\n                // IE has no built-in implementation of `Object.getPrototypeOf`\n                // neither `__proto__`, but this manually setting `__proto__` will\n                // guarantee that `Object.getPrototypeOf` will work as expected with\n                // objects created using `Object.create`\n                // eslint-disable-next-line no-proto\n                object.__proto__ = prototype;\n            }\n\n            if (properties !== void 0) {\n                Object.defineProperties(object, properties);\n            }\n\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.6\n    // https://es5.github.io/#x15.2.3.6\n\n    // Patch for WebKit and IE8 standard mode\n    // Designed by hax <hax.github.com>\n    // related issue: https://github.com/es-shims/es5-shim/issues#issue/5\n    // IE8 Reference:\n    //     https://msdn.microsoft.com/en-us/library/dd282900.aspx\n    //     https://msdn.microsoft.com/en-us/library/dd229916.aspx\n    // WebKit Bugs:\n    //     https://bugs.webkit.org/show_bug.cgi?id=36423\n\n    var doesDefinePropertyWork = function doesDefinePropertyWork(object) {\n        try {\n            Object.defineProperty(object, 'sentinel', {});\n            return 'sentinel' in object;\n        } catch (exception) {\n            return false;\n        }\n    };\n\n    // check whether defineProperty works if it's given. Otherwise,\n    // shim partially.\n    if (Object.defineProperty) {\n        var definePropertyWorksOnObject = doesDefinePropertyWork({});\n        var definePropertyWorksOnDom = typeof document === 'undefined'\n            || doesDefinePropertyWork(document.createElement('div'));\n        if (!definePropertyWorksOnObject || !definePropertyWorksOnDom) {\n            var definePropertyFallback = Object.defineProperty,\n                definePropertiesFallback = Object.defineProperties;\n        }\n    }\n\n    if (!Object.defineProperty || definePropertyFallback) {\n        var ERR_NON_OBJECT_DESCRIPTOR = 'Property description must be an object: ';\n        var ERR_NON_OBJECT_TARGET = 'Object.defineProperty called on non-object: ';\n        var ERR_ACCESSORS_NOT_SUPPORTED = 'getters & setters can not be defined on this javascript engine';\n\n        Object.defineProperty = function defineProperty(object, property, descriptor) {\n            if (isPrimitive(object)) {\n                throw new TypeError(ERR_NON_OBJECT_TARGET + object);\n            }\n            if (isPrimitive(descriptor)) {\n                throw new TypeError(ERR_NON_OBJECT_DESCRIPTOR + descriptor);\n            }\n            // make a valiant attempt to use the real defineProperty\n            // for I8's DOM elements.\n            if (definePropertyFallback) {\n                try {\n                    return definePropertyFallback.call(Object, object, property, descriptor);\n                } catch (exception) {\n                    // try the shim if the real one doesn't work\n                }\n            }\n\n            // If it's a data property.\n            if ('value' in descriptor) {\n                // fail silently if 'writable', 'enumerable', or 'configurable'\n                // are requested but not supported\n                /*\n                // alternate approach:\n                if ( // can't implement these features; allow false but not true\n                    ('writable' in descriptor && !descriptor.writable) ||\n                    ('enumerable' in descriptor && !descriptor.enumerable) ||\n                    ('configurable' in descriptor && !descriptor.configurable)\n                ))\n                    throw new RangeError(\n                        'This implementation of Object.defineProperty does not support configurable, enumerable, or writable.'\n                    );\n                */\n\n                if (supportsAccessors && (lookupGetter(object, property) || lookupSetter(object, property))) {\n                    // As accessors are supported only on engines implementing\n                    // `__proto__` we can safely override `__proto__` while defining\n                    // a property to make sure that we don't hit an inherited\n                    // accessor.\n                    /* eslint-disable no-proto, no-param-reassign */\n                    var prototype = object.__proto__;\n                    object.__proto__ = prototypeOfObject;\n                    // Deleting a property anyway since getter / setter may be\n                    // defined on object itself.\n                    delete object[property];\n                    object[property] = descriptor.value;\n                    // Setting original `__proto__` back now.\n                    object.__proto__ = prototype;\n                    /* eslint-enable no-proto, no-param-reassign */\n                } else {\n                    object[property] = descriptor.value; // eslint-disable-line no-param-reassign\n                }\n            } else {\n                var hasGetter = 'get' in descriptor;\n                var hasSetter = 'set' in descriptor;\n                if (!supportsAccessors && (hasGetter || hasSetter)) {\n                    throw new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\n                }\n                // If we got that far then getters and setters can be defined !!\n                if (hasGetter) {\n                    defineGetter(object, property, descriptor.get);\n                }\n                if (hasSetter) {\n                    defineSetter(object, property, descriptor.set);\n                }\n            }\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.7\n    // https://es5.github.io/#x15.2.3.7\n    if (!Object.defineProperties || definePropertiesFallback) {\n        Object.defineProperties = function defineProperties(object, properties) {\n            // make a valiant attempt to use the real defineProperties\n            if (definePropertiesFallback) {\n                try {\n                    return definePropertiesFallback.call(Object, object, properties);\n                } catch (exception) {\n                    // try the shim if the real one doesn't work\n                }\n            }\n\n            Object.keys(properties).forEach(function (property) {\n                if (property !== '__proto__') {\n                    Object.defineProperty(object, property, properties[property]);\n                }\n            });\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.8\n    // https://es5.github.io/#x15.2.3.8\n    if (!Object.seal) {\n        Object.seal = function seal(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.seal can only be called on Objects.');\n            }\n            // this is misleading and breaks feature-detection, but\n            // allows \"securable\" code to \"gracefully\" degrade to working\n            // but insecure code.\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.9\n    // https://es5.github.io/#x15.2.3.9\n    if (!Object.freeze) {\n        Object.freeze = function freeze(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.freeze can only be called on Objects.');\n            }\n            // this is misleading and breaks feature-detection, but\n            // allows \"securable\" code to \"gracefully\" degrade to working\n            // but insecure code.\n            return object;\n        };\n    }\n\n    // detect a Rhino bug and patch it\n    try {\n        Object.freeze(function () {});\n    } catch (exception) {\n        Object.freeze = (function (freezeObject) {\n            return function freeze(object) {\n                if (typeof object === 'function') {\n                    return object;\n                }\n                return freezeObject(object);\n\n            };\n        }(Object.freeze));\n    }\n\n    // ES5 15.2.3.10\n    // https://es5.github.io/#x15.2.3.10\n    if (!Object.preventExtensions) {\n        Object.preventExtensions = function preventExtensions(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.preventExtensions can only be called on Objects.');\n            }\n            // this is misleading and breaks feature-detection, but\n            // allows \"securable\" code to \"gracefully\" degrade to working\n            // but insecure code.\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.11\n    // https://es5.github.io/#x15.2.3.11\n    if (!Object.isSealed) {\n        Object.isSealed = function isSealed(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.isSealed can only be called on Objects.');\n            }\n            return false;\n        };\n    }\n\n    // ES5 15.2.3.12\n    // https://es5.github.io/#x15.2.3.12\n    if (!Object.isFrozen) {\n        Object.isFrozen = function isFrozen(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.isFrozen can only be called on Objects.');\n            }\n            return false;\n        };\n    }\n\n    // ES5 15.2.3.13\n    // https://es5.github.io/#x15.2.3.13\n    if (!Object.isExtensible) {\n        Object.isExtensible = function isExtensible(object) {\n            // 1. If Type(O) is not Object throw a TypeError exception.\n            if (Object(object) !== object) {\n                throw new TypeError('Object.isExtensible can only be called on Objects.');\n            }\n            // 2. Return the Boolean value of the [[Extensible]] internal property of O.\n            var name = '';\n            while (owns(object, name)) {\n                name += '?';\n            }\n            object[name] = true; // eslint-disable-line no-param-reassign\n            var returnValue = owns(object, name);\n            delete object[name]; // eslint-disable-line no-param-reassign\n            return returnValue;\n        };\n    }\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}