{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.map.js\";\n\n/* eslint-disable no-case-declarations */\nvar convertSig = function convertSig(type) {\n  switch (type.type) {\n    case 'function':\n      return {\n        name: 'function'\n      };\n    case 'object':\n      var values = {};\n      type.signature.properties.forEach(function (prop) {\n        values[prop.key] = convert(prop.value);\n      });\n      return {\n        name: 'object',\n        value: values\n      };\n    default:\n      throw new Error(\"Unknown: \".concat(type));\n  }\n};\nexport var convert = function convert(type) {\n  var name = type.name,\n    raw = type.raw;\n  var base = {};\n  if (typeof raw !== 'undefined') base.raw = raw;\n  switch (type.name) {\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'boolean':\n      {\n        return Object.assign({}, base, {\n          name: name\n        });\n      }\n    case 'Array':\n      {\n        return Object.assign({}, base, {\n          name: 'array',\n          value: type.elements.map(convert)\n        });\n      }\n    case 'signature':\n      return Object.assign({}, base, convertSig(type));\n    case 'union':\n    case 'intersection':\n      return Object.assign({}, base, {\n        name: name,\n        value: type.elements.map(convert)\n      });\n    default:\n      return Object.assign({}, base, {\n        name: 'other',\n        value: name\n      });\n  }\n};","map":{"version":3,"names":["convertSig","type","name","values","signature","properties","forEach","prop","key","convert","value","Error","concat","raw","base","Object","assign","elements","map"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/typescript/convert.js"],"sourcesContent":["import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.map.js\";\n\n/* eslint-disable no-case-declarations */\nvar convertSig = function convertSig(type) {\n  switch (type.type) {\n    case 'function':\n      return {\n        name: 'function'\n      };\n\n    case 'object':\n      var values = {};\n      type.signature.properties.forEach(function (prop) {\n        values[prop.key] = convert(prop.value);\n      });\n      return {\n        name: 'object',\n        value: values\n      };\n\n    default:\n      throw new Error(\"Unknown: \".concat(type));\n  }\n};\n\nexport var convert = function convert(type) {\n  var name = type.name,\n      raw = type.raw;\n  var base = {};\n  if (typeof raw !== 'undefined') base.raw = raw;\n\n  switch (type.name) {\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'boolean':\n      {\n        return Object.assign({}, base, {\n          name: name\n        });\n      }\n\n    case 'Array':\n      {\n        return Object.assign({}, base, {\n          name: 'array',\n          value: type.elements.map(convert)\n        });\n      }\n\n    case 'signature':\n      return Object.assign({}, base, convertSig(type));\n\n    case 'union':\n    case 'intersection':\n      return Object.assign({}, base, {\n        name: name,\n        value: type.elements.map(convert)\n      });\n\n    default:\n      return Object.assign({}, base, {\n        name: 'other',\n        value: name\n      });\n  }\n};"],"mappings":"AAAA,OAAO,wCAAwC;AAC/C,OAAO,iDAAiD;AACxD,OAAO,qCAAqC;AAC5C,OAAO,qCAAqC;AAC5C,OAAO,iCAAiC;;AAExC;AACA,IAAIA,UAAU,GAAG,SAASA,UAAUA,CAACC,IAAI,EAAE;EACzC,QAAQA,IAAI,CAACA,IAAI;IACf,KAAK,UAAU;MACb,OAAO;QACLC,IAAI,EAAE;MACR,CAAC;IAEH,KAAK,QAAQ;MACX,IAAIC,MAAM,GAAG,CAAC,CAAC;MACfF,IAAI,CAACG,SAAS,CAACC,UAAU,CAACC,OAAO,CAAC,UAAUC,IAAI,EAAE;QAChDJ,MAAM,CAACI,IAAI,CAACC,GAAG,CAAC,GAAGC,OAAO,CAACF,IAAI,CAACG,KAAK,CAAC;MACxC,CAAC,CAAC;MACF,OAAO;QACLR,IAAI,EAAE,QAAQ;QACdQ,KAAK,EAAEP;MACT,CAAC;IAEH;MACE,MAAM,IAAIQ,KAAK,CAAC,WAAW,CAACC,MAAM,CAACX,IAAI,CAAC,CAAC;EAC7C;AACF,CAAC;AAED,OAAO,IAAIQ,OAAO,GAAG,SAASA,OAAOA,CAACR,IAAI,EAAE;EAC1C,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;IAChBW,GAAG,GAAGZ,IAAI,CAACY,GAAG;EAClB,IAAIC,IAAI,GAAG,CAAC,CAAC;EACb,IAAI,OAAOD,GAAG,KAAK,WAAW,EAAEC,IAAI,CAACD,GAAG,GAAGA,GAAG;EAE9C,QAAQZ,IAAI,CAACC,IAAI;IACf,KAAK,QAAQ;IACb,KAAK,QAAQ;IACb,KAAK,QAAQ;IACb,KAAK,SAAS;MACZ;QACE,OAAOa,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,IAAI,EAAE;UAC7BZ,IAAI,EAAEA;QACR,CAAC,CAAC;MACJ;IAEF,KAAK,OAAO;MACV;QACE,OAAOa,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,IAAI,EAAE;UAC7BZ,IAAI,EAAE,OAAO;UACbQ,KAAK,EAAET,IAAI,CAACgB,QAAQ,CAACC,GAAG,CAACT,OAAO;QAClC,CAAC,CAAC;MACJ;IAEF,KAAK,WAAW;MACd,OAAOM,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,IAAI,EAAEd,UAAU,CAACC,IAAI,CAAC,CAAC;IAElD,KAAK,OAAO;IACZ,KAAK,cAAc;MACjB,OAAOc,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,IAAI,EAAE;QAC7BZ,IAAI,EAAEA,IAAI;QACVQ,KAAK,EAAET,IAAI,CAACgB,QAAQ,CAACC,GAAG,CAACT,OAAO;MAClC,CAAC,CAAC;IAEJ;MACE,OAAOM,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,IAAI,EAAE;QAC7BZ,IAAI,EAAE,OAAO;QACbQ,KAAK,EAAER;MACT,CAAC,CAAC;EACN;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}