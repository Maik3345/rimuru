{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar Get = require('./Get');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-iteratorvalue\n\nmodule.exports = function IteratorValue(iterResult) {\n  if (Type(iterResult) !== 'Object') {\n    throw new $TypeError('Assertion failed: Type(iterResult) is not Object');\n  }\n  return Get(iterResult, 'value');\n};","map":{"version":3,"names":["$TypeError","require","Get","Type","module","exports","IteratorValue","iterResult"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/es-abstract/2023/IteratorValue.js"],"sourcesContent":["'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Get = require('./Get');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-iteratorvalue\n\nmodule.exports = function IteratorValue(iterResult) {\n\tif (Type(iterResult) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(iterResult) is not Object');\n\t}\n\treturn Get(iterResult, 'value');\n};\n\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE1C,IAAIC,GAAG,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC1B,IAAIE,IAAI,GAAGF,OAAO,CAAC,QAAQ,CAAC;;AAE5B;;AAEAG,MAAM,CAACC,OAAO,GAAG,SAASC,aAAaA,CAACC,UAAU,EAAE;EACnD,IAAIJ,IAAI,CAACI,UAAU,CAAC,KAAK,QAAQ,EAAE;IAClC,MAAM,IAAIP,UAAU,CAAC,kDAAkD,CAAC;EACzE;EACA,OAAOE,GAAG,CAACK,UAAU,EAAE,OAAO,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}