{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBind = require('call-bind');\nvar $resolve = GetIntrinsic('%Promise.resolve%', true);\nvar $PromiseResolve = $resolve && callBind($resolve);\n\n// https://262.ecma-international.org/9.0/#sec-promise-resolve\n\nmodule.exports = function PromiseResolve(C, x) {\n  if (!$PromiseResolve) {\n    throw new SyntaxError('This environment does not support Promises.');\n  }\n  return $PromiseResolve(C, x);\n};","map":{"version":3,"names":["GetIntrinsic","require","callBind","$resolve","$PromiseResolve","module","exports","PromiseResolve","C","x","SyntaxError"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/es-abstract/2023/PromiseResolve.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBind = require('call-bind');\n\nvar $resolve = GetIntrinsic('%Promise.resolve%', true);\nvar $PromiseResolve = $resolve && callBind($resolve);\n\n// https://262.ecma-international.org/9.0/#sec-promise-resolve\n\nmodule.exports = function PromiseResolve(C, x) {\n\tif (!$PromiseResolve) {\n\t\tthrow new SyntaxError('This environment does not support Promises.');\n\t}\n\treturn $PromiseResolve(C, x);\n};\n\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIC,QAAQ,GAAGD,OAAO,CAAC,WAAW,CAAC;AAEnC,IAAIE,QAAQ,GAAGH,YAAY,CAAC,mBAAmB,EAAE,IAAI,CAAC;AACtD,IAAII,eAAe,GAAGD,QAAQ,IAAID,QAAQ,CAACC,QAAQ,CAAC;;AAEpD;;AAEAE,MAAM,CAACC,OAAO,GAAG,SAASC,cAAcA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC9C,IAAI,CAACL,eAAe,EAAE;IACrB,MAAM,IAAIM,WAAW,CAAC,6CAA6C,CAAC;EACrE;EACA,OAAON,eAAe,CAACI,CAAC,EAAEC,CAAC,CAAC;AAC7B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}