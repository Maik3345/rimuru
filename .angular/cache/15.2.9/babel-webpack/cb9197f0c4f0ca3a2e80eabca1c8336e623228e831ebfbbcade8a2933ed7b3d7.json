{"ast":null,"code":"'use strict';\n\nvar ToNumber = require('./ToNumber');\nvar truncate = require('./truncate');\nvar $isNaN = require('../helpers/isNaN');\nvar $isFinite = require('../helpers/isFinite');\n\n// https://262.ecma-international.org/14.0/#sec-tointegerorinfinity\n\nmodule.exports = function ToIntegerOrInfinity(value) {\n  var number = ToNumber(value);\n  if ($isNaN(number) || number === 0) {\n    return 0;\n  }\n  if (!$isFinite(number)) {\n    return number;\n  }\n  return truncate(number);\n};","map":{"version":3,"names":["ToNumber","require","truncate","$isNaN","$isFinite","module","exports","ToIntegerOrInfinity","value","number"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/es-abstract/2023/ToIntegerOrInfinity.js"],"sourcesContent":["'use strict';\n\nvar ToNumber = require('./ToNumber');\nvar truncate = require('./truncate');\n\nvar $isNaN = require('../helpers/isNaN');\nvar $isFinite = require('../helpers/isFinite');\n\n// https://262.ecma-international.org/14.0/#sec-tointegerorinfinity\n\nmodule.exports = function ToIntegerOrInfinity(value) {\n\tvar number = ToNumber(value);\n\tif ($isNaN(number) || number === 0) { return 0; }\n\tif (!$isFinite(number)) { return number; }\n\treturn truncate(number);\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAY,CAAC;AACpC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAY,CAAC;AAEpC,IAAIE,MAAM,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIG,SAAS,GAAGH,OAAO,CAAC,qBAAqB,CAAC;;AAE9C;;AAEAI,MAAM,CAACC,OAAO,GAAG,SAASC,mBAAmBA,CAACC,KAAK,EAAE;EACpD,IAAIC,MAAM,GAAGT,QAAQ,CAACQ,KAAK,CAAC;EAC5B,IAAIL,MAAM,CAACM,MAAM,CAAC,IAAIA,MAAM,KAAK,CAAC,EAAE;IAAE,OAAO,CAAC;EAAE;EAChD,IAAI,CAACL,SAAS,CAACK,MAAM,CAAC,EAAE;IAAE,OAAOA,MAAM;EAAE;EACzC,OAAOP,QAAQ,CAACO,MAAM,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}