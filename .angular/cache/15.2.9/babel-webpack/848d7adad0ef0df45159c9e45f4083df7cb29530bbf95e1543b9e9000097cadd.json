{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $ArrayPrototype = GetIntrinsic('%Array.prototype%');\nvar $RangeError = require('es-errors/range');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar isInteger = require('../helpers/isInteger');\nvar MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1;\nvar hasProto = require('has-proto')();\nvar $setProto = GetIntrinsic('%Object.setPrototypeOf%', true) || (hasProto ? function (O, proto) {\n  O.__proto__ = proto; // eslint-disable-line no-proto, no-param-reassign\n  return O;\n} : null);\n\n// https://262.ecma-international.org/12.0/#sec-arraycreate\n\nmodule.exports = function ArrayCreate(length) {\n  if (!isInteger(length) || length < 0) {\n    throw new $TypeError('Assertion failed: `length` must be an integer Number >= 0');\n  }\n  if (length > MAX_ARRAY_LENGTH) {\n    throw new $RangeError('length is greater than (2**32 - 1)');\n  }\n  var proto = arguments.length > 1 ? arguments[1] : $ArrayPrototype;\n  var A = []; // steps 3, 5\n  if (proto !== $ArrayPrototype) {\n    // step 4\n    if (!$setProto) {\n      throw new $SyntaxError('ArrayCreate: a `proto` argument that is not `Array.prototype` is not supported in an environment that does not support setting the [[Prototype]]');\n    }\n    $setProto(A, proto);\n  }\n  if (length !== 0) {\n    // bypasses the need for step 6\n    A.length = length;\n  }\n  /* step 6, the above as a shortcut for the below\n  OrdinaryDefineOwnProperty(A, 'length', {\n  \t'[[Configurable]]': false,\n  \t'[[Enumerable]]': false,\n  \t'[[Value]]': length,\n  \t'[[Writable]]': true\n  });\n  */\n  return A;\n};","map":{"version":3,"names":["GetIntrinsic","require","$ArrayPrototype","$RangeError","$SyntaxError","$TypeError","isInteger","MAX_ARRAY_LENGTH","Math","pow","hasProto","$setProto","O","proto","__proto__","module","exports","ArrayCreate","length","arguments","A"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/es-abstract/2023/ArrayCreate.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $ArrayPrototype = GetIntrinsic('%Array.prototype%');\nvar $RangeError = require('es-errors/range');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar isInteger = require('../helpers/isInteger');\n\nvar MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1;\n\nvar hasProto = require('has-proto')();\n\nvar $setProto = GetIntrinsic('%Object.setPrototypeOf%', true) || (\n\thasProto\n\t\t? function (O, proto) {\n\t\t\tO.__proto__ = proto; // eslint-disable-line no-proto, no-param-reassign\n\t\t\treturn O;\n\t\t}\n\t\t: null\n);\n\n// https://262.ecma-international.org/12.0/#sec-arraycreate\n\nmodule.exports = function ArrayCreate(length) {\n\tif (!isInteger(length) || length < 0) {\n\t\tthrow new $TypeError('Assertion failed: `length` must be an integer Number >= 0');\n\t}\n\tif (length > MAX_ARRAY_LENGTH) {\n\t\tthrow new $RangeError('length is greater than (2**32 - 1)');\n\t}\n\tvar proto = arguments.length > 1 ? arguments[1] : $ArrayPrototype;\n\tvar A = []; // steps 3, 5\n\tif (proto !== $ArrayPrototype) { // step 4\n\t\tif (!$setProto) {\n\t\t\tthrow new $SyntaxError('ArrayCreate: a `proto` argument that is not `Array.prototype` is not supported in an environment that does not support setting the [[Prototype]]');\n\t\t}\n\t\t$setProto(A, proto);\n\t}\n\tif (length !== 0) { // bypasses the need for step 6\n\t\tA.length = length;\n\t}\n\t/* step 6, the above as a shortcut for the below\n\tOrdinaryDefineOwnProperty(A, 'length', {\n\t\t'[[Configurable]]': false,\n\t\t'[[Enumerable]]': false,\n\t\t'[[Value]]': length,\n\t\t'[[Writable]]': true\n\t});\n\t*/\n\treturn A;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAIC,eAAe,GAAGF,YAAY,CAAC,mBAAmB,CAAC;AACvD,IAAIG,WAAW,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAC5C,IAAIG,YAAY,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAC9C,IAAII,UAAU,GAAGJ,OAAO,CAAC,gBAAgB,CAAC;AAE1C,IAAIK,SAAS,GAAGL,OAAO,CAAC,sBAAsB,CAAC;AAE/C,IAAIM,gBAAgB,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;AAE1C,IAAIC,QAAQ,GAAGT,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AAErC,IAAIU,SAAS,GAAGX,YAAY,CAAC,yBAAyB,EAAE,IAAI,CAAC,KAC5DU,QAAQ,GACL,UAAUE,CAAC,EAAEC,KAAK,EAAE;EACrBD,CAAC,CAACE,SAAS,GAAGD,KAAK,CAAC,CAAC;EACrB,OAAOD,CAAC;AACT,CAAC,GACC,IAAI,CACP;;AAED;;AAEAG,MAAM,CAACC,OAAO,GAAG,SAASC,WAAWA,CAACC,MAAM,EAAE;EAC7C,IAAI,CAACZ,SAAS,CAACY,MAAM,CAAC,IAAIA,MAAM,GAAG,CAAC,EAAE;IACrC,MAAM,IAAIb,UAAU,CAAC,2DAA2D,CAAC;EAClF;EACA,IAAIa,MAAM,GAAGX,gBAAgB,EAAE;IAC9B,MAAM,IAAIJ,WAAW,CAAC,oCAAoC,CAAC;EAC5D;EACA,IAAIU,KAAK,GAAGM,SAAS,CAACD,MAAM,GAAG,CAAC,GAAGC,SAAS,CAAC,CAAC,CAAC,GAAGjB,eAAe;EACjE,IAAIkB,CAAC,GAAG,EAAE,CAAC,CAAC;EACZ,IAAIP,KAAK,KAAKX,eAAe,EAAE;IAAE;IAChC,IAAI,CAACS,SAAS,EAAE;MACf,MAAM,IAAIP,YAAY,CAAC,kJAAkJ,CAAC;IAC3K;IACAO,SAAS,CAACS,CAAC,EAAEP,KAAK,CAAC;EACpB;EACA,IAAIK,MAAM,KAAK,CAAC,EAAE;IAAE;IACnBE,CAAC,CAACF,MAAM,GAAGA,MAAM;EAClB;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAOE,CAAC;AACT,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}