{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { c as commonjsGlobal, d as __rest } from './index-681e4b07.js';\nimport React__default, { useRef, useEffect } from 'react';\nimport '@storybook/theming';\nimport 'memoizerific';\nimport '@storybook/csf';\nimport 'qs';\nimport '@storybook/client-logger';\nvar OverlayScrollbars$1 = {\n  exports: {}\n};\n/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n\n(function (module) {\n  (function (global, factory) {\n    module.exports = factory(global, global.document, undefined);\n  })(typeof window !== 'undefined' ? window : commonjsGlobal, function (window, document, undefined$1) {\n    var PLUGINNAME = 'OverlayScrollbars';\n    var TYPES = {\n      o: 'object',\n      f: 'function',\n      a: 'array',\n      s: 'string',\n      b: 'boolean',\n      n: 'number',\n      u: 'undefined',\n      z: 'null' //d : 'date',\n      //e : 'error',\n      //r : 'regexp',\n      //y : 'symbol'\n    };\n    var LEXICON = {\n      c: 'class',\n      s: 'style',\n      i: 'id',\n      l: 'length',\n      p: 'prototype',\n      ti: 'tabindex',\n      oH: 'offsetHeight',\n      cH: 'clientHeight',\n      sH: 'scrollHeight',\n      oW: 'offsetWidth',\n      cW: 'clientWidth',\n      sW: 'scrollWidth',\n      hOP: 'hasOwnProperty',\n      bCR: 'getBoundingClientRect'\n    };\n    var VENDORS = function () {\n      //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n      var jsCache = {};\n      var cssCache = {};\n      var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n      var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n      function firstLetterToUpper(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n      return {\n        _cssPrefixes: cssPrefixes,\n        _jsPrefixes: jsPrefixes,\n        _cssProperty: function _cssProperty(name) {\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var uppercasedName = firstLetterToUpper(name);\n          var elmStyle = document.createElement('div')[LEXICON.s];\n          var resultPossibilities;\n          var i = 0;\n          var v;\n          var currVendorWithoutDashes;\n          for (; i < cssPrefixes.length; i++) {\n            currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n            resultPossibilities = [name,\n            //transition\n            cssPrefixes[i] + name,\n            //-webkit-transition\n            currVendorWithoutDashes + uppercasedName,\n            //webkitTransition\n            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n            ];\n            for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n              if (elmStyle[resultPossibilities[v]] !== undefined$1) {\n                result = resultPossibilities[v];\n                break;\n              }\n            }\n          }\n          cssCache[name] = result;\n          return result;\n        },\n        _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n          var name = property + ' ' + values;\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var dummyStyle = document.createElement('div')[LEXICON.s];\n          var possbleValues = values.split(' ');\n          var preparedSuffix = suffix || '';\n          var i = 0;\n          var v = -1;\n          var prop;\n          for (; i < possbleValues[LEXICON.l]; i++) {\n            for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n              prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n              dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n              if (dummyStyle[LEXICON.l]) {\n                result = prop;\n                break;\n              }\n            }\n          }\n          cssCache[name] = result;\n          return result;\n        },\n        _jsAPI: function _jsAPI(name, isInterface, fallback) {\n          var i = 0;\n          var result = jsCache[name];\n          if (!jsCache[LEXICON.hOP](name)) {\n            result = window[name];\n            for (; i < jsPrefixes[LEXICON.l]; i++) {\n              result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n            }\n            jsCache[name] = result;\n          }\n          return result || fallback;\n        }\n      };\n    }();\n    var COMPATIBILITY = function () {\n      function windowSize(x) {\n        return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n      }\n      function bind(func, thisObj) {\n        if (_typeof(func) != TYPES.f) {\n          throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n        var proto = LEXICON.p;\n        var aArgs = Array[proto].slice.call(arguments, 2);\n        var fNOP = function fNOP() {};\n        var fBound = function fBound() {\n          return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n        };\n        if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n        fBound[proto] = new fNOP();\n        return fBound;\n      }\n      return {\n        /**\r\n         * Gets the current window width.\r\n         * @returns {Number|number} The current window width in pixel.\r\n         */\n        wW: bind(windowSize, 0, true),\n        /**\r\n         * Gets the current window height.\r\n         * @returns {Number|number} The current window height in pixel.\r\n         */\n        wH: bind(windowSize, 0),\n        /**\r\n         * Gets the MutationObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n         */\n        mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n        /**\r\n         * Gets the ResizeObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n         */\n        rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n        /**\r\n         * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n         */\n        rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n          return window.setTimeout(func, 1000 / 60);\n        }),\n        /**\r\n         * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n         */\n        cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n          return window.clearTimeout(id);\n        }),\n        /**\r\n         * Gets the current time.\r\n         * @returns {number} The current time.\r\n         */\n        now: function now() {\n          return Date.now && Date.now() || new Date().getTime();\n        },\n        /**\r\n         * Stops the propagation of the given event.\r\n         * @param event The event of which the propagation shall be stoped.\r\n         */\n        stpP: function stpP(event) {\n          if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n        },\n        /**\r\n         * Prevents the default action of the given event.\r\n         * @param event The event of which the default action shall be prevented.\r\n         */\n        prvD: function prvD(event) {\n          if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n        },\n        /**\r\n         * Gets the pageX and pageY values of the given mouse event.\r\n         * @param event The mouse event of which the pageX and pageX shall be got.\r\n         * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n         */\n        page: function page(event) {\n          event = event.originalEvent || event;\n          var strPage = 'page';\n          var strClient = 'client';\n          var strX = 'X';\n          var strY = 'Y';\n          var target = event.target || event.srcElement || document;\n          var eventDoc = target.ownerDocument || document;\n          var doc = eventDoc.documentElement;\n          var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n          if (event.touches !== undefined$1) {\n            var touch = event.touches[0];\n            return {\n              x: touch[strPage + strX],\n              y: touch[strPage + strY]\n            };\n          } // Calculate pageX/Y if not native supported\n\n          if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n            return {\n              x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n              y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n            };\n          }\n          return {\n            x: event[strPage + strX],\n            y: event[strPage + strY]\n          };\n        },\n        /**\r\n         * Gets the clicked mouse button of the given mouse event.\r\n         * @param event The mouse event of which the clicked button shal be got.\r\n         * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n         */\n        mBtn: function mBtn(event) {\n          var button = event.button;\n          if (!event.which && button !== undefined$1) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n        },\n        /**\r\n         * Checks whether a item is in the given array and returns its index.\r\n         * @param item The item of which the position in the array shall be determined.\r\n         * @param arr The array.\r\n         * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n         */\n        inA: function inA(item, arr) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n            try {\n              if (arr[i] === item) return i;\n            } catch (e) {}\n          }\n          return -1;\n        },\n        /**\r\n         * Returns true if the given value is a array.\r\n         * @param arr The potential array.\r\n         * @returns {boolean} True if the given value is a array, false otherwise.\r\n         */\n        isA: function isA(arr) {\n          var def = Array.isArray;\n          return def ? def(arr) : this.type(arr) == TYPES.a;\n        },\n        /**\r\n         * Determine the internal JavaScript [[Class]] of the given object.\r\n         * @param obj The object of which the type shall be determined.\r\n         * @returns {string} The type of the given object.\r\n         */\n        type: function type(obj) {\n          if (obj === undefined$1) return obj + '';\n          if (obj === null) return obj + '';\n          return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n        },\n        bind: bind\n        /**\r\n         * Gets the vendor-prefixed CSS property by the given name.\r\n         * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n         * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n         * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n         * @param propName The unprefixed CSS property name.\r\n         * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n          cssProp: function(propName) {\r\n            return VENDORS._cssProperty(propName);\r\n        }\r\n        */\n      };\n    }();\n    var MATH = Math;\n    var JQUERY = window.jQuery;\n    var EASING = function () {\n      var _easingsMath = {\n        p: MATH.PI,\n        c: MATH.cos,\n        s: MATH.sin,\n        w: MATH.pow,\n        t: MATH.sqrt,\n        n: MATH.asin,\n        a: MATH.abs,\n        o: 1.70158\n      };\n      /*\r\n       x : current percent (0 - 1),\r\n       t : current time (duration * percent),\r\n       b : start value (from),\r\n       c : end value (to),\r\n       d : duration\r\n         easingName : function(x, t, b, c, d) { return easedValue; }\r\n       */\n\n      return {\n        swing: function swing(x, t, b, c, d) {\n          return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n        },\n        linear: function linear(x, t, b, c, d) {\n          return x;\n        },\n        easeInQuad: function easeInQuad(x, t, b, c, d) {\n          return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n          return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function easeInCubic(x, t, b, c, d) {\n          return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n        easeInQuart: function easeInQuart(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t + b;\n        },\n        easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n          return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n        easeInQuint: function easeInQuint(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t * t + b;\n        },\n        easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n        easeInSine: function easeInSine(x, t, b, c, d) {\n          return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n        },\n        easeOutSine: function easeOutSine(x, t, b, c, d) {\n          return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n        },\n        easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n          return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n        },\n        easeInExpo: function easeInExpo(x, t, b, c, d) {\n          return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n        },\n        easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n          return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n        },\n        easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n          return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n        },\n        easeInCirc: function easeInCirc(x, t, b, c, d) {\n          return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n        },\n        easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n          return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n        },\n        easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n        },\n        easeInElastic: function easeInElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n          return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        },\n        easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n          return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n        },\n        easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d / 2) == 2) return b + c;\n          if (!p) p = d * (.3 * 1.5);\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n          if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n          return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n        },\n        easeInBack: function easeInBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n        },\n        easeInBounce: function easeInBounce(x, t, b, c, d) {\n          return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n        },\n        easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n          var o = 7.5625;\n          if ((t /= d) < 1 / 2.75) {\n            return c * (o * t * t) + b;\n          } else if (t < 2 / 2.75) {\n            return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n          } else if (t < 2.5 / 2.75) {\n            return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n          } else {\n            return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n          }\n        },\n        easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n          return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        }\n      };\n      /*\r\n       *\r\n       * TERMS OF USE - EASING EQUATIONS\r\n       * \r\n       * Open source under the BSD License. \r\n       * \r\n       * Copyright Â© 2001 Robert Penner\r\n       * All rights reserved.\r\n       * \r\n       * Redistribution and use in source and binary forms, with or without modification, \r\n       * are permitted provided that the following conditions are met:\r\n       * \r\n       * Redistributions of source code must retain the above copyright notice, this list of \r\n       * conditions and the following disclaimer.\r\n       * Redistributions in binary form must reproduce the above copyright notice, this list \r\n       * of conditions and the following disclaimer in the documentation and/or other materials \r\n       * provided with the distribution.\r\n       * \r\n       * Neither the name of the author nor the names of contributors may be used to endorse \r\n       * or promote products derived from this software without specific prior written permission.\r\n       * \r\n       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n       * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n       * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n       *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n       *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n       * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n       * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n       *\r\n       */\n    }();\n    var FRAMEWORK = function () {\n      var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n      var _strSpace = ' ';\n      var _strEmpty = '';\n      var _strScrollLeft = 'scrollLeft';\n      var _strScrollTop = 'scrollTop';\n      var _animations = [];\n      var _type = COMPATIBILITY.type;\n      var _cssNumber = {\n        animationIterationCount: true,\n        columnCount: true,\n        fillOpacity: true,\n        flexGrow: true,\n        flexShrink: true,\n        fontWeight: true,\n        lineHeight: true,\n        opacity: true,\n        order: true,\n        orphans: true,\n        widows: true,\n        zIndex: true,\n        zoom: true\n      };\n      function extend() {\n        var src,\n          copyIsArray,\n          copy,\n          name,\n          options,\n          clone,\n          target = arguments[0] || {},\n          i = 1,\n          length = arguments[LEXICON.l],\n          deep = false; // Handle a deep copy situation\n\n        if (_type(target) == TYPES.b) {\n          deep = target;\n          target = arguments[1] || {}; // skip the boolean and the target\n\n          i = 2;\n        } // Handle case when target is a string or something (possible in deep copy)\n\n        if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n          target = {};\n        } // extend jQuery itself if only one argument is passed\n\n        if (length === i) {\n          target = FakejQuery;\n          --i;\n        }\n        for (; i < length; i++) {\n          // Only deal with non-null/undefined values\n          if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n              src = target[name];\n              copy = options[name]; // Prevent never-ending loop\n\n              if (target === copy) {\n                continue;\n              } // Recurse if we're merging plain objects or arrays\n\n              if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n                if (copyIsArray) {\n                  copyIsArray = false;\n                  clone = src && COMPATIBILITY.isA(src) ? src : [];\n                } else {\n                  clone = src && isPlainObject(src) ? src : {};\n                } // Never move original objects, clone them\n\n                target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n              } else if (copy !== undefined$1) {\n                target[name] = copy;\n              }\n            }\n          }\n        } // Return the modified object\n\n        return target;\n      }\n      function inArray(item, arr, fromIndex) {\n        for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n          if (arr[i] === item) return i;\n        }\n        return -1;\n      }\n      function isFunction(obj) {\n        return _type(obj) == TYPES.f;\n      }\n      function isEmptyObject(obj) {\n        for (var name in obj) {\n          return false;\n        }\n        return true;\n      }\n      function isPlainObject(obj) {\n        if (!obj || _type(obj) != TYPES.o) return false;\n        var key;\n        var proto = LEXICON.p;\n        var hasOwnProperty = Object[proto].hasOwnProperty;\n        var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n        var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n          return false;\n        }\n        for (key in obj) {\n          /**/\n        }\n        return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n      }\n      function _each(obj, callback) {\n        var i = 0;\n        if (isArrayLike(obj)) {\n          for (; i < obj[LEXICON.l]; i++) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        } else {\n          for (i in obj) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        }\n        return obj;\n      }\n      function isArrayLike(obj) {\n        var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n        var t = _type(obj);\n        return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n      }\n      function stripAndCollapse(value) {\n        var tokens = value.match(_rnothtmlwhite) || [];\n        return tokens.join(_strSpace);\n      }\n      function matches(elem, selector) {\n        var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n        var i = nodeList[LEXICON.l];\n        while (i--) {\n          if (nodeList[i] == elem) return true;\n        }\n        return false;\n      }\n      function insertAdjacentElement(el, strategy, child) {\n        if (COMPATIBILITY.isA(child)) {\n          for (var i = 0; i < child[LEXICON.l]; i++) {\n            insertAdjacentElement(el, strategy, child[i]);\n          }\n        } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n      }\n      function setCSSVal(el, prop, val) {\n        try {\n          if (el[LEXICON.s][prop] !== undefined$1) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n        } catch (e) {}\n      }\n      function parseCSSVal(prop, val) {\n        if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n        return val;\n      }\n      function startNextAnimationInQ(animObj, removeFromQ) {\n        var index;\n        var nextAnim;\n        if (removeFromQ !== false) animObj.q.splice(0, 1);\n        if (animObj.q[LEXICON.l] > 0) {\n          nextAnim = animObj.q[0];\n          _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n        } else {\n          index = inArray(animObj, _animations);\n          if (index > -1) _animations.splice(index, 1);\n        }\n      }\n      function setAnimationValue(el, prop, value) {\n        if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n      }\n      function _animate(el, props, options, easing, complete, guaranteedNext) {\n        var hasOptions = isPlainObject(options);\n        var from = {};\n        var to = {};\n        var i = 0;\n        var key;\n        var animObj;\n        var progress;\n        var step;\n        var specialEasing;\n        var duration;\n        if (hasOptions) {\n          easing = options.easing;\n          progress = options.progress;\n          step = options.step;\n          specialEasing = options.specialEasing;\n          complete = options.complete;\n          duration = options.duration;\n        } else duration = options;\n        specialEasing = specialEasing || {};\n        duration = duration || 400;\n        easing = easing || 'swing';\n        guaranteedNext = guaranteedNext || false;\n        for (; i < _animations[LEXICON.l]; i++) {\n          if (_animations[i].el === el) {\n            animObj = _animations[i];\n            break;\n          }\n        }\n        if (!animObj) {\n          animObj = {\n            el: el,\n            q: []\n          };\n          _animations.push(animObj);\n        }\n        for (key in props) {\n          if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n        }\n        for (key in from) {\n          if (from[key] !== props[key] && props[key] !== undefined$1) to[key] = props[key];\n        }\n        if (!isEmptyObject(to)) {\n          var timeNow;\n          var end;\n          var percent;\n          var fromVal;\n          var toVal;\n          var easedVal;\n          var timeStart;\n          var _frame;\n          var elapsed;\n          var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n          var qObj = {\n            props: to,\n            duration: hasOptions ? options : duration,\n            easing: easing,\n            complete: complete\n          };\n          if (qPos === -1) {\n            qPos = animObj.q[LEXICON.l];\n            animObj.q.push(qObj);\n          }\n          if (qPos === 0) {\n            if (duration > 0) {\n              timeStart = COMPATIBILITY.now();\n              _frame = function frame() {\n                timeNow = COMPATIBILITY.now();\n                elapsed = timeNow - timeStart;\n                end = qObj.stop || elapsed >= duration;\n                percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n                for (key in to) {\n                  fromVal = parseFloat(from[key]);\n                  toVal = parseFloat(to[key]);\n                  easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                  setAnimationValue(el, key, easedVal);\n                  if (isFunction(step)) {\n                    step(easedVal, {\n                      elem: el,\n                      prop: key,\n                      start: fromVal,\n                      now: easedVal,\n                      end: toVal,\n                      pos: percent,\n                      options: {\n                        easing: easing,\n                        speacialEasing: specialEasing,\n                        duration: duration,\n                        complete: complete,\n                        step: step\n                      },\n                      startTime: timeStart\n                    });\n                  }\n                }\n                if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n                if (end) {\n                  startNextAnimationInQ(animObj);\n                  if (isFunction(complete)) complete();\n                } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n              };\n              qObj.frame = COMPATIBILITY.rAF()(_frame);\n            } else {\n              for (key in to) {\n                setAnimationValue(el, key, to[key]);\n              }\n              startNextAnimationInQ(animObj);\n            }\n          }\n        } else if (guaranteedNext) startNextAnimationInQ(animObj);\n      }\n      function _stop(el, clearQ, jumpToEnd) {\n        var animObj;\n        var qObj;\n        var key;\n        var i = 0;\n        for (; i < _animations[LEXICON.l]; i++) {\n          animObj = _animations[i];\n          if (animObj.el === el) {\n            if (animObj.q[LEXICON.l] > 0) {\n              qObj = animObj.q[0];\n              qObj.stop = true;\n              COMPATIBILITY.cAF()(qObj.frame);\n              animObj.q.splice(0, 1);\n              if (jumpToEnd) for (key in qObj.props) {\n                setAnimationValue(el, key, qObj.props[key]);\n              }\n              if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n            }\n            break;\n          }\n        }\n      }\n      function elementIsVisible(el) {\n        return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n      }\n      function FakejQuery(selector) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var base = new FakejQuery();\n        var elements = selector;\n        var i = 0;\n        var elms;\n        var el;\n        if (_type(selector) == TYPES.s) {\n          elements = [];\n          if (selector.charAt(0) === '<') {\n            el = document.createElement('div');\n            el.innerHTML = selector;\n            elms = el.children;\n          } else {\n            elms = document.querySelectorAll(selector);\n          }\n          for (; i < elms[LEXICON.l]; i++) {\n            elements.push(elms[i]);\n          }\n        }\n        if (elements) {\n          if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n          for (i = 0; i < elements[LEXICON.l]; i++) {\n            base[i] = elements[i];\n          }\n          base[LEXICON.l] = elements[LEXICON.l];\n        }\n        return base;\n      }\n      FakejQuery[LEXICON.p] = {\n        //EVENTS:\n        on: function on(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n            try {\n              if (el.addEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.addEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.attachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        off: function off(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n            try {\n              if (el.removeEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.removeEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.detachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        one: function one(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          return this.each(function () {\n            var el = FakejQuery(this);\n            FakejQuery.each(eventName, function (i, oneEventName) {\n              var oneHandler = function oneHandler(e) {\n                handler.call(this, e);\n                el.off(oneEventName, oneHandler);\n              };\n              el.on(oneEventName, oneHandler);\n            });\n          });\n        },\n        trigger: function trigger(eventName) {\n          var el;\n          var event;\n          return this.each(function () {\n            el = this;\n            if (document.createEvent) {\n              event = document.createEvent('HTMLEvents');\n              event.initEvent(eventName, true, false);\n              el.dispatchEvent(event);\n            } else {\n              el.fireEvent('on' + eventName);\n            }\n          });\n        },\n        //DOM NODE INSERTING / REMOVING:\n        append: function append(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforeend', child);\n          });\n        },\n        prepend: function prepend(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterbegin', child);\n          });\n        },\n        before: function before(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforebegin', child);\n          });\n        },\n        after: function after(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterend', child);\n          });\n        },\n        remove: function remove() {\n          return this.each(function () {\n            var el = this;\n            var parentNode = el.parentNode;\n            if (parentNode != null) parentNode.removeChild(el);\n          });\n        },\n        unwrap: function unwrap() {\n          var parents = [];\n          var i;\n          var el;\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (inArray(parent, parents) === -1) parents.push(parent);\n          });\n          for (i = 0; i < parents[LEXICON.l]; i++) {\n            el = parents[i];\n            parent = el.parentNode;\n            while (el.firstChild) {\n              parent.insertBefore(el.firstChild, el);\n            }\n            parent.removeChild(el);\n          }\n          return this;\n        },\n        wrapAll: function wrapAll(wrapperHTML) {\n          var i;\n          var nodes = this;\n          var wrapper = FakejQuery(wrapperHTML)[0];\n          var deepest = wrapper;\n          var parent = nodes[0].parentNode;\n          var previousSibling = nodes[0].previousSibling;\n          while (deepest.childNodes[LEXICON.l] > 0) {\n            deepest = deepest.childNodes[0];\n          }\n          for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n            deepest.appendChild(nodes[i]);\n          }\n          var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n          parent.insertBefore(wrapper, nextSibling);\n          return this;\n        },\n        wrapInner: function wrapInner(wrapperHTML) {\n          return this.each(function () {\n            var el = FakejQuery(this);\n            var contents = el.contents();\n            if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n          });\n        },\n        wrap: function wrap(wrapperHTML) {\n          return this.each(function () {\n            FakejQuery(this).wrapAll(wrapperHTML);\n          });\n        },\n        //DOM NODE MANIPULATION / INFORMATION:\n        css: function css(styles, val) {\n          var el;\n          var key;\n          var cptStyle;\n          var getCptStyle = window.getComputedStyle;\n          if (_type(styles) == TYPES.s) {\n            if (val === undefined$1) {\n              el = this[0];\n              cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n              return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n            } else {\n              return this.each(function () {\n                setCSSVal(this, styles, val);\n              });\n            }\n          } else {\n            return this.each(function () {\n              for (key in styles) {\n                setCSSVal(this, key, styles[key]);\n              }\n            });\n          }\n        },\n        hasClass: function hasClass(className) {\n          var elem,\n            i = 0;\n          var classNamePrepared = _strSpace + className + _strSpace;\n          var classList;\n          while (elem = this[i++]) {\n            classList = elem.classList;\n            if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n          }\n          return false;\n        },\n        addClass: function addClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.add(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                  }\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n          return this;\n        },\n        removeClass: function removeClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.remove(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                      cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                    }\n                  }\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n          return this;\n        },\n        hide: function hide() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'none';\n          });\n        },\n        show: function show() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'block';\n          });\n        },\n        attr: function attr(attrName, value) {\n          var i = 0;\n          var el;\n          while (el = this[i++]) {\n            if (value === undefined$1) return el.getAttribute(attrName);\n            el.setAttribute(attrName, value);\n          }\n          return this;\n        },\n        removeAttr: function removeAttr(attrName) {\n          return this.each(function () {\n            this.removeAttribute(attrName);\n          });\n        },\n        offset: function offset() {\n          var el = this[0];\n          var rect = el[LEXICON.bCR]();\n          var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n          var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n          return {\n            top: rect.top + scrollTop,\n            left: rect.left + scrollLeft\n          };\n        },\n        position: function position() {\n          var el = this[0];\n          return {\n            top: el.offsetTop,\n            left: el.offsetLeft\n          };\n        },\n        scrollLeft: function scrollLeft(value) {\n          var i = 0;\n          var el;\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollLeft];\n            el[_strScrollLeft] = value;\n          }\n          return this;\n        },\n        scrollTop: function scrollTop(value) {\n          var i = 0;\n          var el;\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollTop];\n            el[_strScrollTop] = value;\n          }\n          return this;\n        },\n        val: function val(value) {\n          var el = this[0];\n          if (!value) return el.value;\n          el.value = value;\n          return this;\n        },\n        //DOM TRAVERSAL / FILTERING:\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(index) {\n          return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n        },\n        find: function find(selector) {\n          var children = [];\n          var i;\n          this.each(function () {\n            var el = this;\n            var ch = el.querySelectorAll(selector);\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              children.push(ch[i]);\n            }\n          });\n          return FakejQuery(children);\n        },\n        children: function children(selector) {\n          var children = [];\n          var el;\n          var ch;\n          var i;\n          this.each(function () {\n            ch = this.children;\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              el = ch[i];\n              if (selector) {\n                if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n              } else children.push(el);\n            }\n          });\n          return FakejQuery(children);\n        },\n        parent: function parent(selector) {\n          var parents = [];\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n          });\n          return FakejQuery(parents);\n        },\n        is: function is(selector) {\n          var el;\n          var i;\n          for (i = 0; i < this[LEXICON.l]; i++) {\n            el = this[i];\n            if (selector === ':visible') return elementIsVisible(el);\n            if (selector === ':hidden') return !elementIsVisible(el);\n            if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n          }\n          return false;\n        },\n        contents: function contents() {\n          var contents = [];\n          var childs;\n          var i;\n          this.each(function () {\n            childs = this.childNodes;\n            for (i = 0; i < childs[LEXICON.l]; i++) {\n              contents.push(childs[i]);\n            }\n          });\n          return FakejQuery(contents);\n        },\n        each: function each(callback) {\n          return _each(this, callback);\n        },\n        //ANIMATION:\n        animate: function animate(props, duration, easing, complete) {\n          return this.each(function () {\n            _animate(this, props, duration, easing, complete);\n          });\n        },\n        stop: function stop(clearQ, jump) {\n          return this.each(function () {\n            _stop(this, clearQ, jump);\n          });\n        }\n      };\n      extend(FakejQuery, {\n        extend: extend,\n        inArray: inArray,\n        isEmptyObject: isEmptyObject,\n        isPlainObject: isPlainObject,\n        each: _each\n      });\n      return FakejQuery;\n    }();\n    var INSTANCES = function () {\n      var _targets = [];\n      var _instancePropertyString = '__overlayScrollbars__';\n      /**\r\n       * Register, unregister or get a certain (or all) instances.\r\n       * Register: Pass the target and the instance.\r\n       * Unregister: Pass the target and null.\r\n       * Get Instance: Pass the target from which the instance shall be got.\r\n       * Get Targets: Pass no arguments.\r\n       * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n       * @param instance The instance.\r\n       * @returns {*|void} Returns the instance from the given target.\r\n       */\n\n      return function (target, instance) {\n        var argLen = arguments[LEXICON.l];\n        if (argLen < 1) {\n          //return all targets\n          return _targets;\n        } else {\n          if (instance) {\n            //register instance\n            target[_instancePropertyString] = instance;\n            _targets.push(target);\n          } else {\n            var index = COMPATIBILITY.inA(target, _targets);\n            if (index > -1) {\n              if (argLen > 1) {\n                //unregister instance\n                delete target[_instancePropertyString];\n                _targets.splice(index, 1);\n              } else {\n                //get instance from target\n                return _targets[index][_instancePropertyString];\n              }\n            }\n          }\n        }\n      };\n    }();\n    var PLUGIN = function () {\n      var _plugin;\n      var _pluginsGlobals;\n      var _pluginsAutoUpdateLoop;\n      var _pluginsExtensions = [];\n      var _pluginsOptions = function () {\n        var type = COMPATIBILITY.type;\n        var possibleTemplateTypes = [TYPES.b,\n        //boolean\n        TYPES.n,\n        //number\n        TYPES.s,\n        //string\n        TYPES.a,\n        //array\n        TYPES.o,\n        //object\n        TYPES.f,\n        //function\n        TYPES.z //null\n        ];\n        var restrictedStringsSplit = ' ';\n        var restrictedStringsPossibilitiesSplit = ':';\n        var classNameAllowedValues = [TYPES.z, TYPES.s];\n        var numberAllowedValues = TYPES.n;\n        var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n        var booleanTrueTemplate = [true, TYPES.b];\n        var booleanFalseTemplate = [false, TYPES.b];\n        var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n        var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n        var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n        var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n        var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n        var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n        var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n        var optionsDefaultsAndTemplate = {\n          className: ['os-theme-dark', classNameAllowedValues],\n          //null || string\n          resize: ['none', resizeAllowedValues],\n          //none || both  || horizontal || vertical || n || b || h || v\n          sizeAutoCapable: booleanTrueTemplate,\n          //true || false\n          clipAlways: booleanTrueTemplate,\n          //true || false\n          normalizeRTL: booleanTrueTemplate,\n          //true || false\n          paddingAbsolute: booleanFalseTemplate,\n          //true || false\n          autoUpdate: [null, booleanNullAllowedValues],\n          //true || false || null\n          autoUpdateInterval: [33, numberAllowedValues],\n          //number\n          updateOnLoad: updateOnLoadTemplate,\n          //string || array || null\n          nativeScrollbarsOverlaid: {\n            showNativeScrollbars: booleanFalseTemplate,\n            //true || false\n            initialize: booleanTrueTemplate //true || false\n          },\n          overflowBehavior: {\n            x: ['scroll', overflowBehaviorAllowedValues],\n            //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n            y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n          },\n          scrollbars: {\n            visibility: ['auto', scrollbarsVisibilityAllowedValues],\n            //visible || hidden || auto || v || h || a\n            autoHide: ['never', scrollbarsAutoHideAllowedValues],\n            //never || scroll || leave || move || n || s || l || m\n            autoHideDelay: [800, numberAllowedValues],\n            //number\n            dragScrolling: booleanTrueTemplate,\n            //true || false\n            clickScrolling: booleanFalseTemplate,\n            //true || false\n            touchSupport: booleanTrueTemplate,\n            //true || false\n            snapHandle: booleanFalseTemplate //true || false\n          },\n          textarea: {\n            dynWidth: booleanFalseTemplate,\n            //true || false\n            dynHeight: booleanFalseTemplate,\n            //true || false\n            inheritedAttrs: inheritedAttrsTemplate //string || array || null\n          },\n          callbacks: {\n            onInitialized: callbackTemplate,\n            //null || function\n            onInitializationWithdrawn: callbackTemplate,\n            //null || function\n            onDestroyed: callbackTemplate,\n            //null || function\n            onScrollStart: callbackTemplate,\n            //null || function\n            onScroll: callbackTemplate,\n            //null || function\n            onScrollStop: callbackTemplate,\n            //null || function\n            onOverflowChanged: callbackTemplate,\n            //null || function\n            onOverflowAmountChanged: callbackTemplate,\n            //null || function\n            onDirectionChanged: callbackTemplate,\n            //null || function\n            onContentSizeChanged: callbackTemplate,\n            //null || function\n            onHostSizeChanged: callbackTemplate,\n            //null || function\n            onUpdated: callbackTemplate //null || function\n          }\n        };\n        var convert = function convert(template) {\n          var recursive = function recursive(obj) {\n            var key;\n            var val;\n            var valType;\n            for (key in obj) {\n              if (!obj[LEXICON.hOP](key)) continue;\n              val = obj[key];\n              valType = type(val);\n              if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n            }\n            return obj;\n          };\n          return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n        };\n        return {\n          _defaults: convert(),\n          _template: convert(true),\n          /**\r\n           * Validates the passed object by the passed template.\r\n           * @param obj The object which shall be validated.\r\n           * @param template The template which defines the allowed values and types.\r\n           * @param writeErrors True if errors shall be logged to the console.\r\n           * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n           * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n           */\n          _validate: function _validate(obj, template, writeErrors, diffObj) {\n            var validatedOptions = {};\n            var validatedOptionsPrepared = {};\n            var objectCopy = FRAMEWORK.extend(true, {}, obj);\n            var inArray = FRAMEWORK.inArray;\n            var isEmptyObj = FRAMEWORK.isEmptyObject;\n            var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n              for (var prop in template) {\n                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                  var isValid = false;\n                  var isDiff = false;\n                  var templateValue = template[prop];\n                  var templateValueType = type(templateValue);\n                  var templateIsComplex = templateValueType == TYPES.o;\n                  var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                  var dataDiffValue = diffData[prop];\n                  var dataValue = data[prop];\n                  var dataValueType = type(dataValue);\n                  var propPrefix = prevPropName ? prevPropName + '.' : '';\n                  var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                  var errorPossibleTypes = [];\n                  var errorRestrictedStrings = [];\n                  var restrictedStringValuesSplit;\n                  var restrictedStringValuesPossibilitiesSplit;\n                  var isRestrictedValue;\n                  var mainPossibility;\n                  var currType;\n                  var i;\n                  var v;\n                  var j;\n                  dataDiffValue = dataDiffValue === undefined$1 ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                  if (templateIsComplex && dataValueType == TYPES.o) {\n                    validatedOptions[prop] = {};\n                    validatedOptionsPrepared[prop] = {};\n                    checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                    FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                      if (isEmptyObj(value[prop])) {\n                        delete value[prop];\n                      }\n                    });\n                  } else if (!templateIsComplex) {\n                    for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                      currType = templateTypes[i];\n                      templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                      isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n                      if (isRestrictedValue) {\n                        errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                        restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                        errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n                        for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                          //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                          restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                          mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n                          for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                            //if any possibility matches with the dataValue, its valid\n                            if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                              isValid = true;\n                              break;\n                            }\n                          }\n                          if (isValid) break;\n                        }\n                      } else {\n                        errorPossibleTypes.push(currType);\n                        if (dataValueType === currType) {\n                          isValid = true;\n                          break;\n                        }\n                      }\n                    }\n                    if (isValid) {\n                      isDiff = dataValue !== dataDiffValue;\n                      if (isDiff) validatedOptions[prop] = dataValue;\n                      if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                    } else if (writeErrors) {\n                      console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                    }\n                    delete data[prop];\n                  }\n                }\n              }\n            };\n            checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n            /*\r\n            if(keepForeignProps) {\r\n                FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n            }\r\n            */\n\n            if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n            return {\n              _default: validatedOptions,\n              _prepared: validatedOptionsPrepared\n            };\n          }\n        };\n      }();\n      /**\r\n       * Initializes the object which contains global information about the plugin and each instance of it.\r\n       */\n\n      function initOverlayScrollbarsStatics() {\n        if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n        if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n      }\n      /**\r\n       * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @param defaultOptions\r\n       * @constructor\r\n       */\n\n      function OverlayScrollbarsGlobals(defaultOptions) {\n        var _base = this;\n        var strOverflow = 'overflow';\n        var strHidden = 'hidden';\n        var strScroll = 'scroll';\n        var bodyElement = FRAMEWORK('body');\n        var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n        var scrollbarDummyElement0 = scrollbarDummyElement[0];\n        var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n        bodyElement.append(scrollbarDummyElement);\n        scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n        var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n        var nativeScrollbarIsOverlaid = {\n          x: nativeScrollbarSize.x === 0,\n          y: nativeScrollbarSize.y === 0\n        };\n        var msie = function () {\n          var ua = window.navigator.userAgent;\n          var strIndexOf = 'indexOf';\n          var strSubString = 'substring';\n          var msie = ua[strIndexOf]('MSIE ');\n          var trident = ua[strIndexOf]('Trident/');\n          var edge = ua[strIndexOf]('Edge/');\n          var rv = ua[strIndexOf]('rv:');\n          var result;\n          var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n          if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n          else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n          return result;\n        }();\n        FRAMEWORK.extend(_base, {\n          defaultOptions: defaultOptions,\n          msie: msie,\n          autoUpdateLoop: false,\n          autoUpdateRecommended: !COMPATIBILITY.mO(),\n          nativeScrollbarSize: nativeScrollbarSize,\n          nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n          nativeScrollbarStyling: function () {\n            var result = false;\n            scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n            try {\n              result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n            } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n            //and set overflow to scroll\n            //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n            //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n            return result;\n          }(),\n          overlayScrollbarDummySize: {\n            x: 30,\n            y: 30\n          },\n          cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n          restrictedMeasuring: function () {\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n            //since 1.11.0 always false -> fixed via CSS (hopefully)\n            scrollbarDummyElement.css(strOverflow, strHidden);\n            var scrollSize = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            scrollbarDummyElement.css(strOverflow, 'visible');\n            var scrollSize2 = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n          }(),\n          rtlScrollBehavior: function () {\n            scrollbarDummyElement.css({\n              'overflow-y': strHidden,\n              'overflow-x': strScroll,\n              'direction': 'rtl'\n            }).scrollLeft(0);\n            var dummyContainerOffset = scrollbarDummyElement.offset();\n            var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n            scrollbarDummyElement.scrollLeft(-999);\n            var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n            return {\n              //origin direction = determines if the zero scroll position is on the left or right side\n              //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n              //true = on the left side\n              //false = on the right side\n              i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n              //negative = determines if the maximum scroll is positive or negative\n              //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n              //true = negative\n              //false = positive\n              n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n            };\n          }(),\n          supportTransform: !!VENDORS._cssProperty('transform'),\n          supportTransition: !!VENDORS._cssProperty('transition'),\n          supportPassiveEvents: function () {\n            var supportsPassive = false;\n            try {\n              window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: function get() {\n                  supportsPassive = true;\n                }\n              }));\n            } catch (e) {}\n            return supportsPassive;\n          }(),\n          supportResizeObserver: !!COMPATIBILITY.rO(),\n          supportMutationObserver: !!COMPATIBILITY.mO()\n        });\n        scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n        (function () {\n          if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n          var abs = MATH.abs;\n          var windowWidth = COMPATIBILITY.wW();\n          var windowHeight = COMPATIBILITY.wH();\n          var windowDpr = getWindowDPR();\n          var onResize = function onResize() {\n            if (INSTANCES().length > 0) {\n              var newW = COMPATIBILITY.wW();\n              var newH = COMPATIBILITY.wH();\n              var deltaW = newW - windowWidth;\n              var deltaH = newH - windowHeight;\n              if (deltaW === 0 && deltaH === 0) return;\n              var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n              var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n              var absDeltaW = abs(deltaW);\n              var absDeltaH = abs(deltaH);\n              var absDeltaWRatio = abs(deltaWRatio);\n              var absDeltaHRatio = abs(deltaHRatio);\n              var newDPR = getWindowDPR();\n              var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n              var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n              var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n              var isZoom = deltaIsBigger && difference && dprChanged;\n              var oldScrollbarSize = _base.nativeScrollbarSize;\n              var newScrollbarSize;\n              if (isZoom) {\n                bodyElement.append(scrollbarDummyElement);\n                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n                scrollbarDummyElement.remove();\n                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                  FRAMEWORK.each(INSTANCES(), function () {\n                    if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                  });\n                }\n              }\n              windowWidth = newW;\n              windowHeight = newH;\n              windowDpr = newDPR;\n            }\n          };\n          function differenceIsBiggerThanOne(valOne, valTwo) {\n            var absValOne = abs(valOne);\n            var absValTwo = abs(valTwo);\n            return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n          }\n          function getWindowDPR() {\n            var dDPI = window.screen.deviceXDPI || 0;\n            var sDPI = window.screen.logicalXDPI || 1;\n            return window.devicePixelRatio || dDPI / sDPI;\n          }\n          FRAMEWORK(window).on('resize', onResize);\n        })();\n        function calcNativeScrollbarSize(measureElement) {\n          return {\n            x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n            y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n          };\n        }\n      }\n      /**\r\n       * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @constructor\r\n       */\n\n      function OverlayScrollbarsAutoUpdateLoop(globals) {\n        var _base = this;\n        var _inArray = FRAMEWORK.inArray;\n        var _getNow = COMPATIBILITY.now;\n        var _strAutoUpdate = 'autoUpdate';\n        var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n        var _strLength = LEXICON.l;\n        var _loopingInstances = [];\n        var _loopingInstancesIntervalCache = [];\n        var _loopIsActive = false;\n        var _loopIntervalDefault = 33;\n        var _loopInterval = _loopIntervalDefault;\n        var _loopTimeOld = _getNow();\n        var _loopID;\n        /**\r\n         * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n         */\n\n        var loop = function loop() {\n          if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n            _loopID = COMPATIBILITY.rAF()(function () {\n              loop();\n            });\n            var timeNew = _getNow();\n            var timeDelta = timeNew - _loopTimeOld;\n            var lowestInterval;\n            var instance;\n            var instanceOptions;\n            var instanceAutoUpdateAllowed;\n            var instanceAutoUpdateInterval;\n            var now;\n            if (timeDelta > _loopInterval) {\n              _loopTimeOld = timeNew - timeDelta % _loopInterval;\n              lowestInterval = _loopIntervalDefault;\n              for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n                instance = _loopingInstances[i];\n                if (instance !== undefined$1) {\n                  instanceOptions = instance.options();\n                  instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                  instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                  now = _getNow();\n                  if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                    instance.update('auto');\n                    _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                  }\n                  lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n                }\n              }\n              _loopInterval = lowestInterval;\n            }\n          } else {\n            _loopInterval = _loopIntervalDefault;\n          }\n        };\n        /**\r\n         * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n        _base.add = function (instance) {\n          if (_inArray(instance, _loopingInstances) === -1) {\n            _loopingInstances.push(instance);\n            _loopingInstancesIntervalCache.push(_getNow());\n            if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n              _loopIsActive = true;\n              globals.autoUpdateLoop = _loopIsActive;\n              loop();\n            }\n          }\n        };\n        /**\r\n         * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n        _base.remove = function (instance) {\n          var index = _inArray(instance, _loopingInstances);\n          if (index > -1) {\n            //remove from loopingInstances list\n            _loopingInstancesIntervalCache.splice(index, 1);\n            _loopingInstances.splice(index, 1); //correct update loop behavior\n\n            if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n              _loopIsActive = false;\n              globals.autoUpdateLoop = _loopIsActive;\n              if (_loopID !== undefined$1) {\n                COMPATIBILITY.cAF()(_loopID);\n                _loopID = -1;\n              }\n            }\n          }\n        };\n      }\n      /**\r\n       * A object which manages the scrollbars visibility of the target element.\r\n       * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n       * @param options The custom options.\r\n       * @param extensions The custom extensions.\r\n       * @param globals\r\n       * @param autoUpdateLoop\r\n       * @returns {*}\r\n       * @constructor\r\n       */\n\n      function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n        //shortcuts\n        var type = COMPATIBILITY.type;\n        var inArray = FRAMEWORK.inArray;\n        var each = FRAMEWORK.each; //make correct instanceof\n\n        var _base = new _plugin();\n        var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n        if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n        if (INSTANCES(pluginTargetElement)) {\n          var inst = INSTANCES(pluginTargetElement);\n          inst.options(options);\n          return inst;\n        } //globals:\n\n        var _nativeScrollbarIsOverlaid;\n        var _overlayScrollbarDummySize;\n        var _rtlScrollBehavior;\n        var _autoUpdateRecommended;\n        var _msieVersion;\n        var _nativeScrollbarStyling;\n        var _cssCalc;\n        var _nativeScrollbarSize;\n        var _supportTransition;\n        var _supportTransform;\n        var _supportPassiveEvents;\n        var _supportResizeObserver;\n        var _supportMutationObserver;\n        var _initialized;\n        var _destroyed;\n        var _isTextarea;\n        var _isBody;\n        var _documentMixed;\n        var _domExists; //general:\n\n        var _isBorderBox;\n        var _sizeAutoObserverAdded;\n        var _paddingX;\n        var _paddingY;\n        var _borderX;\n        var _borderY;\n        var _marginX;\n        var _marginY;\n        var _isRTL;\n        var _sleeping;\n        var _contentBorderSize = {};\n        var _scrollHorizontalInfo = {};\n        var _scrollVerticalInfo = {};\n        var _viewportSize = {};\n        var _nativeScrollbarMinSize = {}; //naming:\t\n\n        var _strMinusHidden = '-hidden';\n        var _strMarginMinus = 'margin-';\n        var _strPaddingMinus = 'padding-';\n        var _strBorderMinus = 'border-';\n        var _strTop = 'top';\n        var _strRight = 'right';\n        var _strBottom = 'bottom';\n        var _strLeft = 'left';\n        var _strMinMinus = 'min-';\n        var _strMaxMinus = 'max-';\n        var _strWidth = 'width';\n        var _strHeight = 'height';\n        var _strFloat = 'float';\n        var _strEmpty = '';\n        var _strAuto = 'auto';\n        var _strSync = 'sync';\n        var _strScroll = 'scroll';\n        var _strHundredPercent = '100%';\n        var _strX = 'x';\n        var _strY = 'y';\n        var _strDot = '.';\n        var _strSpace = ' ';\n        var _strScrollbar = 'scrollbar';\n        var _strMinusHorizontal = '-horizontal';\n        var _strMinusVertical = '-vertical';\n        var _strScrollLeft = _strScroll + 'Left';\n        var _strScrollTop = _strScroll + 'Top';\n        var _strMouseTouchDownEvent = 'mousedown touchstart';\n        var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n        var _strMouseTouchMoveEvent = 'mousemove touchmove';\n        var _strMouseEnter = 'mouseenter';\n        var _strMouseLeave = 'mouseleave';\n        var _strKeyDownEvent = 'keydown';\n        var _strKeyUpEvent = 'keyup';\n        var _strSelectStartEvent = 'selectstart';\n        var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n        var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n        var _cassNamesPrefix = 'os-';\n        var _classNameHTMLElement = _cassNamesPrefix + 'html';\n        var _classNameHostElement = _cassNamesPrefix + 'host';\n        var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n        var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n        var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n        var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n        var _classNameHostTransition = _classNameHostElement + '-transition';\n        var _classNameHostRTL = _classNameHostElement + '-rtl';\n        var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n        var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n        var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n        var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n        var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n        var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n        var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n        var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n        var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n        var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n        var _classNameContentElement = _cassNamesPrefix + 'content';\n        var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n        var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n        var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n        var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n        var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n        var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n        var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n        var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n        var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n        var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n        var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n        var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n        var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n        var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n        var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n        var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n        var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n        var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n        var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n        var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n        var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n        var _classNameDragging = _cassNamesPrefix + 'dragging';\n        var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n        var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n        var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n        var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n        var _defaultOptions;\n        var _currentOptions;\n        var _currentPreparedOptions; //extensions:\t\n\n        var _extensions = {};\n        var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n        var _lastUpdateTime;\n        var _swallowedUpdateHints = {};\n        var _swallowedUpdateTimeout;\n        var _swallowUpdateLag = 42;\n        var _updateOnLoadEventName = 'load';\n        var _updateOnLoadElms = []; //DOM elements:\t\n\n        var _windowElement;\n        var _documentElement;\n        var _htmlElement;\n        var _bodyElement;\n        var _targetElement; //the target element of this OverlayScrollbars object\t\n\n        var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n        var _sizeAutoObserverElement; //observes size auto changes\t\n\n        var _sizeObserverElement; //observes size and padding changes\t\n\n        var _paddingElement; //manages the padding\t\n\n        var _viewportElement; //is the viewport of our scrollbar model\t\n\n        var _contentElement; //the element which holds the content\t\n\n        var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n        var _contentGlueElement; //has always the size of the content element\t\n\n        var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n        var _scrollbarCornerElement;\n        var _scrollbarHorizontalElement;\n        var _scrollbarHorizontalTrackElement;\n        var _scrollbarHorizontalHandleElement;\n        var _scrollbarVerticalElement;\n        var _scrollbarVerticalTrackElement;\n        var _scrollbarVerticalHandleElement;\n        var _windowElementNative;\n        var _documentElementNative;\n        var _targetElementNative;\n        var _hostElementNative;\n        var _sizeAutoObserverElementNative;\n        var _sizeObserverElementNative;\n        var _paddingElementNative;\n        var _viewportElementNative;\n        var _contentElementNative; //Cache:\t\n\n        var _hostSizeCache;\n        var _contentScrollSizeCache;\n        var _arrangeContentSizeCache;\n        var _hasOverflowCache;\n        var _hideOverflowCache;\n        var _widthAutoCache;\n        var _heightAutoCache;\n        var _cssBoxSizingCache;\n        var _cssPaddingCache;\n        var _cssBorderCache;\n        var _cssMarginCache;\n        var _cssDirectionCache;\n        var _cssDirectionDetectedCache;\n        var _paddingAbsoluteCache;\n        var _clipAlwaysCache;\n        var _contentGlueSizeCache;\n        var _overflowBehaviorCache;\n        var _overflowAmountCache;\n        var _ignoreOverlayScrollbarHidingCache;\n        var _autoUpdateCache;\n        var _sizeAutoCapableCache;\n        var _contentElementScrollSizeChangeDetectedCache;\n        var _hostElementSizeChangeDetectedCache;\n        var _scrollbarsVisibilityCache;\n        var _scrollbarsAutoHideCache;\n        var _scrollbarsClickScrollingCache;\n        var _scrollbarsDragScrollingCache;\n        var _resizeCache;\n        var _normalizeRTLCache;\n        var _classNameCache;\n        var _oldClassName;\n        var _textareaAutoWrappingCache;\n        var _textareaInfoCache;\n        var _textareaSizeCache;\n        var _textareaDynHeightCache;\n        var _textareaDynWidthCache;\n        var _bodyMinSizeCache;\n        var _updateAutoCache = {}; //MutationObserver:\t\n\n        var _mutationObserverHost;\n        var _mutationObserverContent;\n        var _mutationObserverHostCallback;\n        var _mutationObserverContentCallback;\n        var _mutationObserversConnected;\n        var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n        var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n        var _destroyEvents = []; //textarea:\t\n\n        var _textareaHasFocus; //scrollbars:\t\n\n        var _scrollbarsAutoHideTimeoutId;\n        var _scrollbarsAutoHideMoveTimeoutId;\n        var _scrollbarsAutoHideDelay;\n        var _scrollbarsAutoHideNever;\n        var _scrollbarsAutoHideScroll;\n        var _scrollbarsAutoHideMove;\n        var _scrollbarsAutoHideLeave;\n        var _scrollbarsHandleHovered;\n        var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n        var _resizeNone;\n        var _resizeBoth;\n        var _resizeHorizontal;\n        var _resizeVertical; //==== Event Listener ====//\t\n\n        /**\t\r\n         * Adds or removes a event listener from the given element. \t\r\n         * @param element The element to which the event listener shall be applied or removed.\t\r\n         * @param eventNames The name(s) of the events.\t\r\n         * @param listener The method which shall be called.\t\r\n         * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n         * @param passiveOrOptions The options for the event.\r\n         */\n\n        function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n          var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n          var method = remove ? 'removeEventListener' : 'addEventListener';\n          var onOff = remove ? 'off' : 'on';\n          var events = collected ? false : eventNames.split(_strSpace);\n          var i = 0;\n          var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n          var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n          var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n          var nativeParam = _supportPassiveEvents ? {\n            passive: passive,\n            capture: capture\n          } : capture;\n          if (collected) {\n            for (; i < eventNames[LEXICON.l]; i++) {\n              setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n            }\n          } else {\n            for (; i < events[LEXICON.l]; i++) {\n              if (_supportPassiveEvents) {\n                element[0][method](events[i], listener, nativeParam);\n              } else {\n                element[onOff](events[i], listener);\n              }\n            }\n          }\n        }\n        function addDestroyEventListener(element, eventNames, listener, passive) {\n          setupResponsiveEventListener(element, eventNames, listener, false, passive);\n          _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n        } //==== Resize Observer ====//\n\n        /**\r\n         * Adds or removes a resize observer from the given element.\r\n         * @param targetElement The element to which the resize observer shall be added or removed.\r\n         * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n         */\n\n        function setupResizeObserver(targetElement, onElementResizedCallback) {\n          if (targetElement) {\n            var resizeObserver = COMPATIBILITY.rO();\n            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n            var strChildNodes = 'childNodes';\n            var constScroll = 3333333;\n            var callback = function callback() {\n              targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n              onElementResizedCallback();\n            }; //add resize observer:\n\n            if (onElementResizedCallback) {\n              if (_supportResizeObserver) {\n                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n                observer.observe(element);\n              } else {\n                if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                    c: _classNameResizeObserverItemElement,\n                    dir: 'ltr'\n                  }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                    c: _classNameResizeObserverItemFinalElement,\n                    style: 'width: 200%; height: 200%'\n                  })))));\n                  var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                  var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                  var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                  var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                  var widthCache = observerElement[LEXICON.oW];\n                  var heightCache = observerElement[LEXICON.oH];\n                  var isDirty;\n                  var rAFId;\n                  var currWidth;\n                  var currHeight;\n                  var factor = 2;\n                  var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                  var reset = function reset() {\n                    /*\r\n                     var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var expandChildCSS = {};\r\n                     expandChildCSS[_strWidth] = sizeResetWidth;\r\n                     expandChildCSS[_strHeight] = sizeResetHeight;\r\n                     expandElementChild.css(expandChildCSS);\r\n                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     */\n                    expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                    shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                  };\n                  var onResized = function onResized() {\n                    rAFId = 0;\n                    if (!isDirty) return;\n                    widthCache = currWidth;\n                    heightCache = currHeight;\n                    callback();\n                  };\n                  var onScroll = function onScroll(event) {\n                    currWidth = observerElement[LEXICON.oW];\n                    currHeight = observerElement[LEXICON.oH];\n                    isDirty = currWidth != widthCache || currHeight != heightCache;\n                    if (event && isDirty && !rAFId) {\n                      COMPATIBILITY.cAF()(rAFId);\n                      rAFId = COMPATIBILITY.rAF()(onResized);\n                    } else if (!event) onResized();\n                    reset();\n                    if (event) {\n                      COMPATIBILITY.prvD(event);\n                      COMPATIBILITY.stpP(event);\n                    }\n                    return false;\n                  };\n                  var expandChildCSS = {};\n                  var observerElementCSS = {};\n                  setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                  FRAMEWORK(observerElement).css(observerElementCSS);\n                  expandElement.on(_strScroll, onScroll);\n                  shrinkElement.on(_strScroll, onScroll);\n                  targetElement.on(strAnimationStartEvent, function () {\n                    onScroll(false);\n                  }); //lets assume that the divs will never be that large and a constant value is enough\n\n                  expandChildCSS[_strWidth] = constScroll;\n                  expandChildCSS[_strHeight] = constScroll;\n                  expandElementChild.css(expandChildCSS);\n                  reset();\n                } else {\n                  var attachEvent = _documentElementNative.attachEvent;\n                  var isIE = _msieVersion !== undefined$1;\n                  if (attachEvent) {\n                    targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                    findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                  } else {\n                    var obj = _documentElementNative.createElement(TYPES.o);\n                    obj.setAttribute(LEXICON.ti, '-1');\n                    obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n                    obj.onload = function () {\n                      var wnd = this.contentDocument.defaultView;\n                      wnd.addEventListener('resize', callback);\n                      wnd.document.documentElement.style.display = 'none';\n                    };\n                    obj.type = 'text/html';\n                    if (isIE) targetElement.prepend(obj);\n                    obj.data = 'about:blank';\n                    if (!isIE) targetElement.prepend(obj);\n                    targetElement.on(strAnimationStartEvent, callback);\n                  }\n                }\n              }\n              if (targetElement[0] === _sizeObserverElementNative) {\n                var directionChanged = function directionChanged() {\n                  var dir = _hostElement.css('direction');\n                  var css = {};\n                  var scrollLeftValue = 0;\n                  var result = false;\n                  if (dir !== _cssDirectionDetectedCache) {\n                    if (dir === 'ltr') {\n                      css[_strLeft] = 0;\n                      css[_strRight] = _strAuto;\n                      scrollLeftValue = constScroll;\n                    } else {\n                      css[_strLeft] = _strAuto;\n                      css[_strRight] = 0;\n                      scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                    } //execution order is important for IE!!!\n\n                    _sizeObserverElement.children().eq(0).css(css);\n                    _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n                    _cssDirectionDetectedCache = dir;\n                    result = true;\n                  }\n                  return result;\n                };\n                directionChanged();\n                addDestroyEventListener(targetElement, _strScroll, function (event) {\n                  if (directionChanged()) update();\n                  COMPATIBILITY.prvD(event);\n                  COMPATIBILITY.stpP(event);\n                  return false;\n                });\n              }\n            } //remove resize observer:\n            else {\n              if (_supportResizeObserver) {\n                var element = targetElement.contents()[0];\n                var resizeObserverObj = element[_strResizeObserverProperty];\n                if (resizeObserverObj) {\n                  resizeObserverObj.disconnect();\n                  delete element[_strResizeObserverProperty];\n                }\n              } else {\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n              }\n            }\n          }\n        }\n        /**\r\n         * Freezes or unfreezes the given resize observer.\r\n         * @param targetElement The element to which the target resize observer is applied.\r\n         * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n         \r\n        function freezeResizeObserver(targetElement, freeze) {\r\n            if (targetElement !== undefined) {\r\n                if(freeze) {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].unobserve(element);\r\n                    }\r\n                    else {\r\n                        targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                        var w = targetElement.css(_strWidth);\r\n                        var h = targetElement.css(_strHeight);\r\n                        var css = {};\r\n                        css[_strWidth] = w;\r\n                        css[_strHeight] = h;\r\n                        targetElement.css(css);\r\n                    }\r\n                }\r\n                else {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].observe(element);\r\n                    }\r\n                    else {\r\n                        var css = { };\r\n                        css[_strHeight] = _strEmpty;\r\n                        css[_strWidth] = _strEmpty;\r\n                        targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        */\n        //==== Mutation Observers ====//\n\n        /**\r\n         * Creates MutationObservers for the host and content Element if they are supported.\r\n         */\n\n        function createMutationObservers() {\n          if (_supportMutationObserver) {\n            var mutationObserverContentLag = 11;\n            var mutationObserver = COMPATIBILITY.mO();\n            var contentLastUpdate = COMPATIBILITY.now();\n            var mutationTarget;\n            var mutationAttrName;\n            var mutationIsClass;\n            var oldMutationVal;\n            var newClassVal;\n            var hostClassNameRegex;\n            var contentTimeout;\n            var now;\n            var sizeAuto;\n            var action;\n            _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n              var doUpdate = false;\n              var doUpdateForce = false;\n              var mutation;\n              var mutatedAttrs = [];\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  mutationTarget = mutation.target;\n                  mutationAttrName = mutation.attributeName;\n                  mutationIsClass = mutationAttrName === LEXICON.c;\n                  oldMutationVal = mutation.oldValue;\n                  newClassVal = mutationTarget.className;\n                  if (_domExists && mutationIsClass && !doUpdateForce) {\n                    // if old class value contains _classNameHostElementForeign and new class value doesn't\n                    if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                      hostClassNameRegex = createHostClassNameRegExp(true);\n                      _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                        return name.match(hostClassNameRegex);\n                      })).join(_strSpace);\n                      doUpdate = doUpdateForce = true;\n                    }\n                  }\n                  if (!doUpdate) {\n                    doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                  }\n                  mutatedAttrs.push(mutationAttrName);\n                });\n                updateViewportAttrsFromTarget(mutatedAttrs);\n                if (doUpdate) _base.update(doUpdateForce || _strAuto);\n              }\n              return doUpdate;\n            };\n            _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n              var doUpdate = false;\n              var mutation;\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  doUpdate = isUnknownMutation(mutation);\n                  return !doUpdate;\n                });\n                if (doUpdate) {\n                  now = COMPATIBILITY.now();\n                  sizeAuto = _heightAutoCache || _widthAutoCache;\n                  action = function action() {\n                    if (!_destroyed) {\n                      contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                      if (_isTextarea) textareaUpdate();\n                      if (sizeAuto) update();else _base.update(_strAuto);\n                    }\n                  };\n                  clearTimeout(contentTimeout);\n                  if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n                }\n              }\n              return doUpdate;\n            };\n            _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n            _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n          }\n        }\n        /**\r\n         * Connects the MutationObservers if they are supported.\r\n         */\n\n        function connectMutationObservers() {\n          if (_supportMutationObserver && !_mutationObserversConnected) {\n            _mutationObserverHost.observe(_hostElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              attributeFilter: _mutationObserverAttrsHost\n            });\n            _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              subtree: !_isTextarea,\n              childList: !_isTextarea,\n              characterData: !_isTextarea,\n              attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n            });\n            _mutationObserversConnected = true;\n          }\n        }\n        /**\r\n         * Disconnects the MutationObservers if they are supported.\r\n         */\n\n        function disconnectMutationObservers() {\n          if (_supportMutationObserver && _mutationObserversConnected) {\n            _mutationObserverHost.disconnect();\n            _mutationObserverContent.disconnect();\n            _mutationObserversConnected = false;\n          }\n        } //==== Events of elements ====//\n\n        /**\r\n         * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n         * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n         * If there are any size changes, the update method gets called.\r\n         */\n\n        function hostOnResized() {\n          if (!_sleeping) {\n            var changed;\n            var hostSize = {\n              w: _sizeObserverElementNative[LEXICON.sW],\n              h: _sizeObserverElementNative[LEXICON.sH]\n            };\n            changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n            _hostElementSizeChangeDetectedCache = hostSize;\n            if (changed) update({\n              _hostSizeChanged: true\n            });\n          }\n        }\n        /**\r\n         * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n        function hostOnMouseEnter() {\n          if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n        }\n        /**\r\n         * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n        function hostOnMouseLeave() {\n          if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n        }\n        /**\r\n         * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n         */\n\n        function hostOnMouseMove() {\n          if (_scrollbarsAutoHideMove) {\n            refreshScrollbarsAutoHide(true);\n            clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n            _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n              if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n            }, 100);\n          }\n        }\n        /**\r\n         * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n         * @param event The select start event.\r\n         */\n\n        function documentOnSelectStart(event) {\n          COMPATIBILITY.prvD(event);\n          return false;\n        }\n        /**\t\r\n         * A callback which will be called after a element has loaded.\t\r\n         */\n\n        function updateOnLoadCallback(event) {\n          var elm = FRAMEWORK(event.target);\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            if (elm.is(updateOnLoadSelector)) {\n              update({\n                _contentSizeChanged: true\n              });\n            }\n          });\n        }\n        /**\r\n        * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n        * @param destroy Indicates whether the events shall be added or removed.\r\n        */\n\n        function setupHostMouseTouchEvents(destroy) {\n          if (!destroy) setupHostMouseTouchEvents(true);\n          setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n          setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n          if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n        } //==== Update Detection ====//\n\n        /**\r\n         * Measures the min width and min height of the body element and refreshes the related cache.\r\n         * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n         */\n\n        function bodyMinSizeChanged() {\n          var bodyMinSize = {};\n          if (_isBody && _contentArrangeElement) {\n            bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n            bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n            bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n            bodyMinSize.f = true; //flag for \"measured at least once\"\n          }\n          _bodyMinSizeCache = bodyMinSize;\n          return !!bodyMinSize.c;\n        }\n        /**\r\n         * Returns true if the class names really changed (new class without plugin host prefix)\r\n         * @param oldClassNames The old ClassName string or array.\r\n         * @param newClassNames The new ClassName string or array.\r\n         * @returns {boolean} True if the class names has really changed, false otherwise.\r\n         */\n\n        function hostClassNamesChanged(oldClassNames, newClassNames) {\n          var currClasses = _typeof(newClassNames) == TYPES.s ? newClassNames.split(_strSpace) : [];\n          var oldClasses = _typeof(oldClassNames) == TYPES.s ? oldClassNames.split(_strSpace) : [];\n          var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n          var idx = inArray(_classNameThemeNone, diff);\n          var i;\n          var regex;\n          if (idx > -1) diff.splice(idx, 1);\n          if (diff[LEXICON.l] > 0) {\n            regex = createHostClassNameRegExp(true, true);\n            for (i = 0; i < diff.length; i++) {\n              if (!diff[i].match(regex)) {\n                return true;\n              }\n            }\n          }\n          return false;\n        }\n        /**\r\n         * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n         * @param mutation The mutation which shall be checked.\r\n         * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n         */\n\n        function isUnknownMutation(mutation) {\n          var attributeName = mutation.attributeName;\n          var mutationTarget = mutation.target;\n          var mutationType = mutation.type;\n          var strClosest = 'closest';\n          if (mutationTarget === _contentElementNative) return attributeName === null;\n          if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n            //ignore className changes by the plugin\t\n            if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n            if (_typeof(mutationTarget[strClosest]) != TYPES.f) return true;\n            if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n          }\n          return true;\n        }\n        /**\r\n         * Returns true if the content size was changed since the last time this method was called.\r\n         * @returns {boolean} True if the content size was changed, false otherwise.\r\n         */\n\n        function updateAutoContentSizeChanged() {\n          if (_sleeping) return false;\n          var contentMeasureElement = getContentMeasureElement();\n          var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n          var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n          var css = {};\n          var float;\n          var bodyMinSizeC;\n          var changed;\n          var contentElementScrollSize;\n          if (setCSS) {\n            float = _contentElement.css(_strFloat);\n            css[_strFloat] = _isRTL ? _strRight : _strLeft;\n            css[_strWidth] = _strAuto;\n            _contentElement.css(css);\n          }\n          contentElementScrollSize = {\n            w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n            h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n          };\n          if (setCSS) {\n            css[_strFloat] = float;\n            css[_strWidth] = _strHundredPercent;\n            _contentElement.css(css);\n          }\n          bodyMinSizeC = bodyMinSizeChanged();\n          changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n          _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n          return changed || bodyMinSizeC;\n        }\n        /**\r\n         * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n         * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n         */\n\n        function meaningfulAttrsChanged() {\n          if (_sleeping || _mutationObserversConnected) return;\n          var elem;\n          var curr;\n          var cache;\n          var changedAttrs = [];\n          var checks = [{\n            _elem: _hostElement,\n            _attrs: _mutationObserverAttrsHost.concat(':visible')\n          }, {\n            _elem: _isTextarea ? _targetElement : undefined$1,\n            _attrs: _mutationObserverAttrsTextarea\n          }];\n          each(checks, function (index, check) {\n            elem = check._elem;\n            if (elem) {\n              each(check._attrs, function (index, attr) {\n                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n                cache = _updateAutoCache[attr];\n                if (checkCache(curr, cache)) {\n                  changedAttrs.push(attr);\n                }\n                _updateAutoCache[attr] = curr;\n              });\n            }\n          });\n          updateViewportAttrsFromTarget(changedAttrs);\n          return changedAttrs[LEXICON.l] > 0;\n        }\n        /**\r\n         * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n         * @param propertyName The CSS property name.\r\n         * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n         */\n\n        function isSizeAffectingCSSProperty(propertyName) {\n          if (!_initialized) return true;\n          var flexGrow = 'flex-grow';\n          var flexShrink = 'flex-shrink';\n          var flexBasis = 'flex-basis';\n          var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n          var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n          var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n          var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n          var _strS = 's';\n          var _strVS = 'v-s';\n          var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n          var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n          var sizeIsAffected = false;\n          var checkPropertyName = function checkPropertyName(arr, name) {\n            for (var i = 0; i < arr[LEXICON.l]; i++) {\n              if (arr[i] === name) return true;\n            }\n            return false;\n          };\n          if (checkY) {\n            sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n          }\n          if (checkX && !sizeIsAffected) {\n            sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n          }\n          return sizeIsAffected;\n        } //==== Update ====//\n\n        /**\r\n         * Sets the attribute values of the viewport element to the values from the target element.\r\n         * The value of a attribute is only set if the attribute is whitelisted.\r\n         * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n         */\n\n        function updateViewportAttrsFromTarget(attrs) {\n          attrs = attrs || _viewportAttrsFromTarget;\n          each(attrs, function (index, attr) {\n            if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n              var targetAttr = _targetElement.attr(attr);\n              if (type(targetAttr) == TYPES.s) {\n                _viewportElement.attr(attr, targetAttr);\n              } else {\n                _viewportElement.removeAttr(attr);\n              }\n            }\n          });\n        }\n        /**\r\n         * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n         */\n\n        function textareaUpdate() {\n          if (!_sleeping) {\n            var wrapAttrOff = !_textareaAutoWrappingCache;\n            var minWidth = _viewportSize.w;\n            var minHeight = _viewportSize.h;\n            var css = {};\n            var doMeasure = _widthAutoCache || wrapAttrOff;\n            var origWidth;\n            var width;\n            var origHeight;\n            var height; //reset min size\n\n            css[_strMinMinus + _strWidth] = _strEmpty;\n            css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n            css[_strWidth] = _strAuto;\n            _targetElement.css(css); //measure width\n\n            origWidth = _targetElementNative[LEXICON.oW];\n            width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n            /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n            //set measured width\n\n            css[_strWidth] = _widthAutoCache ? _strAuto\n            /*width*/ : _strHundredPercent;\n            css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n            css[_strHeight] = _strAuto;\n            _targetElement.css(css); //measure height\n\n            origHeight = _targetElementNative[LEXICON.oH];\n            height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n            css[_strWidth] = width;\n            css[_strHeight] = height;\n            _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n            css[_strMinMinus + _strWidth] = minWidth\n            /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\n            css[_strMinMinus + _strHeight] = minHeight\n            /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\n            _targetElement.css(css);\n            return {\n              _originalWidth: origWidth,\n              _originalHeight: origHeight,\n              _dynamicWidth: width,\n              _dynamicHeight: height\n            };\n          }\n        }\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param updateHints A objects which contains hints for this update:\r\n         * {\r\n         *   _hostSizeChanged : boolean,\r\n         *   _contentSizeChanged : boolean,\r\n         *   _force : boolean,                             == preventSwallowing\r\n         *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n        *  }\r\n         */\n\n        function update(updateHints) {\n          clearTimeout(_swallowedUpdateTimeout);\n          updateHints = updateHints || {};\n          _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n          _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n          _swallowedUpdateHints._force |= updateHints._force;\n          var now = COMPATIBILITY.now();\n          var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n          var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n          var force = !!_swallowedUpdateHints._force;\n          var changedOptions = updateHints._changedOptions;\n          var swallow = _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n          var displayIsHidden;\n          if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n          //destroyed\n          //swallowing\n          //sleeping\n          //host is hidden or has false display\n\n          if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n          _lastUpdateTime = now;\n          _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n          if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n            //native scrollbars are hidden, so change the values to zero\n            _nativeScrollbarSize.x = 0;\n            _nativeScrollbarSize.y = 0;\n          } else {\n            //refresh native scrollbar size (in case of zoom)\n            _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n          // The calculation: [scrollbar size +3 *3]\n          // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n          // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n          _nativeScrollbarMinSize = {\n            x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n            y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n          };\n          changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n          //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n          var checkCacheAutoForce = function checkCacheAutoForce() {\n            return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n          }; //save current scroll offset\n\n          var currScroll = {\n            x: _viewportElement[_strScrollLeft](),\n            y: _viewportElement[_strScrollTop]()\n          };\n          var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n          var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n          var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n          var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n          var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n          var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n          var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n          var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n          var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n          var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n          var className = _currentPreparedOptions.className;\n          var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n          var resize = _currentPreparedOptions.resize;\n          var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n          //paddingAbsolute\n\n          var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n          var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n          var clipAlways = _currentPreparedOptions.clipAlways;\n          var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n          var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n          var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n          var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n          var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n          var autoUpdate = _currentPreparedOptions.autoUpdate;\n          var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n          var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n          var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n          var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n          var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n          var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n          var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n          _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n          _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n          _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n          _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n          _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n          _oldClassName = _classNameCache; //resize\n\n          _resizeNone = resize === 'n';\n          _resizeBoth = resize === 'b';\n          _resizeHorizontal = resize === 'h';\n          _resizeVertical = resize === 'v'; //normalizeRTL\n\n          _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n          ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n          _scrollbarsVisibilityCache = scrollbarsVisibility;\n          _scrollbarsAutoHideCache = scrollbarsAutoHide;\n          _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n          _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n          _classNameCache = className;\n          _resizeCache = resize;\n          _paddingAbsoluteCache = paddingAbsolute;\n          _clipAlwaysCache = clipAlways;\n          _sizeAutoCapableCache = sizeAutoCapable;\n          _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n          _autoUpdateCache = autoUpdate;\n          _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n          _textareaDynWidthCache = textareaDynWidth;\n          _textareaDynHeightCache = textareaDynHeight;\n          _hasOverflowCache = _hasOverflowCache || {\n            x: false,\n            y: false\n          }; //set correct class name to the host element\n\n          if (classNameChanged) {\n            removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n            addClass(_hostElement, className !== undefined$1 && className !== null && className.length > 0 ? className : _classNameThemeNone);\n          } //set correct auto Update\n\n          if (autoUpdateChanged) {\n            if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n              disconnectMutationObservers();\n              autoUpdateLoop.add(_base);\n            } else {\n              autoUpdateLoop.remove(_base);\n              connectMutationObservers();\n            }\n          } //activate or deactivate size auto capability\n\n          if (sizeAutoCapableChanged) {\n            if (sizeAutoCapable) {\n              if (_contentGlueElement) {\n                _contentGlueElement.show();\n              } else {\n                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n                _paddingElement.before(_contentGlueElement);\n              }\n              if (_sizeAutoObserverAdded) {\n                _sizeAutoObserverElement.show();\n              } else {\n                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n                _contentGlueElement.before(_sizeAutoObserverElement);\n                var oldSize = {\n                  w: -1,\n                  h: -1\n                };\n                setupResizeObserver(_sizeAutoObserverElement, function () {\n                  var newSize = {\n                    w: _sizeAutoObserverElementNative[LEXICON.oW],\n                    h: _sizeAutoObserverElementNative[LEXICON.oH]\n                  };\n                  if (checkCache(newSize, oldSize)) {\n                    if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                      update();\n                    } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                      update();\n                    }\n                  }\n                  oldSize = newSize;\n                });\n                _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n                if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n              }\n            } else {\n              if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n              if (_contentGlueElement) _contentGlueElement.hide();\n            }\n          } //if force, update all resizeObservers too\n\n          if (force) {\n            _sizeObserverElement.find('*').trigger(_strScroll);\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n          } //display hidden:\n\n          displayIsHidden = displayIsHidden === undefined$1 ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n          var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n          var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n          var cssDirection = _hostElement.css('direction');\n          var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n          var boxSizing = _hostElement.css('box-sizing');\n          var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n          var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n          var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n          try {\n            sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n          } catch (ex) {\n            return;\n          }\n          _isRTL = cssDirection === 'rtl';\n          _isBorderBox = boxSizing === 'border-box';\n          var isRTLLeft = _isRTL ? _strLeft : _strRight;\n          var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n          var widthAutoResizeDetection = false;\n          var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n          /*|| _isTextarea */ ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n          if (sizeAutoCapable && !widthAutoObserverDetection) {\n            var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n            var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n            _contentGlueElement.css(_strWidth, _strAuto);\n            var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n            if (!widthAutoResizeDetection) {\n              _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n              tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n              _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n              widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n            }\n          }\n          var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n          var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n          var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n          var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\n          /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\n          var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n          var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n          //we need the border only if border box and auto size\n\n          var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n          var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n          var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n          var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n          var contentElementCSS = {};\n          var contentGlueElementCSS = {}; //funcs\n\n          var getHostSize = function getHostSize() {\n            //has to be clientSize because offsetSize respect borders\n            return {\n              w: _hostElementNative[LEXICON.cW],\n              h: _hostElementNative[LEXICON.cH]\n            };\n          };\n          var getViewportSize = function getViewportSize() {\n            //viewport size is padding container because it never has padding, margin and a border\n            //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n            //if this happens add the difference to the viewportSize to compensate the rounding error\n            return {\n              w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n              h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n            };\n          }; //set info for padding\n\n          var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n          var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n          paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n          paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n          padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n          _borderX = border.l + border.r;\n          _borderY = border.t + border.b;\n          border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n          _marginX = margin.l + margin.r;\n          _marginY = margin.t + margin.b;\n          margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n          _textareaAutoWrappingCache = textareaAutoWrapping;\n          _cssDirectionCache = cssDirection;\n          _cssBoxSizingCache = boxSizing;\n          _widthAutoCache = widthAuto;\n          _heightAutoCache = heightAuto;\n          _cssPaddingCache = padding;\n          _cssBorderCache = border;\n          _cssMarginCache = margin; //IEFix direction changed\n\n          if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n          if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n            var paddingElementCSS = {};\n            var textareaCSS = {};\n            var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n            setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n            if (paddingAbsolute) {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n            } else {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n            }\n            _paddingElement.css(paddingElementCSS);\n            _targetElement.css(textareaCSS);\n          } //viewport size is padding container because it never has padding, margin and a border.\n\n          _viewportSize = getViewportSize(); //update Textarea\n\n          var textareaSize = _isTextarea ? textareaUpdate() : false;\n          var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n          var textareaDynOrigSize = _isTextarea && textareaSize ? {\n            w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n            h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n          } : {};\n          _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n          if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n            contentElementCSS[_strHeight] = _strAuto;\n          } else if (heightAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strHeight] = _strHundredPercent;\n          }\n          if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n            contentElementCSS[_strWidth] = _strAuto;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n          } else if (widthAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strWidth] = _strHundredPercent;\n            contentElementCSS[_strFloat] = _strEmpty;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n          }\n          if (widthAuto) {\n            //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n            contentGlueElementCSS[_strWidth] = _strAuto;\n            contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n            contentElementCSS[_strFloat] = isRTLRight;\n          } else {\n            contentGlueElementCSS[_strWidth] = _strEmpty;\n          }\n          if (heightAuto) {\n            //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n            contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n          } else {\n            contentGlueElementCSS[_strHeight] = _strEmpty;\n          }\n          if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n          _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n          contentElementCSS = {};\n          contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n          if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n            var strOverflow = 'overflow';\n            var strOverflowX = strOverflow + '-x';\n            var strOverflowY = strOverflow + '-y';\n            var strHidden = 'hidden';\n            var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n            //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n            if (!_nativeScrollbarStyling) {\n              var viewportElementResetCSS = {};\n              var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n              var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n              setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n              _viewportElement.css(viewportElementResetCSS);\n            } //measure several sizes:\n\n            var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n            var contentSize = {\n              //use clientSize because natively overlaidScrollbars add borders\n              w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n              h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n            };\n            var scrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            }; //apply the correct viewport style and measure viewport size\n\n            if (!_nativeScrollbarStyling) {\n              viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n              viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n              _viewportElement.css(viewportElementResetCSS);\n            }\n            _viewportSize = getViewportSize(); //measure and correct several sizes\n\n            var hostSize = getHostSize();\n            var hostAbsoluteRectSize = {\n              w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n              h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n            };\n            var contentGlueSize = {\n              //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n              //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n              w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n              h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n            };\n            contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n            _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n            if (sizeAutoCapable) {\n              //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n              if (contentGlueSize.c || heightAuto || widthAuto) {\n                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n                contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n                if (!_isTextarea) {\n                  contentSize = {\n                    //use clientSize because natively overlaidScrollbars add borders\n                    w: contentMeasureElement[LEXICON.cW],\n                    h: contentMeasureElement[LEXICON.cH]\n                  };\n                }\n              }\n              var textareaCoverCSS = {};\n              var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var wh = scrollbarVars._w_h;\n                var strWH = scrollbarVars._width_height;\n                var autoSize = horizontal ? widthAuto : heightAuto;\n                var borderSize = horizontal ? _borderX : _borderY;\n                var paddingSize = horizontal ? _paddingX : _paddingY;\n                var marginSize = horizontal ? _marginX : _marginY;\n                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n                if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n                if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                  if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                  contentGlueElementCSS[strWH] -= 1;\n                } //make sure content glue size is at least 1\n\n                if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n              };\n              setContentGlueElementCSSfunction(true);\n              setContentGlueElementCSSfunction(false);\n              if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n              _contentGlueElement.css(contentGlueElementCSS);\n            }\n            if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n            if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n            _contentElement.css(contentElementCSS);\n            contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n            var contentScrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            };\n            contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n            _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n            _viewportSize = getViewportSize();\n            hostSize = getHostSize();\n            hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n            _hostSizeCache = hostSize;\n            var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n            var previousOverflowAmount = _overflowAmountCache;\n            var overflowBehaviorIsVS = {};\n            var overflowBehaviorIsVH = {};\n            var overflowBehaviorIsS = {};\n            var overflowAmount = {};\n            var hasOverflow = {};\n            var hideOverflow = {};\n            var canScroll = {};\n            var viewportRect = _paddingElementNative[LEXICON.bCR]();\n            var setOverflowVariables = function setOverflowVariables(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xyI = scrollbarVarsInverted._x_y;\n              var xy = scrollbarVars._x_y;\n              var wh = scrollbarVars._w_h;\n              var widthHeight = scrollbarVars._width_height;\n              var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n              var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n              var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n              overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n              overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n              overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n              overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n              overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n              hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n              //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n              //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n              hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n              hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n              canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n            };\n            setOverflowVariables(true);\n            setOverflowVariables(false);\n            overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n            _overflowAmountCache = overflowAmount;\n            hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n            _hasOverflowCache = hasOverflow;\n            hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n            _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n            if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n              var borderDesign = 'px solid transparent';\n              var contentArrangeElementCSS = {};\n              var arrangeContent = {};\n              var arrangeChanged = force;\n              var setContentElementCSS;\n              if (hasOverflow.x || hasOverflow.y) {\n                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n                _arrangeContentSizeCache = arrangeContent;\n              }\n              if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n                setContentElementCSS = function setContentElementCSS(horizontal) {\n                  var scrollbarVars = getScrollbarVars(horizontal);\n                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                  var xy = scrollbarVars._x_y;\n                  var strDirection = horizontal ? _strBottom : isRTLLeft;\n                  var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n                  if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                    contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                    contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                  } else {\n                    arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                    arrangeChanged = true;\n                  }\n                };\n                if (_nativeScrollbarStyling) {\n                  addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n                } else {\n                  setContentElementCSS(true);\n                  setContentElementCSS(false);\n                }\n              }\n              if (ignoreOverlayScrollbarHiding) {\n                arrangeContent.w = arrangeContent.h = _strEmpty;\n                arrangeChanged = true;\n              }\n              if (arrangeChanged && !_nativeScrollbarStyling) {\n                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n                if (!_contentArrangeElement) {\n                  _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n                  _viewportElement.prepend(_contentArrangeElement);\n                }\n                _contentArrangeElement.css(contentArrangeElementCSS);\n              }\n              _contentElement.css(contentElementCSS);\n            }\n            var viewportElementCSS = {};\n            var paddingElementCSS = {};\n            var setViewportCSS;\n            if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n              viewportElementCSS[isRTLRight] = _strEmpty;\n              setViewportCSS = function setViewportCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var XY = scrollbarVars._X_Y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n                var reset = function reset() {\n                  viewportElementCSS[strDirection] = _strEmpty;\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n                };\n                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  viewportElementCSS[strOverflow + XY] = _strScroll;\n                  if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                    reset();\n                  } else {\n                    viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                    _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                  }\n                } else {\n                  viewportElementCSS[strOverflow + XY] = _strEmpty;\n                  reset();\n                }\n              };\n              setViewportCSS(true);\n              setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n              // make viewport element greater in size (Firefox hide Scrollbars fix)\n              // because firefox starts hiding scrollbars on too small elements\n              // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n              if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n              } else {\n                viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n              }\n              viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n              if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n                //only hide if is Textarea\n                if (_isTextarea && hideOverflowForceTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n                }\n              } else {\n                if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                  //only un-hide if Textarea\n                  if (_isTextarea) {\n                    paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                  }\n                  viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n                }\n              }\n              _paddingElement.css(paddingElementCSS);\n              _viewportElement.css(viewportElementCSS);\n              viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n              if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                var elementStyle = _contentElementNative[LEXICON.s];\n                elementStyle.webkitTransform = 'scale(1)';\n                elementStyle.display = 'run-in';\n                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n                elementStyle.webkitTransform = _strEmpty;\n              }\n              /*\r\n              //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n              if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                  _hostElement.hide();\r\n                  var dump = _hostElementNative[LEXICON.oH];\r\n                  _hostElement.show();\r\n              }\r\n              */\n            } //change to direction RTL and width auto Bugfix in Webkit\n            //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n            contentElementCSS = {};\n            if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n              if (_isRTL && widthAuto) {\n                var floatTmp = _contentElement.css(_strFloat);\n                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n                _contentElement.css(_strFloat, floatTmp);\n                var posLeftWithFloat = MATH.round(_contentElement.position().left);\n                if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n              } else {\n                contentElementCSS[_strLeft] = _strEmpty;\n              }\n            }\n            _contentElement.css(contentElementCSS); //handle scroll position\n\n            if (_isTextarea && contentSizeChanged) {\n              var textareaInfo = getTextareaInfo();\n              if (textareaInfo) {\n                var textareaRowsChanged = _textareaInfoCache === undefined$1 ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n                var cursorRow = textareaInfo._cursorRow;\n                var cursorCol = textareaInfo._cursorColumn;\n                var widestRow = textareaInfo._widestRow;\n                var lastRow = textareaInfo._rows;\n                var lastCol = textareaInfo._columns;\n                var cursorPos = textareaInfo._cursorPosition;\n                var cursorMax = textareaInfo._cursorMax;\n                var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n                var textareaScrollAmount = {\n                  x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                  y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n                };\n                currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n              }\n              _textareaInfoCache = textareaInfo;\n            }\n            if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n            if (widthAuto) _hostElement[_strScrollLeft](0);\n            if (heightAuto) _hostElement[_strScrollTop](0);\n            _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n            var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n            var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n            var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n            var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n              showY = showY === undefined$1 ? showX : showY;\n              refreshScrollbarAppearance(true, showX, canScroll.x);\n              refreshScrollbarAppearance(false, showY, canScroll.y);\n            }; //manage class name which indicates scrollable overflow\n\n            addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n            addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n            addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n            if (cssDirectionChanged && !_isBody) {\n              addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n            } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n            if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n            if (resizeChanged) {\n              addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n            } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n            if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n              if (ignoreOverlayScrollbarHiding) {\n                if (ignoreOverlayScrollbarHidingChanged) {\n                  removeClass(_hostElement, _classNameHostScrolling);\n                  if (ignoreOverlayScrollbarHiding) {\n                    refreshScrollbarsVisibility(false);\n                  }\n                }\n              } else if (scrollbarsVisibilityAuto) {\n                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n              } else if (scrollbarsVisibilityVisible) {\n                refreshScrollbarsVisibility(true);\n              } else if (scrollbarsVisibilityHidden) {\n                refreshScrollbarsVisibility(false);\n              }\n            } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n            if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n              setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n              refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n            } //manage scrollbars handle length & offset - don't remove!\n\n            if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n              refreshScrollbarHandleLength(true);\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleLength(false);\n              refreshScrollbarHandleOffset(false);\n            } //manage interactivity\n\n            if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n            if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n            dispatchCallback('onDirectionChanged', {\n              isRTL: _isRTL,\n              dir: cssDirection\n            }, cssDirectionChanged);\n            dispatchCallback('onHostSizeChanged', {\n              width: _hostSizeCache.w,\n              height: _hostSizeCache.h\n            }, hostSizeChanged);\n            dispatchCallback('onContentSizeChanged', {\n              width: _contentScrollSizeCache.w,\n              height: _contentScrollSizeCache.h\n            }, contentSizeChanged);\n            dispatchCallback('onOverflowChanged', {\n              x: hasOverflow.x,\n              y: hasOverflow.y,\n              xScrollable: hideOverflow.xs,\n              yScrollable: hideOverflow.ys,\n              clipped: hideOverflow.x || hideOverflow.y\n            }, hasOverflow.c || hideOverflow.c);\n            dispatchCallback('onOverflowAmountChanged', {\n              x: overflowAmount.x,\n              y: overflowAmount.y\n            }, overflowAmount.c);\n          } //fix body min size\n\n          if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n            //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n            if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n            if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n            if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n            _bodyMinSizeCache.c = false;\n          }\n          if (_initialized && changedOptions.updateOnLoad) {\n            updateElementsOnLoad();\n          } //freezeResizeObserver(_sizeObserverElement, false);\n          //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n          dispatchCallback('onUpdated', {\n            forced: force\n          });\n        }\n        /**\r\n         * Updates the found elements of which the load event shall be handled.\r\n         */\n\n        function updateElementsOnLoad() {\n          if (!_isTextarea) {\n            eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n              _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n                // if element doesn't have a updateOnLoadCallback applied\n                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                  _updateOnLoadElms.push(el);\n                  FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n                }\n              });\n            });\n          }\n        } //==== Options ====//\n\n        /**\r\n         * Sets new options but doesn't call the update method.\r\n         * @param newOptions The object which contains the new options.\r\n         * @returns {*} A object which contains the changed options.\r\n         */\n\n        function setOptions(newOptions) {\n          var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n          _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n          _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n          return validatedOpts._prepared;\n        } //==== Structure ====//\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        function setupStructureDOM(destroy) {\n          var strParent = 'parent';\n          var classNameResizeObserverHost = 'os-resize-observer-host';\n          var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n          var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n          var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n          var adoptAttrsMap = {};\n          var applyAdoptedAttrs = function applyAdoptedAttrs() {\n            var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n            each(adoptAttrsMap, function (key, value) {\n              if (type(value) == TYPES.s) {\n                if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n              }\n            });\n          };\n          var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n          var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n          _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n          _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n          _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n          _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n          _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n          _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined$1); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n          if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n          //to prevent adopting generated class names\n\n          if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n          adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n          if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n            each(adoptAttrs, function (i, v) {\n              if (type(v) == TYPES.s) {\n                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n              }\n            });\n          }\n          if (!destroy) {\n            if (_isTextarea) {\n              if (!_currentPreparedOptions.sizeAutoCapable) {\n                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n              }\n              if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n              _hostElement = _targetElement[strParent]().css(hostElementCSS);\n            }\n            if (!_domExists) {\n              //add the correct class to the target element\n              addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n              _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n              _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n              _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n              _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n              if (_isTextarea) {\n                _contentElement.prepend(_textareaCoverElement);\n                applyAdoptedAttrs();\n              }\n            }\n            if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n            if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n            if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n            _sizeObserverElementNative = _sizeObserverElement[0];\n            _hostElementNative = _hostElement[0];\n            _paddingElementNative = _paddingElement[0];\n            _viewportElementNative = _viewportElement[0];\n            _contentElementNative = _contentElement[0];\n            updateViewportAttrsFromTarget();\n          } else {\n            if (_domExists && _initialized) {\n              //clear size observer\n              _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n              each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n                if (elm) {\n                  removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n                }\n              }); //add classes to the host element which was removed previously to match the expected DOM\n\n              addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n            } else {\n              //remove size observer\n              remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n              _contentElement.contents().unwrap().unwrap().unwrap();\n              if (_isTextarea) {\n                _targetElement.unwrap();\n                remove(_hostElement);\n                remove(_textareaCoverElement);\n                applyAdoptedAttrs();\n              }\n            }\n            if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n            if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n          }\n        }\n        /**\r\n         * Adds or removes all wrapper elements interactivity events.\r\n         * @param destroy Indicates whether the Events shall be added or removed.\r\n         */\n\n        function setupStructureEvents() {\n          var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,\n          //F1 to F12\n          33, 34,\n          //page up, page down\n          37, 38, 39, 40,\n          //left, up, right, down arrows\n          16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n          ];\n          var textareaKeyDownKeyCodesList = [];\n          var textareaUpdateIntervalID;\n          var scrollStopTimeoutId;\n          var scrollStopDelay = 175;\n          var strFocus = 'focus';\n          function updateTextarea(doClearInterval) {\n            textareaUpdate();\n            _base.update(_strAuto);\n            if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n          }\n          function textareaOnScroll(event) {\n            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n            _targetElement[_strScrollTop](0);\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n            return false;\n          }\n          function textareaOnDrop(event) {\n            setTimeout(function () {\n              if (!_destroyed) updateTextarea();\n            }, 50);\n          }\n          function textareaOnFocus() {\n            _textareaHasFocus = true;\n            addClass(_hostElement, strFocus);\n          }\n          function textareaOnFocusout() {\n            _textareaHasFocus = false;\n            textareaKeyDownKeyCodesList = [];\n            removeClass(_hostElement, strFocus);\n            updateTextarea(true);\n          }\n          function textareaOnKeyDown(event) {\n            var keyCode = event.keyCode;\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n                updateTextarea();\n                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n              }\n              if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n            }\n          }\n          function textareaOnKeyUp(event) {\n            var keyCode = event.keyCode;\n            var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n            }\n          }\n          function contentOnTransitionEnd(event) {\n            if (_autoUpdateCache === true) return;\n            event = event.originalEvent || event;\n            if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n          }\n          function viewportOnScroll(event) {\n            if (!_sleeping) {\n              if (scrollStopTimeoutId !== undefined$1) clearTimeout(scrollStopTimeoutId);else {\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n                if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStart', event);\n              } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n              //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n              //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n              if (!_scrollbarsHandlesDefineScrollPos) {\n                refreshScrollbarHandleOffset(true);\n                refreshScrollbarHandleOffset(false);\n              }\n              dispatchCallback('onScroll', event);\n              scrollStopTimeoutId = setTimeout(function () {\n                if (!_destroyed) {\n                  //OnScrollStop:\n                  clearTimeout(scrollStopTimeoutId);\n                  scrollStopTimeoutId = undefined$1;\n                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                  if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                  dispatchCallback('onScrollStop', event);\n                }\n              }, scrollStopDelay);\n            }\n          }\n          if (_isTextarea) {\n            if (_msieVersion > 9 || !_autoUpdateRecommended) {\n              addDestroyEventListener(_targetElement, 'input', updateTextarea);\n            } else {\n              addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n            }\n            addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n          } else {\n            addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n          }\n          addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n        } //==== Scrollbars ====//\n\n        /**\r\n         * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        function setupScrollbarsDOM(destroy) {\n          var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n            var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n            var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n            var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n            var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n            if (!_domExists && !destroy) {\n              scrollbar.append(track);\n              track.append(handle);\n            }\n            return {\n              _scrollbar: scrollbar,\n              _track: track,\n              _handle: handle\n            };\n          };\n          function resetScrollbarDOM(isHorizontal) {\n            var scrollbarVars = getScrollbarVars(isHorizontal);\n            var scrollbar = scrollbarVars._scrollbar;\n            var track = scrollbarVars._track;\n            var handle = scrollbarVars._handle;\n            if (_domExists && _initialized) {\n              each([scrollbar, track, handle], function (i, elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              });\n            } else {\n              remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n            }\n          }\n          var horizontalElements;\n          var verticalElements;\n          if (!destroy) {\n            horizontalElements = selectOrGenerateScrollbarDOM(true);\n            verticalElements = selectOrGenerateScrollbarDOM();\n            _scrollbarHorizontalElement = horizontalElements._scrollbar;\n            _scrollbarHorizontalTrackElement = horizontalElements._track;\n            _scrollbarHorizontalHandleElement = horizontalElements._handle;\n            _scrollbarVerticalElement = verticalElements._scrollbar;\n            _scrollbarVerticalTrackElement = verticalElements._track;\n            _scrollbarVerticalHandleElement = verticalElements._handle;\n            if (!_domExists) {\n              _paddingElement.after(_scrollbarVerticalElement);\n              _paddingElement.after(_scrollbarHorizontalElement);\n            }\n          } else {\n            resetScrollbarDOM(true);\n            resetScrollbarDOM();\n          }\n        }\n        /**\r\n         * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n         * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n         */\n\n        function setupScrollbarEvents(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var xy = scrollbarVars._x_y;\n          var XY = scrollbarVars._X_Y;\n          var scroll = _strScroll + scrollbarVars._Left_Top;\n          var strActive = 'active';\n          var strSnapHandle = 'snapHandle';\n          var strClickEvent = 'click';\n          var scrollDurationFactor = 1;\n          var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n          var trackTimeout;\n          var mouseDownScroll;\n          var mouseDownOffset;\n          var mouseDownInvertedScale;\n          function getPointerPosition(event) {\n            return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n          }\n          function getPreparedScrollbarsOption(name) {\n            return _currentPreparedOptions.scrollbars[name];\n          }\n          function increaseTrackScrollAmount() {\n            scrollDurationFactor = 0.5;\n          }\n          function decreaseTrackScrollAmount() {\n            scrollDurationFactor = 1;\n          }\n          function stopClickEventPropagation(event) {\n            COMPATIBILITY.stpP(event);\n          }\n          function documentKeyDown(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n          }\n          function documentKeyUp(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n          }\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var trackLength = scrollbarVarsInfo._trackLength;\n              var handleLength = scrollbarVarsInfo._handleLength;\n              var scrollRange = scrollbarVarsInfo._maxScroll;\n              var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n              var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n              var scrollDelta = scrollRange * scrollDeltaPercent;\n              scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n              if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n              _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n              if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n            } else documentMouseTouchUp(event);\n          }\n          function documentMouseTouchUp(event) {\n            event = event || event.originalEvent;\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n                _capture: true\n              });\n            });\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n            _scrollbarsHandlesDefineScrollPos = false;\n            removeClass(_bodyElement, _classNameDragging);\n            removeClass(scrollbarVars._handle, strActive);\n            removeClass(scrollbarVars._track, strActive);\n            removeClass(scrollbarVars._scrollbar, strActive);\n            mouseDownScroll = undefined$1;\n            mouseDownOffset = undefined$1;\n            mouseDownInvertedScale = 1;\n            decreaseTrackScrollAmount();\n            if (trackTimeout !== undefined$1) {\n              _base.scrollStop();\n              clearTimeout(trackTimeout);\n              trackTimeout = undefined$1;\n            }\n            if (event) {\n              var rect = _hostElementNative[LEXICON.bCR]();\n              var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n              if (!mouseInsideHost) hostOnMouseLeave();\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n            }\n          }\n          function onHandleMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n          }\n          function onHandleMouseTouchDownAction(event) {\n            mouseDownScroll = _viewportElement[scroll]();\n            mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = getPointerPosition(event);\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._handle, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n                _capture: true\n              });\n            });\n            if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n          function onTrackMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n              var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n              var scrollBaseDuration = 270 * handleToViewportRatio;\n              var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n              var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n              var ctrlKey = event.ctrlKey;\n              var instantScroll = event.shiftKey;\n              var instantScrollTransition = instantScroll && ctrlKey;\n              var isFirstIteration = true;\n              var easing = 'linear';\n              var decreaseScroll;\n              var finishedCondition;\n              var scrollActionFinsished = function scrollActionFinsished(transition) {\n                if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n              };\n              var scrollActionInstantFinished = function scrollActionInstantFinished() {\n                scrollActionFinsished();\n                onHandleMouseTouchDownAction(event);\n              };\n              var scrollAction = function scrollAction() {\n                if (!_destroyed) {\n                  var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                  var handleOffset = scrollbarVarsInfo._handleOffset;\n                  var trackLength = scrollbarVarsInfo._trackLength;\n                  var handleLength = scrollbarVarsInfo._handleLength;\n                  var scrollRange = scrollbarVarsInfo._maxScroll;\n                  var currScroll = scrollbarVarsInfo._currentScroll;\n                  var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                  var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                  var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                  var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                  var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                  var scrollObj = {};\n                  var animationObj = {\n                    easing: easing,\n                    step: function step(now) {\n                      if (_scrollbarsHandlesDefineScrollPos) {\n                        _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n                        refreshScrollbarHandleOffset(isHorizontal, now);\n                      }\n                    }\n                  };\n                  instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                  instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                  if (instantScroll) {\n                    _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n                    if (instantScrollTransition) {\n                      //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                      //and the animation stops at the correct point\n                      instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                      _viewportElement[scroll](currScroll);\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                      scrollObj[xy] = instantScrollPosition;\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: 130,\n                        complete: scrollActionInstantFinished\n                      }));\n                    } else scrollActionInstantFinished();\n                  } else {\n                    decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                    finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n                    if (finishedCondition) {\n                      clearTimeout(trackTimeout);\n                      _base.scrollStop();\n                      trackTimeout = undefined$1;\n                      scrollActionFinsished(true);\n                    } else {\n                      trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                      scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: scrollDuration\n                      }));\n                    }\n                    isFirstIteration = false;\n                  }\n                }\n              };\n              if (ctrlKey) increaseTrackScrollAmount();\n              mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n              mouseDownOffset = COMPATIBILITY.page(event)[xy];\n              _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n              addClass(_bodyElement, _classNameDragging);\n              addClass(scrollbarVars._track, strActive);\n              addClass(scrollbarVars._scrollbar, strActive);\n              setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n              scrollAction();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          }\n          function onTrackMouseTouchEnter(event) {\n            //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n            _scrollbarsHandleHovered = true;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n          }\n          function onTrackMouseTouchLeave(event) {\n            _scrollbarsHandleHovered = false;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n          function onScrollbarMouseTouchDown(event) {\n            COMPATIBILITY.stpP(event);\n          }\n          addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n          addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n          addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n          if (_supportTransition) {\n            addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n              if (event.target !== scrollbarVars._scrollbar[0]) return;\n              refreshScrollbarHandleLength(isHorizontal);\n              refreshScrollbarHandleOffset(isHorizontal);\n            });\n          }\n        }\n        /**\r\n         * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n         * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n         * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n         * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n         */\n\n        function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n          var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n          var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n          addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n          addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n        }\n        /**\r\n         * Autoshows / autohides both scrollbars with.\r\n         * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n         * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n         */\n\n        function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n          clearTimeout(_scrollbarsAutoHideTimeoutId);\n          if (shallBeVisible) {\n            //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n            removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n            removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n          } else {\n            var anyActive;\n            var strActive = 'active';\n            var hide = function hide() {\n              if (!_scrollbarsHandleHovered && !_destroyed) {\n                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n              }\n            };\n            if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n          }\n        }\n        /**\r\n         * Refreshes the handle length of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         */\n\n        function refreshScrollbarHandleLength(isHorizontal) {\n          var handleCSS = {};\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var digit = 1000000; //get and apply intended handle length\n\n          var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n          handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n          if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n          scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n          scrollbarVarsInfo._handleLengthRatio = handleRatio;\n        }\n        /**\r\n         * Refreshes the handle offset of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n         */\n\n        function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n          var transition = type(scrollOrTransition) == TYPES.b;\n          var transitionDuration = 250;\n          var isRTLisHorizontal = _isRTL && isHorizontal;\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var strTranslateBrace = 'translate(';\n          var strTransform = VENDORS._cssProperty('transform');\n          var strTransition = VENDORS._cssProperty('transition');\n          var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n          var currentScroll = scrollOrTransition === undefined$1 || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n          var handleLength = scrollbarVarsInfo._handleLength;\n          var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n          var handleTrackDiff = trackLength - handleLength;\n          var handleCSS = {};\n          var transformOffset;\n          var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n          // because its a bit behind during the small delay when content size updates\n          //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n          var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n          var getScrollRatio = function getScrollRatio(base) {\n            return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n          };\n          var getHandleOffset = function getHandleOffset(scrollRatio) {\n            var offset = handleTrackDiff * scrollRatio;\n            offset = isNaN(offset) ? 0 : offset;\n            offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n            offset = MATH.max(0, offset);\n            return offset;\n          };\n          var scrollRatio = getScrollRatio(nativeScroll);\n          var unsnappedScrollRatio = getScrollRatio(currentScroll);\n          var handleOffset = getHandleOffset(unsnappedScrollRatio);\n          var snappedHandleOffset = getHandleOffset(scrollRatio);\n          scrollbarVarsInfo._maxScroll = maxScroll;\n          scrollbarVarsInfo._currentScroll = nativeScroll;\n          scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n          if (_supportTransform) {\n            transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n            //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n            translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n            handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n            if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n          } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n          if (!nativeOverlayScrollbarsAreActive()) {\n            scrollbarVars._handle.css(handleCSS); //clear up transition\n\n            if (_supportTransform && _supportTransition && transition) {\n              scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n                if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n              });\n            }\n          }\n          scrollbarVarsInfo._handleOffset = handleOffset;\n          scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n          scrollbarVarsInfo._trackLength = trackLength;\n        }\n        /**\r\n         * Refreshes the interactivity of the given scrollbar element.\r\n         * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n         * @param value True for interactivity false for no interactivity.\r\n         */\n\n        function refreshScrollbarsInteractive(isTrack, value) {\n          var action = value ? 'removeClass' : 'addClass';\n          var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n          var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n          var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n          element1[action](className);\n          element2[action](className);\n        }\n        /**\r\n         * Returns a object which is used for fast access for specific variables.\r\n         * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n         * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n         */\n\n        function getScrollbarVars(isHorizontal) {\n          return {\n            _width_height: isHorizontal ? _strWidth : _strHeight,\n            _Width_Height: isHorizontal ? 'Width' : 'Height',\n            _left_top: isHorizontal ? _strLeft : _strTop,\n            _Left_Top: isHorizontal ? 'Left' : 'Top',\n            _x_y: isHorizontal ? _strX : _strY,\n            _X_Y: isHorizontal ? 'X' : 'Y',\n            _w_h: isHorizontal ? 'w' : 'h',\n            _l_t: isHorizontal ? 'l' : 't',\n            _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n            _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n            _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n            _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n          };\n        } //==== Scrollbar Corner ====//\n\n        /**\r\n         * Builds or destroys the scrollbar corner DOM element.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        function setupScrollbarCornerDOM(destroy) {\n          _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n          if (!destroy) {\n            if (!_domExists) {\n              _hostElement.append(_scrollbarCornerElement);\n            }\n          } else {\n            if (_domExists && _initialized) {\n              removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            } else {\n              remove(_scrollbarCornerElement);\n            }\n          }\n        }\n        /**\r\n         * Initializes all scrollbar corner interactivity events.\r\n         */\n\n        function setupScrollbarCornerEvents() {\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var mouseDownPosition = {};\n          var mouseDownSize = {};\n          var mouseDownInvertedScale = {};\n          var reconnectMutationObserver;\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var pageOffset = getCoordinates(event);\n              var hostElementCSS = {};\n              if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n              if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n              _hostElement.css(hostElementCSS);\n              COMPATIBILITY.stpP(event);\n            } else {\n              documentMouseTouchUp(event);\n            }\n          }\n          function documentMouseTouchUp(event) {\n            var eventIsTrusted = event !== undefined$1;\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n            removeClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n            if (eventIsTrusted) {\n              if (reconnectMutationObserver) connectMutationObservers();\n              _base.update(_strAuto);\n            }\n            reconnectMutationObserver = false;\n          }\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n          function getCoordinates(event) {\n            return _msieVersion && insideIFrame ? {\n              x: event.screenX,\n              y: event.screenY\n            } : COMPATIBILITY.page(event);\n          }\n          addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n            if (onMouseTouchDownContinue(event) && !_resizeNone) {\n              if (_mutationObserversConnected) {\n                reconnectMutationObserver = true;\n                disconnectMutationObservers();\n              }\n              mouseDownPosition = getCoordinates(event);\n              mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n              mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n              mouseDownInvertedScale = getHostElementInvertedScale();\n              setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n              addClass(_bodyElement, _classNameDragging);\n              if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          });\n        } //==== Utils ====//\n\n        /**\r\n         * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n         * @param name The name of the target which shall be called.\r\n         * @param args The args with which the callback shall be called.\r\n         * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n         */\n\n        function dispatchCallback(name, args, dependent) {\n          if (dependent === false) return;\n          if (_initialized) {\n            var callback = _currentPreparedOptions.callbacks[name];\n            var extensionOnName = name;\n            var ext;\n            if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n            if (type(callback) == TYPES.f) callback.call(_base, args);\n            each(_extensions, function () {\n              ext = this;\n              if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n            });\n          } else if (!_destroyed) _callbacksInitQeueue.push({\n            n: name,\n            a: args\n          });\n        }\n        /**\r\n         * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n         * @param targetCSSObject The css object to which the values shall be applied.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n         * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n         */\n\n        function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n          prefix = prefix || _strEmpty;\n          values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n          targetCSSObject[prefix + _strTop] = values[0];\n          targetCSSObject[prefix + _strRight] = values[1];\n          targetCSSObject[prefix + _strBottom] = values[2];\n          targetCSSObject[prefix + _strLeft] = values[3];\n        }\n        /**\r\n         * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n         * @param zeroX True if the x axis shall be 0.\r\n         * @param zeroY True if the y axis shall be 0.\r\n         * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n         */\n\n        function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n          suffix = suffix || _strEmpty;\n          prefix = prefix || _strEmpty;\n          return {\n            t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n            r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n            b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n            l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n          };\n        }\n        /**\r\n         * Returns the computed CSS transition string from the given element.\r\n         * @param element The element from which the transition string shall be returned.\r\n         * @returns {string} The CSS transition string from the given element.\r\n         */\n\n        function getCSSTransitionString(element) {\n          var transitionStr = VENDORS._cssProperty('transition');\n          var assembledValue = element.css(transitionStr);\n          if (assembledValue) return assembledValue;\n          var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n          var regExpMain = new RegExp(regExpString);\n          var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n          var properties = 'property duration timing-function delay'.split(' ');\n          var result = [];\n          var strResult;\n          var valueArray;\n          var i = 0;\n          var j;\n          var splitCssStyleByComma = function splitCssStyleByComma(str) {\n            strResult = [];\n            if (!str.match(regExpValidate)) return str;\n            while (str.match(regExpMain)) {\n              strResult.push(RegExp.$1);\n              str = str.replace(regExpMain, _strEmpty);\n            }\n            return strResult;\n          };\n          for (; i < properties[LEXICON.l]; i++) {\n            valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n            for (j = 0; j < valueArray[LEXICON.l]; j++) {\n              result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n            }\n          }\n          return result.join(', ');\n        }\n        /**\r\n         * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n         * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n         * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n         */\n\n        function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n          var i;\n          var split;\n          var appendix;\n          var appendClasses = function appendClasses(classes, condition) {\n            appendix = '';\n            if (condition && _typeof(classes) == TYPES.s) {\n              split = classes.split(_strSpace);\n              for (i = 0; i < split[LEXICON.l]; i++) {\n                appendix += '|' + split[i] + '$';\n              } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n            }\n            return appendix;\n          };\n          return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n        }\n        /**\r\n         * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n         * @returns {{x: number, y: number}} The scale of the host-element.\r\n         */\n\n        function getHostElementInvertedScale() {\n          var rect = _paddingElementNative[LEXICON.bCR]();\n          return {\n            x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n            y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n          };\n        }\n        /**\r\n         * Checks whether the given object is a HTMLElement.\r\n         * @param o The object which shall be checked.\r\n         * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n         */\n\n        function isHTMLElement(o) {\n          var strOwnerDocument = 'ownerDocument';\n          var strHTMLElement = 'HTMLElement';\n          var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n          return _typeof(wnd[strHTMLElement]) == TYPES.o ? o instanceof wnd[strHTMLElement] :\n          //DOM2\n          o && _typeof(o) == TYPES.o && o !== null && o.nodeType === 1 && _typeof(o.nodeName) == TYPES.s;\n        }\n        /**\r\n         * Compares 2 arrays and returns the differences between them as a array.\r\n         * @param a1 The first array which shall be compared.\r\n         * @param a2 The second array which shall be compared.\r\n         * @returns {Array} The differences between the two arrays.\r\n         */\n\n        function getArrayDifferences(a1, a2) {\n          var a = [];\n          var diff = [];\n          var i;\n          var k;\n          for (i = 0; i < a1.length; i++) {\n            a[a1[i]] = true;\n          }\n          for (i = 0; i < a2.length; i++) {\n            if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n          }\n          for (k in a) {\n            diff.push(k);\n          }\n          return diff;\n        }\n        /**\r\n         * Returns Zero or the number to which the value can be parsed.\r\n         * @param value The value which shall be parsed.\r\n         * @param toFloat Indicates whether the number shall be parsed to a float.\r\n         */\n\n        function parseToZeroOrNumber(value, toFloat) {\n          var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n          return isNaN(num) ? 0 : num;\n        }\n        /**\r\n         * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n         * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n         */\n\n        function getTextareaInfo() {\n          //read needed values\n          var textareaCursorPosition = _targetElementNative.selectionStart;\n          if (textareaCursorPosition === undefined$1) return;\n          var textareaValue = _targetElement.val();\n          var textareaLength = textareaValue[LEXICON.l];\n          var textareaRowSplit = textareaValue.split('\\n');\n          var textareaLastRow = textareaRowSplit[LEXICON.l];\n          var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n          var widestRow = 0;\n          var textareaLastCol = 0;\n          var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n          var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n          var rowCols;\n          var i; //get widest Row and the last column of the textarea\n\n          for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n            rowCols = textareaRowSplit[i][LEXICON.l];\n            if (rowCols > textareaLastCol) {\n              widestRow = i + 1;\n              textareaLastCol = rowCols;\n            }\n          }\n          return {\n            _cursorRow: cursorRow,\n            //cursorRow\n            _cursorColumn: cursorCol,\n            //cursorCol\n            _rows: textareaLastRow,\n            //rows\n            _columns: textareaLastCol,\n            //cols\n            _widestRow: widestRow,\n            //wRow\n            _cursorPosition: textareaCursorPosition,\n            //pos\n            _cursorMax: textareaLength //max\n          };\n        }\n        /**\r\n         * Determines whether native overlay scrollbars are active.\r\n         * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n         */\n\n        function nativeOverlayScrollbarsAreActive() {\n          return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n        }\n        /**\r\n         * Gets the element which is used to measure the content size.\r\n         * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n         */\n\n        function getContentMeasureElement() {\n          return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n        }\n        /**\r\n         * Generates a string which represents a HTML div with the given classes or attributes.\r\n         * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n         * @param content The content of the div as string.\r\n         * @returns {string} The concated string which represents a HTML div and its content.\r\n         */\n\n        function generateDiv(classesOrAttrs, content) {\n          return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n            var key;\n            var attrs = _strEmpty;\n            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n              for (key in classesOrAttrs) {\n                attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n              }\n            }\n            return attrs;\n          }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n        }\n        /**\r\n         * Selects or generates a div with the given class attribute.\r\n         * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n         * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n         * If its a boolean it decides whether only the children of the host element shall be selected.\r\n         * @returns {*} The generated or selected element.\r\n         */\n\n        function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n          var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n          var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n          return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n        }\n        /**\r\n         * Gets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be got.\r\n         * @param path The property of which the value shall be got.\r\n         * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n         */\n\n        function getObjectPropVal(obj, path) {\n          var splits = path.split(_strDot);\n          var i = 0;\n          var val;\n          for (; i < splits.length; i++) {\n            if (!obj[LEXICON.hOP](splits[i])) return;\n            val = obj[splits[i]];\n            if (i < splits.length && type(val) == TYPES.o) obj = val;\n          }\n          return val;\n        }\n        /**\r\n         * Sets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be set.\r\n         * @param path The property of which the value shall be set.\r\n         * @param val The value of the property which shall be set.\r\n         */\n\n        function setObjectPropVal(obj, path, val) {\n          var splits = path.split(_strDot);\n          var splitsLength = splits.length;\n          var i = 0;\n          var extendObj = {};\n          var extendObjRoot = extendObj;\n          for (; i < splitsLength; i++) {\n            extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n          }\n          FRAMEWORK.extend(obj, extendObjRoot, true);\n        }\n        /**\t\r\n         * Runs a action for each selector inside the updateOnLoad option.\t\r\n         * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n         */\n\n        function eachUpdateOnLoad(action) {\n          var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n          updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n          if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n            each(updateOnLoad, action);\n          }\n        } //==== Utils Cache ====//\n\n        /**\r\n         * Compares two values or objects and returns true if they aren't equal.\r\n         * @param current The first value or object which shall be compared.\r\n         * @param cache The second value or object which shall be compared.\r\n         * @param force If true the returned value is always true.\r\n         * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n         */\n\n        function checkCache(current, cache, force) {\n          if (force) return force;\n          if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n            for (var prop in current) {\n              if (prop !== 'c') {\n                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                  if (checkCache(current[prop], cache[prop])) return true;\n                } else {\n                  return true;\n                }\n              }\n            }\n          } else {\n            return current !== cache;\n          }\n          return false;\n        } //==== Shortcuts ====//\n\n        /**\r\n         * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n         */\n\n        function extendDeep() {\n          return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n        }\n        /**\r\n         * jQuery addClass method shortcut.\r\n         */\n\n        function addClass(el, classes) {\n          return _frameworkProto.addClass.call(el, classes);\n        }\n        /**\r\n         * jQuery removeClass method shortcut.\r\n         */\n\n        function removeClass(el, classes) {\n          return _frameworkProto.removeClass.call(el, classes);\n        }\n        /**\r\n         * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n         */\n\n        function addRemoveClass(el, classes, doAdd) {\n          return doAdd ? addClass(el, classes) : removeClass(el, classes);\n        }\n        /**\r\n         * jQuery remove method shortcut.\r\n         */\n\n        function remove(el) {\n          return _frameworkProto.remove.call(el);\n        }\n        /**\r\n         * Finds the first child element with the given selector of the given element.\r\n         * @param el The root element from which the selector shall be valid.\r\n         * @param selector The selector of the searched element.\r\n         * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n         */\n\n        function findFirst(el, selector) {\n          return _frameworkProto.find.call(el, selector).eq(0);\n        } //==== API ====//\n\n        /**\r\n         * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n         * This behavior can be reset by calling the update method.\r\n         */\n\n        _base.sleep = function () {\n          _sleeping = true;\n        };\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param force True if every property shall be updated and the cache shall be ignored.\r\n         * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n         * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n         * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n         * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n         * @returns {boolean|undefined} \r\n         * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n         * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n         * undefined otherwise.\r\n         */\n\n        _base.update = function (force) {\n          if (_destroyed) return;\n          var attrsChanged;\n          var contentSizeC;\n          var isString = type(force) == TYPES.s;\n          var doUpdateAuto;\n          var mutHost;\n          var mutContent;\n          if (isString) {\n            if (force === _strAuto) {\n              attrsChanged = meaningfulAttrsChanged();\n              contentSizeC = updateAutoContentSizeChanged();\n              doUpdateAuto = attrsChanged || contentSizeC;\n              if (doUpdateAuto) {\n                update({\n                  _contentSizeChanged: contentSizeC,\n                  _changedOptions: _initialized ? undefined$1 : _currentPreparedOptions\n                });\n              }\n            } else if (force === _strSync) {\n              if (_mutationObserversConnected) {\n                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n              } else {\n                mutHost = _base.update(_strAuto);\n              }\n            } else if (force === 'zoom') {\n              update({\n                _hostSizeChanged: true,\n                _contentSizeChanged: true\n              });\n            }\n          } else {\n            force = _sleeping || force;\n            _sleeping = false;\n            if (!_base.update(_strSync) || force) update({\n              _force: force\n            });\n          }\n          updateElementsOnLoad();\n          return doUpdateAuto || mutHost || mutContent;\n        };\n        /**\r\n         Gets or sets the current options. The update method will be called automatically if new options were set.\r\n         * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n         * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n         * @returns {*}\r\n         */\n\n        _base.options = function (newOptions, value) {\n          var option = {};\n          var changedOps; //return current options if newOptions are undefined or empty\n\n          if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n            if (type(newOptions) == TYPES.s) {\n              if (arguments.length > 1) {\n                setObjectPropVal(option, newOptions, value);\n                changedOps = setOptions(option);\n              } else return getObjectPropVal(_currentOptions, newOptions);\n            } else return _currentOptions;\n          } else {\n            changedOps = setOptions(newOptions);\n          }\n          if (!FRAMEWORK.isEmptyObject(changedOps)) {\n            update({\n              _changedOptions: changedOps\n            });\n          }\n        };\n        /**\r\n         * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n         */\n\n        _base.destroy = function () {\n          if (_destroyed) return; //remove this instance from auto update loop\n\n          autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n          disconnectMutationObservers(); //remove all resize observers\n\n          setupResizeObserver(_sizeObserverElement);\n          setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n          for (var extName in _extensions) {\n            _base.removeExt(extName);\n          } //remove all 'destroy' events\n\n          while (_destroyEvents[LEXICON.l] > 0) {\n            _destroyEvents.pop()();\n          } //remove all events from host element\n\n          setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n          if (_contentGlueElement) remove(_contentGlueElement);\n          if (_contentArrangeElement) remove(_contentArrangeElement);\n          if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n          setupScrollbarsDOM(true);\n          setupScrollbarCornerDOM(true);\n          setupStructureDOM(true); //remove all generated image load events\n\n          for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n            FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n          }\n          _updateOnLoadElms = undefined$1;\n          _destroyed = true;\n          _sleeping = true; //remove this instance from the instances list\n\n          INSTANCES(pluginTargetElement, 0);\n          dispatchCallback('onDestroyed'); //remove all properties and methods\n          //for (var property in _base)\n          //    delete _base[property];\n          //_base = undefined;\n        };\n        /**\r\n         * Scrolls to a given position or element.\r\n         * @param coordinates\r\n         * 1. Can be \"coordinates\" which looks like:\r\n         *    { x : ?, y : ? } OR          Object with x and y properties\r\n         *    { left : ?, top : ? } OR     Object with left and top properties\r\n         *    { l : ?, t : ? } OR          Object with l and t properties\r\n         *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n         *    ?                            A single value which stays for both axis\r\n         *    A value can be a number, a string or a calculation.\r\n         *\r\n         *    Operators:\r\n         *    [NONE]  The current scroll will be overwritten by the value.\r\n         *    '+='    The value will be added to the current scroll offset\r\n         *    '-='    The value will be subtracted from the current scroll offset\r\n         *    '*='    The current scroll wil be multiplicated by the value.\r\n         *    '/='    The current scroll wil be divided by the value.\r\n         *\r\n         *    Units:\r\n         *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n         *    'px'    Same as none\r\n         *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n         *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n         *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n         *\r\n         *    example final values:\r\n         *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n         *\r\n         * 2. Can be a HTML or jQuery element:\r\n         *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n         *\r\n         * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n         *    {\r\n         *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n         *      scroll : [string, array, object],               Default value is 'always'.\r\n         *      block : [string, array, object],                Default value is 'begin'.\r\n         *      margin : [number, boolean, array, object]       Default value is false.\r\n         *    }\r\n         *\r\n         *    Possible scroll settings are:\r\n         *    'always'      Scrolls always.\r\n         *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n         *    'never'       Scrolls never.\r\n         *\r\n         *    Possible block settings are:\r\n         *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n         *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n         *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n         *    'nearest' The element will be docked to the nearest edge(s).\r\n         *\r\n         *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n         *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n         *    [NUMBER]                                          The margin will be used for all edges.\r\n         *\r\n         * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n         * @param easing The animation easing.\r\n         * @param complete The animation complete callback.\r\n         * @returns {{\r\n         *   position: {x: number, y: number},\r\n         *   ratio: {x: number, y: number},\r\n         *   max: {x: number, y: number},\r\n         *   handleOffset: {x: number, y: number},\r\n         *   handleLength: {x: number, y: number},\r\n         *   handleLengthRatio: {x: number, y: number}, t\r\n         *   rackLength: {x: number, y: number},\r\n         *   isRTL: boolean,\r\n         *   isRTLNormalized: boolean\r\n         *  }}\r\n         */\n\n        _base.scroll = function (coordinates, duration, easing, complete) {\n          if (arguments.length === 0 || coordinates === undefined$1) {\n            var infoX = _scrollHorizontalInfo;\n            var infoY = _scrollVerticalInfo;\n            var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n            var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n            var scrollX = infoX._currentScroll;\n            var scrollXRatio = infoX._currentScrollRatio;\n            var maxScrollX = infoX._maxScroll;\n            scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n            scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n            scrollX *= normalizeNegate ? -1 : 1;\n            maxScrollX *= normalizeNegate ? -1 : 1;\n            return {\n              position: {\n                x: scrollX,\n                y: infoY._currentScroll\n              },\n              ratio: {\n                x: scrollXRatio,\n                y: infoY._currentScrollRatio\n              },\n              max: {\n                x: maxScrollX,\n                y: infoY._maxScroll\n              },\n              handleOffset: {\n                x: infoX._handleOffset,\n                y: infoY._handleOffset\n              },\n              handleLength: {\n                x: infoX._handleLength,\n                y: infoY._handleLength\n              },\n              handleLengthRatio: {\n                x: infoX._handleLengthRatio,\n                y: infoY._handleLengthRatio\n              },\n              trackLength: {\n                x: infoX._trackLength,\n                y: infoY._trackLength\n              },\n              snappedHandleOffset: {\n                x: infoX._snappedHandleOffset,\n                y: infoY._snappedHandleOffset\n              },\n              isRTL: _isRTL,\n              isRTLNormalized: _normalizeRTLCache\n            };\n          }\n          _base.update(_strSync);\n          var normalizeRTL = _normalizeRTLCache;\n          var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n          var coordinatesYAxisProps = [_strY, _strTop, 't'];\n          var coordinatesOperators = ['+=', '-=', '*=', '/='];\n          var durationIsObject = type(duration) == TYPES.o;\n          var completeCallback = durationIsObject ? duration.complete : complete;\n          var i;\n          var finalScroll = {};\n          var specialEasing = {};\n          var doScrollLeft;\n          var doScrollTop;\n          var animationOptions;\n          var strEnd = 'end';\n          var strBegin = 'begin';\n          var strCenter = 'center';\n          var strNearest = 'nearest';\n          var strAlways = 'always';\n          var strNever = 'never';\n          var strIfNeeded = 'ifneeded';\n          var strLength = LEXICON.l;\n          var settingsAxis;\n          var settingsScroll;\n          var settingsBlock;\n          var settingsMargin;\n          var finalElement;\n          var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n          var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n          var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n          var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n          var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n          var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n          var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n          var updateScrollbarInfos = function updateScrollbarInfos() {\n            if (doScrollLeft) refreshScrollbarHandleOffset(true);\n            if (doScrollTop) refreshScrollbarHandleOffset(false);\n          };\n          var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined$1 : function () {\n            updateScrollbarInfos();\n            completeCallback();\n          };\n          function checkSettingsStringValue(currValue, allowedValues) {\n            for (i = 0; i < allowedValues[strLength]; i++) {\n              if (currValue === allowedValues[i]) return true;\n            }\n            return false;\n          }\n          function getRawScroll(isX, coordinates) {\n            var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n            coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n            if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n              //decides RTL normalization \"hack\" with .n\n              //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n              for (i = 0; i < coordinateProps[strLength]; i++) {\n                if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n              }\n            }\n          }\n          function getFinalScroll(isX, rawScroll) {\n            var isString = type(rawScroll) == TYPES.s;\n            var operator;\n            var amount;\n            var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n            var currScroll = scrollInfo._currentScroll;\n            var maxScroll = scrollInfo._maxScroll;\n            var mult = ' * ';\n            var finalValue;\n            var isRTLisX = _isRTL && isX;\n            var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n            var strReplace = 'replace';\n            var evalFunc = eval;\n            var possibleOperator;\n            if (isString) {\n              //check operator\n              if (rawScroll[strLength] > 2) {\n                possibleOperator = rawScroll.substr(0, 2);\n                if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n              } //calculate units and shortcuts\n\n              rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n              rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n              [strReplace](/</g, 0) //'<'   = 0%\n              [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n              [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n              [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n              amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n            } else {\n              amount = rawScroll;\n            }\n            if (amount !== undefined$1 && !isNaN(amount) && type(amount) == TYPES.n) {\n              var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n              var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n              var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n              var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n              operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n              switch (operator) {\n                case '+=':\n                  finalValue = operatorCurrScroll + amount;\n                  break;\n                case '-=':\n                  finalValue = operatorCurrScroll - amount;\n                  break;\n                case '*=':\n                  finalValue = operatorCurrScroll * amount;\n                  break;\n                case '/=':\n                  finalValue = operatorCurrScroll / amount;\n                  break;\n                default:\n                  finalValue = amount;\n                  break;\n              }\n              finalValue = invert ? maxScroll - finalValue : finalValue;\n              finalValue *= negate ? -1 : 1;\n              finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n            }\n            return finalValue === currScroll ? undefined$1 : finalValue;\n          }\n          function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n            var resultDefault = [defaultValue, defaultValue];\n            var valueType = type(value);\n            var valueArrLength;\n            var valueArrItem; //value can be [ string, or array of two strings ]\n\n            if (valueType == valueInternalType) {\n              value = [value, value];\n            } else if (valueType == TYPES.a) {\n              valueArrLength = value[strLength];\n              if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n                if (valueArrLength === 1) value[1] = defaultValue;\n                for (i = 0; i < valueArrLength; i++) {\n                  valueArrItem = value[i];\n                  if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                    value = resultDefault;\n                    break;\n                  }\n                }\n              }\n            } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n            return {\n              x: value[0],\n              y: value[1]\n            };\n          }\n          function generateMargin(marginTopRightBottomLeftArray) {\n            var result = [];\n            var currValue;\n            var currValueType;\n            var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n            for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n              if (i === valueDirections[strLength]) break;\n              currValue = marginTopRightBottomLeftArray[i];\n              currValueType = type(currValue);\n              if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n            }\n            return result;\n          }\n          if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n            //get settings\n            var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n            var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n            var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n            var block = coordinatesIsElementObj ? coordinates.block : 0;\n            var marginDefault = [0, 0, 0, 0];\n            var marginType = type(margin);\n            var marginLength;\n            finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n            if (finalElement[strLength] > 0) {\n              //margin can be [ boolean, number, array of 2, array of 4, object ]\n              if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n                marginLength = margin[strLength];\n                if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n              } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n              settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n              settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n              settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n              settingsMargin = margin;\n              var viewportScroll = {\n                l: _scrollHorizontalInfo._currentScroll,\n                t: _scrollVerticalInfo._currentScroll\n              }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n              var viewportOffset = _paddingElement.offset(); //get coordinates\n\n              var elementOffset = finalElement.offset();\n              var doNotScroll = {\n                x: settingsScroll.x == strNever || settingsAxis == _strY,\n                y: settingsScroll.y == strNever || settingsAxis == _strX\n              };\n              elementOffset[_strTop] -= settingsMargin[0];\n              elementOffset[_strLeft] -= settingsMargin[3];\n              var elementScrollCoordinates = {\n                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n              };\n              if (_isRTL) {\n                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n                if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n                if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n              } //measuring is required\n\n              if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n                var measuringElm = finalElement[0];\n                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                  width: measuringElm[LEXICON.oW],\n                  height: measuringElm[LEXICON.oH]\n                };\n                var elementSize = {\n                  w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                  h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n                };\n                var finalizeBlock = function finalizeBlock(isX) {\n                  var vars = getScrollbarVars(isX);\n                  var wh = vars._w_h;\n                  var lt = vars._left_top;\n                  var xy = vars._x_y;\n                  var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                  var blockIsCenter = settingsBlock[xy] == strCenter;\n                  var blockIsNearest = settingsBlock[xy] == strNearest;\n                  var scrollNever = settingsScroll[xy] == strNever;\n                  var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                  var vpSize = _viewportSize[wh];\n                  var vpOffset = viewportOffset[lt];\n                  var elSize = elementSize[wh];\n                  var elOffset = elementOffset[lt];\n                  var divide = blockIsCenter ? 2 : 1;\n                  var elementCenterOffset = elOffset + elSize / 2;\n                  var viewportCenterOffset = vpOffset + vpSize / 2;\n                  var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                  if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                    if (blockIsNearest || scrollIfNeeded) {\n                      doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                      blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                    }\n                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                  }\n                };\n                finalizeBlock(true);\n                finalizeBlock(false);\n              }\n              if (doNotScroll.y) delete elementScrollCoordinates.y;\n              if (doNotScroll.x) delete elementScrollCoordinates.x;\n              coordinates = elementScrollCoordinates;\n            }\n          }\n          finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n          finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n          doScrollLeft = finalScroll[_strScrollLeft] !== undefined$1;\n          doScrollTop = finalScroll[_strScrollTop] !== undefined$1;\n          if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n            if (durationIsObject) {\n              duration.complete = proxyCompleteCallback;\n              _viewportElement.animate(finalScroll, duration);\n            } else {\n              animationOptions = {\n                duration: duration,\n                complete: proxyCompleteCallback\n              };\n              if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n                specialEasing[_strScrollLeft] = easing[0] || easing.x;\n                specialEasing[_strScrollTop] = easing[1] || easing.y;\n                animationOptions.specialEasing = specialEasing;\n              } else {\n                animationOptions.easing = easing;\n              }\n              _viewportElement.animate(finalScroll, animationOptions);\n            }\n          } else {\n            if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n            if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n            updateScrollbarInfos();\n          }\n        };\n        /**\r\n         * Stops all scroll animations.\r\n         * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n         */\n\n        _base.scrollStop = function (param1, param2, param3) {\n          _viewportElement.stop(param1, param2, param3);\n          return _base;\n        };\n        /**\r\n         * Returns all relevant elements.\r\n         * @param elementName The name of the element which shall be returned.\r\n         * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n         */\n\n        _base.getElements = function (elementName) {\n          var obj = {\n            target: _targetElementNative,\n            host: _hostElementNative,\n            padding: _paddingElementNative,\n            viewport: _viewportElementNative,\n            content: _contentElementNative,\n            scrollbarHorizontal: {\n              scrollbar: _scrollbarHorizontalElement[0],\n              track: _scrollbarHorizontalTrackElement[0],\n              handle: _scrollbarHorizontalHandleElement[0]\n            },\n            scrollbarVertical: {\n              scrollbar: _scrollbarVerticalElement[0],\n              track: _scrollbarVerticalTrackElement[0],\n              handle: _scrollbarVerticalHandleElement[0]\n            },\n            scrollbarCorner: _scrollbarCornerElement[0]\n          };\n          return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n        };\n        /**\r\n         * Returns a object which describes the current state of this instance.\r\n         * @param stateProperty A specific property from the state object which shall be returned.\r\n         * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n         */\n\n        _base.getState = function (stateProperty) {\n          function prepare(obj) {\n            if (!FRAMEWORK.isPlainObject(obj)) return obj;\n            var extended = extendDeep({}, obj);\n            var changePropertyName = function changePropertyName(from, to) {\n              if (extended[LEXICON.hOP](from)) {\n                extended[to] = extended[from];\n                delete extended[from];\n              }\n            };\n            changePropertyName('w', _strWidth); //change w to width\n\n            changePropertyName('h', _strHeight); //change h to height\n\n            delete extended.c; //delete c (the 'changed' prop)\n\n            return extended;\n          }\n          var obj = {\n            destroyed: !!prepare(_destroyed),\n            sleeping: !!prepare(_sleeping),\n            autoUpdate: prepare(!_mutationObserversConnected),\n            widthAuto: prepare(_widthAutoCache),\n            heightAuto: prepare(_heightAutoCache),\n            padding: prepare(_cssPaddingCache),\n            overflowAmount: prepare(_overflowAmountCache),\n            hideOverflow: prepare(_hideOverflowCache),\n            hasOverflow: prepare(_hasOverflowCache),\n            contentScrollSize: prepare(_contentScrollSizeCache),\n            viewportSize: prepare(_viewportSize),\n            hostSize: prepare(_hostSizeCache),\n            documentMixed: prepare(_documentMixed)\n          };\n          return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n        };\n        /**\r\n         * Gets all or specific extension instance.\r\n         * @param extName The name of the extension from which the instance shall be got.\r\n         * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n         */\n\n        _base.ext = function (extName) {\n          var result;\n          var privateMethods = _extensionsPrivateMethods.split(' ');\n          var i = 0;\n          if (type(extName) == TYPES.s) {\n            if (_extensions[LEXICON.hOP](extName)) {\n              result = extendDeep({}, _extensions[extName]);\n              for (; i < privateMethods.length; i++) {\n                delete result[privateMethods[i]];\n              }\n            }\n          } else {\n            result = {};\n            for (i in _extensions) {\n              result[i] = extendDeep({}, _base.ext(i));\n            }\n          }\n          return result;\n        };\n        /**\r\n         * Adds a extension to this instance.\r\n         * @param extName The name of the extension which shall be added.\r\n         * @param extensionOptions The extension options which shall be used.\r\n         * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n         */\n\n        _base.addExt = function (extName, extensionOptions) {\n          var registeredExtensionObj = _plugin.extension(extName);\n          var instance;\n          var instanceAdded;\n          var instanceContract;\n          var contractResult;\n          var contractFulfilled = true;\n          if (registeredExtensionObj) {\n            if (!_extensions[LEXICON.hOP](extName)) {\n              instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n              if (instance) {\n                instanceContract = instance.contract;\n                if (type(instanceContract) == TYPES.f) {\n                  contractResult = instanceContract(window);\n                  contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n                }\n                if (contractFulfilled) {\n                  _extensions[extName] = instance;\n                  instanceAdded = instance.added;\n                  if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                  return _base.ext(extName);\n                }\n              }\n            } else return _base.ext(extName);\n          } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n        };\n        /**\r\n         * Removes a extension from this instance.\r\n         * @param extName The name of the extension which shall be removed.\r\n         * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n         */\n\n        _base.removeExt = function (extName) {\n          var instance = _extensions[extName];\n          var instanceRemoved;\n          if (instance) {\n            delete _extensions[extName];\n            instanceRemoved = instance.removed;\n            if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n            return true;\n          }\n          return false;\n        };\n        /**\r\n         * Constructs the plugin.\r\n         * @param targetElement The element to which the plugin shall be applied.\r\n         * @param options The initial options of the plugin.\r\n         * @param extensions The extension(s) which shall be added right after the initialization.\r\n         * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n         */\n\n        function construct(targetElement, options, extensions) {\n          _defaultOptions = globals.defaultOptions;\n          _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n          _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n          _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n          setOptions(extendDeep({}, _defaultOptions, options));\n          _cssCalc = globals.cssCalc;\n          _msieVersion = globals.msie;\n          _autoUpdateRecommended = globals.autoUpdateRecommended;\n          _supportTransition = globals.supportTransition;\n          _supportTransform = globals.supportTransform;\n          _supportPassiveEvents = globals.supportPassiveEvents;\n          _supportResizeObserver = globals.supportResizeObserver;\n          _supportMutationObserver = globals.supportMutationObserver;\n          _documentElement = FRAMEWORK(targetElement.ownerDocument);\n          _documentElementNative = _documentElement[0];\n          _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n          _windowElementNative = _windowElement[0];\n          _htmlElement = findFirst(_documentElement, 'html');\n          _bodyElement = findFirst(_htmlElement, 'body');\n          _targetElement = FRAMEWORK(targetElement);\n          _targetElementNative = _targetElement[0];\n          _isTextarea = _targetElement.is('textarea');\n          _isBody = _targetElement.is('body');\n          _documentMixed = _documentElementNative !== document;\n          /* On a div Element The if checks only whether:\r\n           * - the targetElement has the class \"os-host\"\r\n           * - the targetElement has a a child with the class \"os-padding\"\r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-host\" element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding\">\r\n           *          <div class=\"os-viewport\">\r\n           *              <div class=\"os-content\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           *\r\n           * =====================================================================================\r\n           * \r\n           * On a Textarea Element The if checks only whether:\r\n           * - the targetElement has the class \"os-textarea\" \r\n           * - the targetElement is inside a element with the class \"os-content\" \r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-textarea\" (textarea) element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host-textarea\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding os-text-inherit\">\r\n           *          <div class=\"os-viewport os-text-inherit\">\r\n           *              <div class=\"os-content os-text-inherit\">\r\n           *                  <div class=\"os-textarea-cover\"></div>\r\n           *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n           *              </div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           */\n\n          _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n          var initBodyScroll;\n          var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n            dispatchCallback('onInitializationWithdrawn');\n            if (_domExists) {\n              setupStructureDOM(true);\n              setupScrollbarsDOM(true);\n              setupScrollbarCornerDOM(true);\n            }\n            _destroyed = true;\n            _sleeping = true;\n            return _base;\n          }\n          if (_isBody) {\n            initBodyScroll = {};\n            initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n            initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n            _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n              _viewportElement.removeAttr(LEXICON.ti);\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n            };\n          } //build OverlayScrollbars DOM\n\n          setupStructureDOM();\n          setupScrollbarsDOM();\n          setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n          setupStructureEvents();\n          setupScrollbarEvents(true);\n          setupScrollbarEvents(false);\n          setupScrollbarCornerEvents(); //create mutation observers\n\n          createMutationObservers(); //build resize observer for the host element\n\n          setupResizeObserver(_sizeObserverElement, hostOnResized);\n          if (_isBody) {\n            //apply the body scroll to handle it right in the update method\n            _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n            if (document.activeElement == targetElement && _viewportElementNative.focus) {\n              //set a tabindex to make the viewportElement focusable\n              _viewportElement.attr(LEXICON.ti, '-1');\n              _viewportElementNative.focus();\n              /* the tabindex has to be removed due to;\r\n               * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n               * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n               */\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n            }\n          } //update for the first time & initialize cache\n\n          _base.update(_strAuto); //the plugin is initialized now!\n\n          _initialized = true;\n          dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n          each(_callbacksInitQeueue, function (index, value) {\n            dispatchCallback(value.n, value.a);\n          });\n          _callbacksInitQeueue = []; //add extensions\n\n          if (type(extensions) == TYPES.s) extensions = [extensions];\n          if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n            _base.addExt(value);\n          });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n            _base.addExt(key, value);\n          }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n          setTimeout(function () {\n            if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n          }, 333);\n          return _base;\n        }\n        if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n          INSTANCES(pluginTargetElement, _base);\n        }\n        return _base;\n      }\n      /**\r\n       * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n       * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n       * @param options The custom options with which the plugin shall be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*}\r\n       */\n\n      _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var arr = [];\n        var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n        var inst;\n        var result; //pluginTargetElements is null or undefined\n\n        if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n        /*\r\n           pluginTargetElements will be converted to:\r\n           1. A jQueryElement Array\r\n           2. A HTMLElement Array\r\n           3. A Array with a single HTML Element\r\n           so pluginTargetElements is always a array.\r\n        */\n\n        pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined$1 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n        initOverlayScrollbarsStatics();\n        if (pluginTargetElements[LEXICON.l] > 0) {\n          if (optsIsPlainObj) {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = v;\n              if (inst !== undefined$1) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n            });\n          } else {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = INSTANCES(v);\n              if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined$1) arr.push(inst);\n            });\n          }\n          result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n        }\n        return result;\n      };\n      /**\r\n       * Returns a object which contains global information about the plugin and each instance of it.\r\n       * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n       */\n\n      _plugin.globals = function () {\n        initOverlayScrollbarsStatics();\n        var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n        delete globals['msie'];\n        return globals;\n      };\n      /**\r\n       * Gets or Sets the default options for each new plugin initialization.\r\n       * @param newDefaultOptions The object with which the default options shall be extended.\r\n       */\n\n      _plugin.defaultOptions = function (newDefaultOptions) {\n        initOverlayScrollbarsStatics();\n        var currDefaultOptions = _pluginsGlobals.defaultOptions;\n        if (newDefaultOptions === undefined$1) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n        _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n      };\n      /**\r\n       * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n       * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n       * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n       */\n\n      _plugin.valid = function (osInstance) {\n        return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n      };\n      /**\r\n       * Registers, Unregisters or returns a extension.\r\n       * Register: Pass the name and the extension. (defaultOptions is optional)\r\n       * Unregister: Pass the name and anything except a function as extension parameter.\r\n       * Get extension: Pass the name of the extension which shall be got.\r\n       * Get all extensions: Pass no arguments.\r\n       * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n       * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n       * @param defaultOptions The default options which shall be used for the registered extension.\r\n       */\n\n      _plugin.extension = function (extensionName, extension, defaultOptions) {\n        var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n        var argLen = arguments[LEXICON.l];\n        var i = 0;\n        if (argLen < 1 || !extNameTypeString) {\n          //return a copy of all extension objects\n          return FRAMEWORK.extend(true, {\n            length: _pluginsExtensions[LEXICON.l]\n          }, _pluginsExtensions);\n        } else if (extNameTypeString) {\n          if (COMPATIBILITY.type(extension) == TYPES.f) {\n            //register extension\n            _pluginsExtensions.push({\n              name: extensionName,\n              extensionFactory: extension,\n              defaultOptions: defaultOptions\n            });\n          } else {\n            for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n              if (_pluginsExtensions[i].name === extensionName) {\n                if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n                else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n              }\n            }\n          }\n        }\n      };\n      return _plugin;\n    }();\n    if (JQUERY && JQUERY.fn) {\n      /**\r\n       * The jQuery initialization interface.\r\n       * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n       */\n      JQUERY.fn.overlayScrollbars = function (options, extensions) {\n        var _elements = this;\n        if (JQUERY.isPlainObject(options)) {\n          JQUERY.each(_elements, function () {\n            PLUGIN(this, options, extensions);\n          });\n          return _elements;\n        } else return PLUGIN(_elements, options);\n      };\n    }\n    return PLUGIN;\n  });\n})(OverlayScrollbars$1);\nvar OverlayScrollbars = OverlayScrollbars$1.exports;\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\n\nvar OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_a) {\n  var _a$options = _a.options,\n    options = _a$options === void 0 ? {} : _a$options,\n    extensions = _a.extensions,\n    className = _a.className,\n    children = _a.children,\n    rest = __rest(_a, [\"options\", \"extensions\", \"className\", \"children\"]);\n  var osTargetRef = useRef();\n  var osInstance = useRef();\n  useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), React__default.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), React__default.createElement(\"div\", {\n    className: \"os-padding\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n      host = _osInstance$getElemen.host;\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\nexport { OverlayScrollbarsComponent, OverlayScrollbarsComponent as default };","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","c","commonjsGlobal","d","__rest","React__default","useRef","useEffect","OverlayScrollbars$1","exports","module","global","factory","document","undefined","window","undefined$1","PLUGINNAME","TYPES","o","f","a","s","b","n","u","z","LEXICON","i","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","name","result","uppercasedName","elmStyle","createElement","resultPossibilities","v","currVendorWithoutDashes","length","replace","_cssPropertyValue","property","values","suffix","dummyStyle","possbleValues","split","preparedSuffix","prop","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","Array","call","arguments","fNOP","fBound","apply","concat","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","originalEvent","strPage","strClient","strX","strY","target","srcElement","eventDoc","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","isArray","type","Object","toString","MATH","Math","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","options","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","_each","callback","isArrayLike","stripAndCollapse","value","tokens","match","join","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","splice","_animate","props","duration","easing","complete","setAnimationValue","guaranteedNext","hasOptions","from","to","progress","step","specialEasing","push","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","_frame","elapsed","qPos","qObj","frame","stop","max","parseFloat","start","pos","speacialEasing","startTime","_stop","clearQ","jumpToEnd","elementIsVisible","getClientRects","base","elements","elms","innerHTML","children","self","on","eventName","handler","eventNameLength","each","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parents","parent","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classNamePrepared","classList","contains","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","animate","jump","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","updateOnLoadTemplate","inheritedAttrsTemplate","resizeAllowedValues","overflowBehaviorAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","convert","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","dprChanged","isZoom","oldScrollbarSize","newScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","measureElement","globals","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","_loopID","loop","timeNew","timeDelta","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","min","OverlayScrollbarsInstance","pluginTargetElement","extensions","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_defaultOptions","_currentOptions","_currentPreparedOptions","_extensions","_extensionsPrivateMethods","_lastUpdateTime","_swallowedUpdateHints","_swallowedUpdateTimeout","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_updateAutoCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","setupResponsiveEventListener","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","addDestroyEventListener","setupResizeObserver","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observer","observe","dir","style","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","isDirty","rAFId","currWidth","currHeight","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","createMutationObservers","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutations","doUpdate","doUpdateForce","mutation","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","filter","hostClassNamesChanged","updateViewportAttrsFromTarget","isUnknownMutation","textareaUpdate","connectMutationObservers","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","disconnectMutationObservers","hostOnResized","changed","hostSize","checkCache","_hostSizeChanged","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","documentOnSelectStart","updateOnLoadCallback","elm","eachUpdateOnLoad","updateOnLoadSelector","_contentSizeChanged","setupHostMouseTouchEvents","destroy","bodyMinSizeChanged","bodyMinSize","parseToZeroOrNumber","oldClassNames","newClassNames","currClasses","oldClasses","diff","getArrayDifferences","idx","regex","mutationType","strClosest","updateAutoContentSizeChanged","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","float","bodyMinSizeC","contentElementScrollSize","meaningfulAttrsChanged","curr","cache","changedAttrs","checks","_elem","_attrs","check","isSizeAffectingCSSProperty","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","checkY","sizeIsAffected","checkPropertyName","attrs","targetAttr","wrapAttrOff","minWidth","minHeight","doMeasure","origWidth","width","origHeight","height","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","_force","hostSizeChanged","contentSizeChanged","force","changedOptions","_changedOptions","swallow","displayIsHidden","extendDeep","checkCacheAutoForce","currScroll","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","padding","getTopRightBottomLeftHost","sizeAutoObserverElementBCRect","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAuto","widthAutoChanged","wasWidthAuto","heightAuto","bottom","heightAutoChanged","wasHeightAuto","updateBorderX","updateBorderY","border","margin","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","getScrollbarVars","wh","_w_h","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","viewportSize","contentScrollSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","overflowAmount","hasOverflow","hideOverflow","canScroll","viewportRect","setOverflowVariables","scrollbarVarsInverted","xyI","_x_y","xy","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","setContentElementCSS","strDirection","invertedAutoSize","addRemoveClass","viewportElementCSS","setViewportCSS","XY","_X_Y","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","posLeftWithFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorPos","_cursorPosition","cursorMax","_cursorMax","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarHandleOffset","refreshScrollbarsInteractive","dispatchCallback","isRTL","xScrollable","yScrollable","clipped","updateElementsOnLoad","forced","setOptions","newOptions","validatedOpts","setupStructureDOM","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","setupStructureEvents","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","textareaUpdateIntervalID","scrollStopTimeoutId","scrollStopDelay","strFocus","updateTextarea","doClearInterval","clearInterval","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","textareaOnKeyDown","keyCode","setInterval","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","setupScrollbarsDOM","selectOrGenerateScrollbarDOM","isHorizontal","scrollbarClassName","scrollbar","track","handle","_scrollbar","_track","_handle","resetScrollbarDOM","horizontalElements","verticalElements","setupScrollbarEvents","scrollbarVarsInfo","_info","insideIFrame","scroll","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","isTouchEvent","documentDragMove","trackLength","_trackLength","handleLength","_handleLength","scrollRange","_maxScroll","scrollRaw","scrollDeltaPercent","scrollDelta","isFinite","documentMouseTouchUp","scrollStop","mouseInsideHost","clientX","clientY","onHandleMouseTouchDown","onHandleMouseTouchDownAction","isNaN","getHostElementInvertedScale","onTrackMouseTouchDown","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","_left_top","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","decreaseScroll","finishedCondition","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","handleOffset","_handleOffset","_currentScroll","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarHiddenClassName","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","_handleLengthRatio","scrollOrTransition","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","transformOffset","translateValue","maxScroll","getScrollRatio","getHandleOffset","scrollRatio","unsnappedScrollRatio","snappedHandleOffset","_currentScrollRatio","getCSSTransitionString","_snappedHandleOffset","isTrack","element1","element2","_l_t","setupScrollbarCornerDOM","setupScrollbarCornerEvents","mouseDownPosition","mouseDownSize","reconnectMutationObserver","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","ext","substr","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","regExpString","regExpMain","RegExp","regExpValidate","properties","strResult","valueArray","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","rowCols","classesOrAttrs","content","selectParentOrOnlyChildren","onlyChildren","selectParent","getObjectPropVal","path","splits","setObjectPropVal","splitsLength","extendObj","extendObjRoot","current","doAdd","sleep","attrsChanged","contentSizeC","isString","doUpdateAuto","mutHost","mutContent","takeRecords","option","changedOps","extName","removeExt","pop","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","scrollXRatio","maxScrollX","ratio","handleLengthRatio","isRTLNormalized","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","doScrollLeft","doScrollTop","animationOptions","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","scrollInfo","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","possibleOperator","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","resultDefault","valueType","valueArrLength","valueArrItem","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","axis","block","marginDefault","marginType","marginLength","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","elementSize","finalizeBlock","vars","lt","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","param1","param2","param3","getElements","elementName","host","viewport","scrollbarHorizontal","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","changePropertyName","destroyed","sleeping","documentMixed","privateMethods","addExt","extensionOptions","registeredExtensionObj","extension","instanceAdded","instanceContract","contractResult","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","construct","initBodyScroll","_bodyMouseTouchDownListener","bodyMouseTouchDownListener","activeElement","focus","valid","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","fn","overlayScrollbars","_elements","OverlayScrollbars","OverlayScrollbarsComponent","_a","_a$options","rest","osTargetRef","mergeHostClassNames","assign","ref","_osInstance$getElemen","osClassNames","default"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/@storybook/components/dist/esm/OverlayScrollbars-1355f44c.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { c as commonjsGlobal, d as __rest } from './index-681e4b07.js';\nimport React__default, { useRef, useEffect } from 'react';\nimport '@storybook/theming';\nimport 'memoizerific';\nimport '@storybook/csf';\nimport 'qs';\nimport '@storybook/client-logger';\nvar OverlayScrollbars$1 = {\n  exports: {}\n};\n/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n\n(function (module) {\n  (function (global, factory) {\n    module.exports = factory(global, global.document, undefined);\n  })(typeof window !== 'undefined' ? window : commonjsGlobal, function (window, document, undefined$1) {\n    var PLUGINNAME = 'OverlayScrollbars';\n    var TYPES = {\n      o: 'object',\n      f: 'function',\n      a: 'array',\n      s: 'string',\n      b: 'boolean',\n      n: 'number',\n      u: 'undefined',\n      z: 'null' //d : 'date',\n      //e : 'error',\n      //r : 'regexp',\n      //y : 'symbol'\n\n    };\n    var LEXICON = {\n      c: 'class',\n      s: 'style',\n      i: 'id',\n      l: 'length',\n      p: 'prototype',\n      ti: 'tabindex',\n      oH: 'offsetHeight',\n      cH: 'clientHeight',\n      sH: 'scrollHeight',\n      oW: 'offsetWidth',\n      cW: 'clientWidth',\n      sW: 'scrollWidth',\n      hOP: 'hasOwnProperty',\n      bCR: 'getBoundingClientRect'\n    };\n\n    var VENDORS = function () {\n      //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n      var jsCache = {};\n      var cssCache = {};\n      var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n      var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n\n      function firstLetterToUpper(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n\n      return {\n        _cssPrefixes: cssPrefixes,\n        _jsPrefixes: jsPrefixes,\n        _cssProperty: function _cssProperty(name) {\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var uppercasedName = firstLetterToUpper(name);\n          var elmStyle = document.createElement('div')[LEXICON.s];\n          var resultPossibilities;\n          var i = 0;\n          var v;\n          var currVendorWithoutDashes;\n\n          for (; i < cssPrefixes.length; i++) {\n            currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n            resultPossibilities = [name, //transition\n            cssPrefixes[i] + name, //-webkit-transition\n            currVendorWithoutDashes + uppercasedName, //webkitTransition\n            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n            ];\n\n            for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n              if (elmStyle[resultPossibilities[v]] !== undefined$1) {\n                result = resultPossibilities[v];\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n          var name = property + ' ' + values;\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var dummyStyle = document.createElement('div')[LEXICON.s];\n          var possbleValues = values.split(' ');\n          var preparedSuffix = suffix || '';\n          var i = 0;\n          var v = -1;\n          var prop;\n\n          for (; i < possbleValues[LEXICON.l]; i++) {\n            for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n              prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n              dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n\n              if (dummyStyle[LEXICON.l]) {\n                result = prop;\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _jsAPI: function _jsAPI(name, isInterface, fallback) {\n          var i = 0;\n          var result = jsCache[name];\n\n          if (!jsCache[LEXICON.hOP](name)) {\n            result = window[name];\n\n            for (; i < jsPrefixes[LEXICON.l]; i++) {\n              result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n            }\n\n            jsCache[name] = result;\n          }\n\n          return result || fallback;\n        }\n      };\n    }();\n\n    var COMPATIBILITY = function () {\n      function windowSize(x) {\n        return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n      }\n\n      function bind(func, thisObj) {\n        if (_typeof(func) != TYPES.f) {\n          throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var proto = LEXICON.p;\n        var aArgs = Array[proto].slice.call(arguments, 2);\n\n        var fNOP = function fNOP() {};\n\n        var fBound = function fBound() {\n          return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n        };\n\n        if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n        fBound[proto] = new fNOP();\n        return fBound;\n      }\n\n      return {\n        /**\r\n         * Gets the current window width.\r\n         * @returns {Number|number} The current window width in pixel.\r\n         */\n        wW: bind(windowSize, 0, true),\n\n        /**\r\n         * Gets the current window height.\r\n         * @returns {Number|number} The current window height in pixel.\r\n         */\n        wH: bind(windowSize, 0),\n\n        /**\r\n         * Gets the MutationObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n         */\n        mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n\n        /**\r\n         * Gets the ResizeObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n         */\n        rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n\n        /**\r\n         * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n         */\n        rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n          return window.setTimeout(func, 1000 / 60);\n        }),\n\n        /**\r\n         * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n         */\n        cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n          return window.clearTimeout(id);\n        }),\n\n        /**\r\n         * Gets the current time.\r\n         * @returns {number} The current time.\r\n         */\n        now: function now() {\n          return Date.now && Date.now() || new Date().getTime();\n        },\n\n        /**\r\n         * Stops the propagation of the given event.\r\n         * @param event The event of which the propagation shall be stoped.\r\n         */\n        stpP: function stpP(event) {\n          if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n        },\n\n        /**\r\n         * Prevents the default action of the given event.\r\n         * @param event The event of which the default action shall be prevented.\r\n         */\n        prvD: function prvD(event) {\n          if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n        },\n\n        /**\r\n         * Gets the pageX and pageY values of the given mouse event.\r\n         * @param event The mouse event of which the pageX and pageX shall be got.\r\n         * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n         */\n        page: function page(event) {\n          event = event.originalEvent || event;\n          var strPage = 'page';\n          var strClient = 'client';\n          var strX = 'X';\n          var strY = 'Y';\n          var target = event.target || event.srcElement || document;\n          var eventDoc = target.ownerDocument || document;\n          var doc = eventDoc.documentElement;\n          var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n          if (event.touches !== undefined$1) {\n            var touch = event.touches[0];\n            return {\n              x: touch[strPage + strX],\n              y: touch[strPage + strY]\n            };\n          } // Calculate pageX/Y if not native supported\n\n\n          if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n            return {\n              x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n              y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n            };\n          }\n\n          return {\n            x: event[strPage + strX],\n            y: event[strPage + strY]\n          };\n        },\n\n        /**\r\n         * Gets the clicked mouse button of the given mouse event.\r\n         * @param event The mouse event of which the clicked button shal be got.\r\n         * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n         */\n        mBtn: function mBtn(event) {\n          var button = event.button;\n          if (!event.which && button !== undefined$1) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n        },\n\n        /**\r\n         * Checks whether a item is in the given array and returns its index.\r\n         * @param item The item of which the position in the array shall be determined.\r\n         * @param arr The array.\r\n         * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n         */\n        inA: function inA(item, arr) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n            try {\n              if (arr[i] === item) return i;\n            } catch (e) {}\n          }\n\n          return -1;\n        },\n\n        /**\r\n         * Returns true if the given value is a array.\r\n         * @param arr The potential array.\r\n         * @returns {boolean} True if the given value is a array, false otherwise.\r\n         */\n        isA: function isA(arr) {\n          var def = Array.isArray;\n          return def ? def(arr) : this.type(arr) == TYPES.a;\n        },\n\n        /**\r\n         * Determine the internal JavaScript [[Class]] of the given object.\r\n         * @param obj The object of which the type shall be determined.\r\n         * @returns {string} The type of the given object.\r\n         */\n        type: function type(obj) {\n          if (obj === undefined$1) return obj + '';\n          if (obj === null) return obj + '';\n          return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n        },\n        bind: bind\n        /**\r\n         * Gets the vendor-prefixed CSS property by the given name.\r\n         * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n         * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n         * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n         * @param propName The unprefixed CSS property name.\r\n         * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n          cssProp: function(propName) {\r\n            return VENDORS._cssProperty(propName);\r\n        }\r\n        */\n\n      };\n    }();\n\n    var MATH = Math;\n    var JQUERY = window.jQuery;\n\n    var EASING = function () {\n      var _easingsMath = {\n        p: MATH.PI,\n        c: MATH.cos,\n        s: MATH.sin,\n        w: MATH.pow,\n        t: MATH.sqrt,\n        n: MATH.asin,\n        a: MATH.abs,\n        o: 1.70158\n      };\n      /*\r\n       x : current percent (0 - 1),\r\n       t : current time (duration * percent),\r\n       b : start value (from),\r\n       c : end value (to),\r\n       d : duration\r\n         easingName : function(x, t, b, c, d) { return easedValue; }\r\n       */\n\n      return {\n        swing: function swing(x, t, b, c, d) {\n          return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n        },\n        linear: function linear(x, t, b, c, d) {\n          return x;\n        },\n        easeInQuad: function easeInQuad(x, t, b, c, d) {\n          return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n          return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function easeInCubic(x, t, b, c, d) {\n          return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n        easeInQuart: function easeInQuart(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t + b;\n        },\n        easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n          return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n        easeInQuint: function easeInQuint(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t * t + b;\n        },\n        easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n        easeInSine: function easeInSine(x, t, b, c, d) {\n          return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n        },\n        easeOutSine: function easeOutSine(x, t, b, c, d) {\n          return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n        },\n        easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n          return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n        },\n        easeInExpo: function easeInExpo(x, t, b, c, d) {\n          return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n        },\n        easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n          return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n        },\n        easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n          return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n        },\n        easeInCirc: function easeInCirc(x, t, b, c, d) {\n          return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n        },\n        easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n          return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n        },\n        easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n        },\n        easeInElastic: function easeInElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        },\n        easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n        },\n        easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d / 2) == 2) return b + c;\n          if (!p) p = d * (.3 * 1.5);\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n          return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n        },\n        easeInBack: function easeInBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n        },\n        easeInBounce: function easeInBounce(x, t, b, c, d) {\n          return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n        },\n        easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n          var o = 7.5625;\n\n          if ((t /= d) < 1 / 2.75) {\n            return c * (o * t * t) + b;\n          } else if (t < 2 / 2.75) {\n            return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n          } else if (t < 2.5 / 2.75) {\n            return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n          } else {\n            return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n          }\n        },\n        easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n          return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        }\n      };\n      /*\r\n       *\r\n       * TERMS OF USE - EASING EQUATIONS\r\n       * \r\n       * Open source under the BSD License. \r\n       * \r\n       * Copyright Â© 2001 Robert Penner\r\n       * All rights reserved.\r\n       * \r\n       * Redistribution and use in source and binary forms, with or without modification, \r\n       * are permitted provided that the following conditions are met:\r\n       * \r\n       * Redistributions of source code must retain the above copyright notice, this list of \r\n       * conditions and the following disclaimer.\r\n       * Redistributions in binary form must reproduce the above copyright notice, this list \r\n       * of conditions and the following disclaimer in the documentation and/or other materials \r\n       * provided with the distribution.\r\n       * \r\n       * Neither the name of the author nor the names of contributors may be used to endorse \r\n       * or promote products derived from this software without specific prior written permission.\r\n       * \r\n       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n       * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n       * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n       *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n       *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n       * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n       * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n       *\r\n       */\n    }();\n\n    var FRAMEWORK = function () {\n      var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n      var _strSpace = ' ';\n      var _strEmpty = '';\n      var _strScrollLeft = 'scrollLeft';\n      var _strScrollTop = 'scrollTop';\n      var _animations = [];\n      var _type = COMPATIBILITY.type;\n      var _cssNumber = {\n        animationIterationCount: true,\n        columnCount: true,\n        fillOpacity: true,\n        flexGrow: true,\n        flexShrink: true,\n        fontWeight: true,\n        lineHeight: true,\n        opacity: true,\n        order: true,\n        orphans: true,\n        widows: true,\n        zIndex: true,\n        zoom: true\n      };\n\n      function extend() {\n        var src,\n            copyIsArray,\n            copy,\n            name,\n            options,\n            clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments[LEXICON.l],\n            deep = false; // Handle a deep copy situation\n\n        if (_type(target) == TYPES.b) {\n          deep = target;\n          target = arguments[1] || {}; // skip the boolean and the target\n\n          i = 2;\n        } // Handle case when target is a string or something (possible in deep copy)\n\n\n        if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n          target = {};\n        } // extend jQuery itself if only one argument is passed\n\n\n        if (length === i) {\n          target = FakejQuery;\n          --i;\n        }\n\n        for (; i < length; i++) {\n          // Only deal with non-null/undefined values\n          if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n              src = target[name];\n              copy = options[name]; // Prevent never-ending loop\n\n              if (target === copy) {\n                continue;\n              } // Recurse if we're merging plain objects or arrays\n\n\n              if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n                if (copyIsArray) {\n                  copyIsArray = false;\n                  clone = src && COMPATIBILITY.isA(src) ? src : [];\n                } else {\n                  clone = src && isPlainObject(src) ? src : {};\n                } // Never move original objects, clone them\n\n\n                target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n              } else if (copy !== undefined$1) {\n                target[name] = copy;\n              }\n            }\n          }\n        } // Return the modified object\n\n\n        return target;\n      }\n\n      function inArray(item, arr, fromIndex) {\n        for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n          if (arr[i] === item) return i;\n        }\n\n        return -1;\n      }\n\n      function isFunction(obj) {\n        return _type(obj) == TYPES.f;\n      }\n\n      function isEmptyObject(obj) {\n        for (var name in obj) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function isPlainObject(obj) {\n        if (!obj || _type(obj) != TYPES.o) return false;\n        var key;\n        var proto = LEXICON.p;\n        var hasOwnProperty = Object[proto].hasOwnProperty;\n        var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n        var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n          return false;\n        }\n\n        for (key in obj) {\n          /**/\n        }\n\n        return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n      }\n\n      function _each(obj, callback) {\n        var i = 0;\n\n        if (isArrayLike(obj)) {\n          for (; i < obj[LEXICON.l]; i++) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        } else {\n          for (i in obj) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        }\n\n        return obj;\n      }\n\n      function isArrayLike(obj) {\n        var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n\n        var t = _type(obj);\n\n        return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n      }\n\n      function stripAndCollapse(value) {\n        var tokens = value.match(_rnothtmlwhite) || [];\n        return tokens.join(_strSpace);\n      }\n\n      function matches(elem, selector) {\n        var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n        var i = nodeList[LEXICON.l];\n\n        while (i--) {\n          if (nodeList[i] == elem) return true;\n        }\n\n        return false;\n      }\n\n      function insertAdjacentElement(el, strategy, child) {\n        if (COMPATIBILITY.isA(child)) {\n          for (var i = 0; i < child[LEXICON.l]; i++) {\n            insertAdjacentElement(el, strategy, child[i]);\n          }\n        } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n      }\n\n      function setCSSVal(el, prop, val) {\n        try {\n          if (el[LEXICON.s][prop] !== undefined$1) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n        } catch (e) {}\n      }\n\n      function parseCSSVal(prop, val) {\n        if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n        return val;\n      }\n\n      function startNextAnimationInQ(animObj, removeFromQ) {\n        var index;\n        var nextAnim;\n        if (removeFromQ !== false) animObj.q.splice(0, 1);\n\n        if (animObj.q[LEXICON.l] > 0) {\n          nextAnim = animObj.q[0];\n\n          _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n        } else {\n          index = inArray(animObj, _animations);\n          if (index > -1) _animations.splice(index, 1);\n        }\n      }\n\n      function setAnimationValue(el, prop, value) {\n        if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n      }\n\n      function _animate(el, props, options, easing, complete, guaranteedNext) {\n        var hasOptions = isPlainObject(options);\n        var from = {};\n        var to = {};\n        var i = 0;\n        var key;\n        var animObj;\n        var progress;\n        var step;\n        var specialEasing;\n        var duration;\n\n        if (hasOptions) {\n          easing = options.easing;\n          progress = options.progress;\n          step = options.step;\n          specialEasing = options.specialEasing;\n          complete = options.complete;\n          duration = options.duration;\n        } else duration = options;\n\n        specialEasing = specialEasing || {};\n        duration = duration || 400;\n        easing = easing || 'swing';\n        guaranteedNext = guaranteedNext || false;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          if (_animations[i].el === el) {\n            animObj = _animations[i];\n            break;\n          }\n        }\n\n        if (!animObj) {\n          animObj = {\n            el: el,\n            q: []\n          };\n\n          _animations.push(animObj);\n        }\n\n        for (key in props) {\n          if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n        }\n\n        for (key in from) {\n          if (from[key] !== props[key] && props[key] !== undefined$1) to[key] = props[key];\n        }\n\n        if (!isEmptyObject(to)) {\n          var timeNow;\n          var end;\n          var percent;\n          var fromVal;\n          var toVal;\n          var easedVal;\n          var timeStart;\n\n          var _frame;\n\n          var elapsed;\n          var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n          var qObj = {\n            props: to,\n            duration: hasOptions ? options : duration,\n            easing: easing,\n            complete: complete\n          };\n\n          if (qPos === -1) {\n            qPos = animObj.q[LEXICON.l];\n            animObj.q.push(qObj);\n          }\n\n          if (qPos === 0) {\n            if (duration > 0) {\n              timeStart = COMPATIBILITY.now();\n\n              _frame = function frame() {\n                timeNow = COMPATIBILITY.now();\n                elapsed = timeNow - timeStart;\n                end = qObj.stop || elapsed >= duration;\n                percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n\n                for (key in to) {\n                  fromVal = parseFloat(from[key]);\n                  toVal = parseFloat(to[key]);\n                  easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                  setAnimationValue(el, key, easedVal);\n\n                  if (isFunction(step)) {\n                    step(easedVal, {\n                      elem: el,\n                      prop: key,\n                      start: fromVal,\n                      now: easedVal,\n                      end: toVal,\n                      pos: percent,\n                      options: {\n                        easing: easing,\n                        speacialEasing: specialEasing,\n                        duration: duration,\n                        complete: complete,\n                        step: step\n                      },\n                      startTime: timeStart\n                    });\n                  }\n                }\n\n                if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n\n                if (end) {\n                  startNextAnimationInQ(animObj);\n                  if (isFunction(complete)) complete();\n                } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n              };\n\n              qObj.frame = COMPATIBILITY.rAF()(_frame);\n            } else {\n              for (key in to) {\n                setAnimationValue(el, key, to[key]);\n              }\n\n              startNextAnimationInQ(animObj);\n            }\n          }\n        } else if (guaranteedNext) startNextAnimationInQ(animObj);\n      }\n\n      function _stop(el, clearQ, jumpToEnd) {\n        var animObj;\n        var qObj;\n        var key;\n        var i = 0;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          animObj = _animations[i];\n\n          if (animObj.el === el) {\n            if (animObj.q[LEXICON.l] > 0) {\n              qObj = animObj.q[0];\n              qObj.stop = true;\n              COMPATIBILITY.cAF()(qObj.frame);\n              animObj.q.splice(0, 1);\n              if (jumpToEnd) for (key in qObj.props) {\n                setAnimationValue(el, key, qObj.props[key]);\n              }\n              if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n            }\n\n            break;\n          }\n        }\n      }\n\n      function elementIsVisible(el) {\n        return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n      }\n\n      function FakejQuery(selector) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var base = new FakejQuery();\n        var elements = selector;\n        var i = 0;\n        var elms;\n        var el;\n\n        if (_type(selector) == TYPES.s) {\n          elements = [];\n\n          if (selector.charAt(0) === '<') {\n            el = document.createElement('div');\n            el.innerHTML = selector;\n            elms = el.children;\n          } else {\n            elms = document.querySelectorAll(selector);\n          }\n\n          for (; i < elms[LEXICON.l]; i++) {\n            elements.push(elms[i]);\n          }\n        }\n\n        if (elements) {\n          if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n\n          for (i = 0; i < elements[LEXICON.l]; i++) {\n            base[i] = elements[i];\n          }\n\n          base[LEXICON.l] = elements[LEXICON.l];\n        }\n\n        return base;\n      }\n\n      FakejQuery[LEXICON.p] = {\n        //EVENTS:\n        on: function on(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.addEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.addEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.attachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        off: function off(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.removeEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.removeEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.detachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        one: function one(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          return this.each(function () {\n            var el = FakejQuery(this);\n            FakejQuery.each(eventName, function (i, oneEventName) {\n              var oneHandler = function oneHandler(e) {\n                handler.call(this, e);\n                el.off(oneEventName, oneHandler);\n              };\n\n              el.on(oneEventName, oneHandler);\n            });\n          });\n        },\n        trigger: function trigger(eventName) {\n          var el;\n          var event;\n          return this.each(function () {\n            el = this;\n\n            if (document.createEvent) {\n              event = document.createEvent('HTMLEvents');\n              event.initEvent(eventName, true, false);\n              el.dispatchEvent(event);\n            } else {\n              el.fireEvent('on' + eventName);\n            }\n          });\n        },\n        //DOM NODE INSERTING / REMOVING:\n        append: function append(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforeend', child);\n          });\n        },\n        prepend: function prepend(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterbegin', child);\n          });\n        },\n        before: function before(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforebegin', child);\n          });\n        },\n        after: function after(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterend', child);\n          });\n        },\n        remove: function remove() {\n          return this.each(function () {\n            var el = this;\n            var parentNode = el.parentNode;\n            if (parentNode != null) parentNode.removeChild(el);\n          });\n        },\n        unwrap: function unwrap() {\n          var parents = [];\n          var i;\n          var el;\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (inArray(parent, parents) === -1) parents.push(parent);\n          });\n\n          for (i = 0; i < parents[LEXICON.l]; i++) {\n            el = parents[i];\n            parent = el.parentNode;\n\n            while (el.firstChild) {\n              parent.insertBefore(el.firstChild, el);\n            }\n\n            parent.removeChild(el);\n          }\n\n          return this;\n        },\n        wrapAll: function wrapAll(wrapperHTML) {\n          var i;\n          var nodes = this;\n          var wrapper = FakejQuery(wrapperHTML)[0];\n          var deepest = wrapper;\n          var parent = nodes[0].parentNode;\n          var previousSibling = nodes[0].previousSibling;\n\n          while (deepest.childNodes[LEXICON.l] > 0) {\n            deepest = deepest.childNodes[0];\n          }\n\n          for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n            deepest.appendChild(nodes[i]);\n          }\n\n          var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n          parent.insertBefore(wrapper, nextSibling);\n          return this;\n        },\n        wrapInner: function wrapInner(wrapperHTML) {\n          return this.each(function () {\n            var el = FakejQuery(this);\n            var contents = el.contents();\n            if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n          });\n        },\n        wrap: function wrap(wrapperHTML) {\n          return this.each(function () {\n            FakejQuery(this).wrapAll(wrapperHTML);\n          });\n        },\n        //DOM NODE MANIPULATION / INFORMATION:\n        css: function css(styles, val) {\n          var el;\n          var key;\n          var cptStyle;\n          var getCptStyle = window.getComputedStyle;\n\n          if (_type(styles) == TYPES.s) {\n            if (val === undefined$1) {\n              el = this[0];\n              cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n              return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n            } else {\n              return this.each(function () {\n                setCSSVal(this, styles, val);\n              });\n            }\n          } else {\n            return this.each(function () {\n              for (key in styles) {\n                setCSSVal(this, key, styles[key]);\n              }\n            });\n          }\n        },\n        hasClass: function hasClass(className) {\n          var elem,\n              i = 0;\n          var classNamePrepared = _strSpace + className + _strSpace;\n          var classList;\n\n          while (elem = this[i++]) {\n            classList = elem.classList;\n            if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n          }\n\n          return false;\n        },\n        addClass: function addClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.add(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        removeClass: function removeClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.remove(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                      cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                    }\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        hide: function hide() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'none';\n          });\n        },\n        show: function show() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'block';\n          });\n        },\n        attr: function attr(attrName, value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el.getAttribute(attrName);\n            el.setAttribute(attrName, value);\n          }\n\n          return this;\n        },\n        removeAttr: function removeAttr(attrName) {\n          return this.each(function () {\n            this.removeAttribute(attrName);\n          });\n        },\n        offset: function offset() {\n          var el = this[0];\n          var rect = el[LEXICON.bCR]();\n          var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n          var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n          return {\n            top: rect.top + scrollTop,\n            left: rect.left + scrollLeft\n          };\n        },\n        position: function position() {\n          var el = this[0];\n          return {\n            top: el.offsetTop,\n            left: el.offsetLeft\n          };\n        },\n        scrollLeft: function scrollLeft(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollLeft];\n            el[_strScrollLeft] = value;\n          }\n\n          return this;\n        },\n        scrollTop: function scrollTop(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollTop];\n            el[_strScrollTop] = value;\n          }\n\n          return this;\n        },\n        val: function val(value) {\n          var el = this[0];\n          if (!value) return el.value;\n          el.value = value;\n          return this;\n        },\n        //DOM TRAVERSAL / FILTERING:\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(index) {\n          return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n        },\n        find: function find(selector) {\n          var children = [];\n          var i;\n          this.each(function () {\n            var el = this;\n            var ch = el.querySelectorAll(selector);\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              children.push(ch[i]);\n            }\n          });\n          return FakejQuery(children);\n        },\n        children: function children(selector) {\n          var children = [];\n          var el;\n          var ch;\n          var i;\n          this.each(function () {\n            ch = this.children;\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              el = ch[i];\n\n              if (selector) {\n                if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n              } else children.push(el);\n            }\n          });\n          return FakejQuery(children);\n        },\n        parent: function parent(selector) {\n          var parents = [];\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n          });\n          return FakejQuery(parents);\n        },\n        is: function is(selector) {\n          var el;\n          var i;\n\n          for (i = 0; i < this[LEXICON.l]; i++) {\n            el = this[i];\n            if (selector === ':visible') return elementIsVisible(el);\n            if (selector === ':hidden') return !elementIsVisible(el);\n            if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n          }\n\n          return false;\n        },\n        contents: function contents() {\n          var contents = [];\n          var childs;\n          var i;\n          this.each(function () {\n            childs = this.childNodes;\n\n            for (i = 0; i < childs[LEXICON.l]; i++) {\n              contents.push(childs[i]);\n            }\n          });\n          return FakejQuery(contents);\n        },\n        each: function each(callback) {\n          return _each(this, callback);\n        },\n        //ANIMATION:\n        animate: function animate(props, duration, easing, complete) {\n          return this.each(function () {\n            _animate(this, props, duration, easing, complete);\n          });\n        },\n        stop: function stop(clearQ, jump) {\n          return this.each(function () {\n            _stop(this, clearQ, jump);\n          });\n        }\n      };\n      extend(FakejQuery, {\n        extend: extend,\n        inArray: inArray,\n        isEmptyObject: isEmptyObject,\n        isPlainObject: isPlainObject,\n        each: _each\n      });\n      return FakejQuery;\n    }();\n\n    var INSTANCES = function () {\n      var _targets = [];\n      var _instancePropertyString = '__overlayScrollbars__';\n      /**\r\n       * Register, unregister or get a certain (or all) instances.\r\n       * Register: Pass the target and the instance.\r\n       * Unregister: Pass the target and null.\r\n       * Get Instance: Pass the target from which the instance shall be got.\r\n       * Get Targets: Pass no arguments.\r\n       * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n       * @param instance The instance.\r\n       * @returns {*|void} Returns the instance from the given target.\r\n       */\n\n      return function (target, instance) {\n        var argLen = arguments[LEXICON.l];\n\n        if (argLen < 1) {\n          //return all targets\n          return _targets;\n        } else {\n          if (instance) {\n            //register instance\n            target[_instancePropertyString] = instance;\n\n            _targets.push(target);\n          } else {\n            var index = COMPATIBILITY.inA(target, _targets);\n\n            if (index > -1) {\n              if (argLen > 1) {\n                //unregister instance\n                delete target[_instancePropertyString];\n\n                _targets.splice(index, 1);\n              } else {\n                //get instance from target\n                return _targets[index][_instancePropertyString];\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var PLUGIN = function () {\n      var _plugin;\n\n      var _pluginsGlobals;\n\n      var _pluginsAutoUpdateLoop;\n\n      var _pluginsExtensions = [];\n\n      var _pluginsOptions = function () {\n        var type = COMPATIBILITY.type;\n        var possibleTemplateTypes = [TYPES.b, //boolean\n        TYPES.n, //number\n        TYPES.s, //string\n        TYPES.a, //array\n        TYPES.o, //object\n        TYPES.f, //function\n        TYPES.z //null\n        ];\n        var restrictedStringsSplit = ' ';\n        var restrictedStringsPossibilitiesSplit = ':';\n        var classNameAllowedValues = [TYPES.z, TYPES.s];\n        var numberAllowedValues = TYPES.n;\n        var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n        var booleanTrueTemplate = [true, TYPES.b];\n        var booleanFalseTemplate = [false, TYPES.b];\n        var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n        var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n        var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n        var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n        var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n        var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n        var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n        var optionsDefaultsAndTemplate = {\n          className: ['os-theme-dark', classNameAllowedValues],\n          //null || string\n          resize: ['none', resizeAllowedValues],\n          //none || both  || horizontal || vertical || n || b || h || v\n          sizeAutoCapable: booleanTrueTemplate,\n          //true || false\n          clipAlways: booleanTrueTemplate,\n          //true || false\n          normalizeRTL: booleanTrueTemplate,\n          //true || false\n          paddingAbsolute: booleanFalseTemplate,\n          //true || false\n          autoUpdate: [null, booleanNullAllowedValues],\n          //true || false || null\n          autoUpdateInterval: [33, numberAllowedValues],\n          //number\n          updateOnLoad: updateOnLoadTemplate,\n          //string || array || null\n          nativeScrollbarsOverlaid: {\n            showNativeScrollbars: booleanFalseTemplate,\n            //true || false\n            initialize: booleanTrueTemplate //true || false\n\n          },\n          overflowBehavior: {\n            x: ['scroll', overflowBehaviorAllowedValues],\n            //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n            y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n\n          },\n          scrollbars: {\n            visibility: ['auto', scrollbarsVisibilityAllowedValues],\n            //visible || hidden || auto || v || h || a\n            autoHide: ['never', scrollbarsAutoHideAllowedValues],\n            //never || scroll || leave || move || n || s || l || m\n            autoHideDelay: [800, numberAllowedValues],\n            //number\n            dragScrolling: booleanTrueTemplate,\n            //true || false\n            clickScrolling: booleanFalseTemplate,\n            //true || false\n            touchSupport: booleanTrueTemplate,\n            //true || false\n            snapHandle: booleanFalseTemplate //true || false\n\n          },\n          textarea: {\n            dynWidth: booleanFalseTemplate,\n            //true || false\n            dynHeight: booleanFalseTemplate,\n            //true || false\n            inheritedAttrs: inheritedAttrsTemplate //string || array || null\n\n          },\n          callbacks: {\n            onInitialized: callbackTemplate,\n            //null || function\n            onInitializationWithdrawn: callbackTemplate,\n            //null || function\n            onDestroyed: callbackTemplate,\n            //null || function\n            onScrollStart: callbackTemplate,\n            //null || function\n            onScroll: callbackTemplate,\n            //null || function\n            onScrollStop: callbackTemplate,\n            //null || function\n            onOverflowChanged: callbackTemplate,\n            //null || function\n            onOverflowAmountChanged: callbackTemplate,\n            //null || function\n            onDirectionChanged: callbackTemplate,\n            //null || function\n            onContentSizeChanged: callbackTemplate,\n            //null || function\n            onHostSizeChanged: callbackTemplate,\n            //null || function\n            onUpdated: callbackTemplate //null || function\n\n          }\n        };\n\n        var convert = function convert(template) {\n          var recursive = function recursive(obj) {\n            var key;\n            var val;\n            var valType;\n\n            for (key in obj) {\n              if (!obj[LEXICON.hOP](key)) continue;\n              val = obj[key];\n              valType = type(val);\n              if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n            }\n\n            return obj;\n          };\n\n          return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n        };\n\n        return {\n          _defaults: convert(),\n          _template: convert(true),\n\n          /**\r\n           * Validates the passed object by the passed template.\r\n           * @param obj The object which shall be validated.\r\n           * @param template The template which defines the allowed values and types.\r\n           * @param writeErrors True if errors shall be logged to the console.\r\n           * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n           * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n           */\n          _validate: function _validate(obj, template, writeErrors, diffObj) {\n            var validatedOptions = {};\n            var validatedOptionsPrepared = {};\n            var objectCopy = FRAMEWORK.extend(true, {}, obj);\n            var inArray = FRAMEWORK.inArray;\n            var isEmptyObj = FRAMEWORK.isEmptyObject;\n\n            var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n              for (var prop in template) {\n                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                  var isValid = false;\n                  var isDiff = false;\n                  var templateValue = template[prop];\n                  var templateValueType = type(templateValue);\n                  var templateIsComplex = templateValueType == TYPES.o;\n                  var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                  var dataDiffValue = diffData[prop];\n                  var dataValue = data[prop];\n                  var dataValueType = type(dataValue);\n                  var propPrefix = prevPropName ? prevPropName + '.' : '';\n                  var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                  var errorPossibleTypes = [];\n                  var errorRestrictedStrings = [];\n                  var restrictedStringValuesSplit;\n                  var restrictedStringValuesPossibilitiesSplit;\n                  var isRestrictedValue;\n                  var mainPossibility;\n                  var currType;\n                  var i;\n                  var v;\n                  var j;\n                  dataDiffValue = dataDiffValue === undefined$1 ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                  if (templateIsComplex && dataValueType == TYPES.o) {\n                    validatedOptions[prop] = {};\n                    validatedOptionsPrepared[prop] = {};\n                    checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                    FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                      if (isEmptyObj(value[prop])) {\n                        delete value[prop];\n                      }\n                    });\n                  } else if (!templateIsComplex) {\n                    for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                      currType = templateTypes[i];\n                      templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                      isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n\n                      if (isRestrictedValue) {\n                        errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                        restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                        errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n\n                        for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                          //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                          restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                          mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n\n                          for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                            //if any possibility matches with the dataValue, its valid\n                            if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                              isValid = true;\n                              break;\n                            }\n                          }\n\n                          if (isValid) break;\n                        }\n                      } else {\n                        errorPossibleTypes.push(currType);\n\n                        if (dataValueType === currType) {\n                          isValid = true;\n                          break;\n                        }\n                      }\n                    }\n\n                    if (isValid) {\n                      isDiff = dataValue !== dataDiffValue;\n                      if (isDiff) validatedOptions[prop] = dataValue;\n                      if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                    } else if (writeErrors) {\n                      console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                    }\n\n                    delete data[prop];\n                  }\n                }\n              }\n            };\n\n            checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n            /*\r\n            if(keepForeignProps) {\r\n                FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n            }\r\n            */\n\n            if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n            return {\n              _default: validatedOptions,\n              _prepared: validatedOptionsPrepared\n            };\n          }\n        };\n      }();\n      /**\r\n       * Initializes the object which contains global information about the plugin and each instance of it.\r\n       */\n\n\n      function initOverlayScrollbarsStatics() {\n        if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n        if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n      }\n      /**\r\n       * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @param defaultOptions\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsGlobals(defaultOptions) {\n        var _base = this;\n\n        var strOverflow = 'overflow';\n        var strHidden = 'hidden';\n        var strScroll = 'scroll';\n        var bodyElement = FRAMEWORK('body');\n        var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n        var scrollbarDummyElement0 = scrollbarDummyElement[0];\n        var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n        bodyElement.append(scrollbarDummyElement);\n        scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n        var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n        var nativeScrollbarIsOverlaid = {\n          x: nativeScrollbarSize.x === 0,\n          y: nativeScrollbarSize.y === 0\n        };\n\n        var msie = function () {\n          var ua = window.navigator.userAgent;\n          var strIndexOf = 'indexOf';\n          var strSubString = 'substring';\n          var msie = ua[strIndexOf]('MSIE ');\n          var trident = ua[strIndexOf]('Trident/');\n          var edge = ua[strIndexOf]('Edge/');\n          var rv = ua[strIndexOf]('rv:');\n          var result;\n          var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n          if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n          else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n          return result;\n        }();\n\n        FRAMEWORK.extend(_base, {\n          defaultOptions: defaultOptions,\n          msie: msie,\n          autoUpdateLoop: false,\n          autoUpdateRecommended: !COMPATIBILITY.mO(),\n          nativeScrollbarSize: nativeScrollbarSize,\n          nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n          nativeScrollbarStyling: function () {\n            var result = false;\n            scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n\n            try {\n              result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n            } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n            //and set overflow to scroll\n            //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n            //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n\n            return result;\n          }(),\n          overlayScrollbarDummySize: {\n            x: 30,\n            y: 30\n          },\n          cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n          restrictedMeasuring: function () {\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n            //since 1.11.0 always false -> fixed via CSS (hopefully)\n            scrollbarDummyElement.css(strOverflow, strHidden);\n            var scrollSize = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            scrollbarDummyElement.css(strOverflow, 'visible');\n            var scrollSize2 = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n          }(),\n          rtlScrollBehavior: function () {\n            scrollbarDummyElement.css({\n              'overflow-y': strHidden,\n              'overflow-x': strScroll,\n              'direction': 'rtl'\n            }).scrollLeft(0);\n            var dummyContainerOffset = scrollbarDummyElement.offset();\n            var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n            scrollbarDummyElement.scrollLeft(-999);\n            var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n            return {\n              //origin direction = determines if the zero scroll position is on the left or right side\n              //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n              //true = on the left side\n              //false = on the right side\n              i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n              //negative = determines if the maximum scroll is positive or negative\n              //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n              //true = negative\n              //false = positive\n              n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n            };\n          }(),\n          supportTransform: !!VENDORS._cssProperty('transform'),\n          supportTransition: !!VENDORS._cssProperty('transition'),\n          supportPassiveEvents: function () {\n            var supportsPassive = false;\n\n            try {\n              window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: function get() {\n                  supportsPassive = true;\n                }\n              }));\n            } catch (e) {}\n\n            return supportsPassive;\n          }(),\n          supportResizeObserver: !!COMPATIBILITY.rO(),\n          supportMutationObserver: !!COMPATIBILITY.mO()\n        });\n        scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n        (function () {\n          if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n          var abs = MATH.abs;\n          var windowWidth = COMPATIBILITY.wW();\n          var windowHeight = COMPATIBILITY.wH();\n          var windowDpr = getWindowDPR();\n\n          var onResize = function onResize() {\n            if (INSTANCES().length > 0) {\n              var newW = COMPATIBILITY.wW();\n              var newH = COMPATIBILITY.wH();\n              var deltaW = newW - windowWidth;\n              var deltaH = newH - windowHeight;\n              if (deltaW === 0 && deltaH === 0) return;\n              var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n              var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n              var absDeltaW = abs(deltaW);\n              var absDeltaH = abs(deltaH);\n              var absDeltaWRatio = abs(deltaWRatio);\n              var absDeltaHRatio = abs(deltaHRatio);\n              var newDPR = getWindowDPR();\n              var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n              var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n              var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n              var isZoom = deltaIsBigger && difference && dprChanged;\n              var oldScrollbarSize = _base.nativeScrollbarSize;\n              var newScrollbarSize;\n\n              if (isZoom) {\n                bodyElement.append(scrollbarDummyElement);\n                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n                scrollbarDummyElement.remove();\n\n                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                  FRAMEWORK.each(INSTANCES(), function () {\n                    if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                  });\n                }\n              }\n\n              windowWidth = newW;\n              windowHeight = newH;\n              windowDpr = newDPR;\n            }\n          };\n\n          function differenceIsBiggerThanOne(valOne, valTwo) {\n            var absValOne = abs(valOne);\n            var absValTwo = abs(valTwo);\n            return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n          }\n\n          function getWindowDPR() {\n            var dDPI = window.screen.deviceXDPI || 0;\n            var sDPI = window.screen.logicalXDPI || 1;\n            return window.devicePixelRatio || dDPI / sDPI;\n          }\n\n          FRAMEWORK(window).on('resize', onResize);\n        })();\n\n        function calcNativeScrollbarSize(measureElement) {\n          return {\n            x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n            y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n          };\n        }\n      }\n      /**\r\n       * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsAutoUpdateLoop(globals) {\n        var _base = this;\n\n        var _inArray = FRAMEWORK.inArray;\n        var _getNow = COMPATIBILITY.now;\n        var _strAutoUpdate = 'autoUpdate';\n\n        var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n\n        var _strLength = LEXICON.l;\n        var _loopingInstances = [];\n        var _loopingInstancesIntervalCache = [];\n        var _loopIsActive = false;\n        var _loopIntervalDefault = 33;\n        var _loopInterval = _loopIntervalDefault;\n\n        var _loopTimeOld = _getNow();\n\n        var _loopID;\n        /**\r\n         * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n         */\n\n\n        var loop = function loop() {\n          if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n            _loopID = COMPATIBILITY.rAF()(function () {\n              loop();\n            });\n\n            var timeNew = _getNow();\n\n            var timeDelta = timeNew - _loopTimeOld;\n            var lowestInterval;\n            var instance;\n            var instanceOptions;\n            var instanceAutoUpdateAllowed;\n            var instanceAutoUpdateInterval;\n            var now;\n\n            if (timeDelta > _loopInterval) {\n              _loopTimeOld = timeNew - timeDelta % _loopInterval;\n              lowestInterval = _loopIntervalDefault;\n\n              for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n                instance = _loopingInstances[i];\n\n                if (instance !== undefined$1) {\n                  instanceOptions = instance.options();\n                  instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                  instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                  now = _getNow();\n\n                  if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                    instance.update('auto');\n                    _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                  }\n\n                  lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n                }\n              }\n\n              _loopInterval = lowestInterval;\n            }\n          } else {\n            _loopInterval = _loopIntervalDefault;\n          }\n        };\n        /**\r\n         * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.add = function (instance) {\n          if (_inArray(instance, _loopingInstances) === -1) {\n            _loopingInstances.push(instance);\n\n            _loopingInstancesIntervalCache.push(_getNow());\n\n            if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n              _loopIsActive = true;\n              globals.autoUpdateLoop = _loopIsActive;\n              loop();\n            }\n          }\n        };\n        /**\r\n         * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.remove = function (instance) {\n          var index = _inArray(instance, _loopingInstances);\n\n          if (index > -1) {\n            //remove from loopingInstances list\n            _loopingInstancesIntervalCache.splice(index, 1);\n\n            _loopingInstances.splice(index, 1); //correct update loop behavior\n\n\n            if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n              _loopIsActive = false;\n              globals.autoUpdateLoop = _loopIsActive;\n\n              if (_loopID !== undefined$1) {\n                COMPATIBILITY.cAF()(_loopID);\n                _loopID = -1;\n              }\n            }\n          }\n        };\n      }\n      /**\r\n       * A object which manages the scrollbars visibility of the target element.\r\n       * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n       * @param options The custom options.\r\n       * @param extensions The custom extensions.\r\n       * @param globals\r\n       * @param autoUpdateLoop\r\n       * @returns {*}\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n        //shortcuts\n        var type = COMPATIBILITY.type;\n        var inArray = FRAMEWORK.inArray;\n        var each = FRAMEWORK.each; //make correct instanceof\n\n        var _base = new _plugin();\n\n        var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n        if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n        if (INSTANCES(pluginTargetElement)) {\n          var inst = INSTANCES(pluginTargetElement);\n          inst.options(options);\n          return inst;\n        } //globals:\n\n\n        var _nativeScrollbarIsOverlaid;\n\n        var _overlayScrollbarDummySize;\n\n        var _rtlScrollBehavior;\n\n        var _autoUpdateRecommended;\n\n        var _msieVersion;\n\n        var _nativeScrollbarStyling;\n\n        var _cssCalc;\n\n        var _nativeScrollbarSize;\n\n        var _supportTransition;\n\n        var _supportTransform;\n\n        var _supportPassiveEvents;\n\n        var _supportResizeObserver;\n\n        var _supportMutationObserver;\n\n        var _initialized;\n\n        var _destroyed;\n\n        var _isTextarea;\n\n        var _isBody;\n\n        var _documentMixed;\n\n        var _domExists; //general:\n\n\n        var _isBorderBox;\n\n        var _sizeAutoObserverAdded;\n\n        var _paddingX;\n\n        var _paddingY;\n\n        var _borderX;\n\n        var _borderY;\n\n        var _marginX;\n\n        var _marginY;\n\n        var _isRTL;\n\n        var _sleeping;\n\n        var _contentBorderSize = {};\n        var _scrollHorizontalInfo = {};\n        var _scrollVerticalInfo = {};\n        var _viewportSize = {};\n        var _nativeScrollbarMinSize = {}; //naming:\t\n\n        var _strMinusHidden = '-hidden';\n        var _strMarginMinus = 'margin-';\n        var _strPaddingMinus = 'padding-';\n        var _strBorderMinus = 'border-';\n        var _strTop = 'top';\n        var _strRight = 'right';\n        var _strBottom = 'bottom';\n        var _strLeft = 'left';\n        var _strMinMinus = 'min-';\n        var _strMaxMinus = 'max-';\n        var _strWidth = 'width';\n        var _strHeight = 'height';\n        var _strFloat = 'float';\n        var _strEmpty = '';\n        var _strAuto = 'auto';\n        var _strSync = 'sync';\n        var _strScroll = 'scroll';\n        var _strHundredPercent = '100%';\n        var _strX = 'x';\n        var _strY = 'y';\n        var _strDot = '.';\n        var _strSpace = ' ';\n        var _strScrollbar = 'scrollbar';\n        var _strMinusHorizontal = '-horizontal';\n        var _strMinusVertical = '-vertical';\n\n        var _strScrollLeft = _strScroll + 'Left';\n\n        var _strScrollTop = _strScroll + 'Top';\n\n        var _strMouseTouchDownEvent = 'mousedown touchstart';\n        var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n        var _strMouseTouchMoveEvent = 'mousemove touchmove';\n        var _strMouseEnter = 'mouseenter';\n        var _strMouseLeave = 'mouseleave';\n        var _strKeyDownEvent = 'keydown';\n        var _strKeyUpEvent = 'keyup';\n        var _strSelectStartEvent = 'selectstart';\n        var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n        var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n        var _cassNamesPrefix = 'os-';\n\n        var _classNameHTMLElement = _cassNamesPrefix + 'html';\n\n        var _classNameHostElement = _cassNamesPrefix + 'host';\n\n        var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n\n        var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n\n        var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n\n        var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n\n        var _classNameHostTransition = _classNameHostElement + '-transition';\n\n        var _classNameHostRTL = _classNameHostElement + '-rtl';\n\n        var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n\n        var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n\n        var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n\n        var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n\n        var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n\n        var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n\n        var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n\n        var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n\n        var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n\n        var _classNameContentElement = _cassNamesPrefix + 'content';\n\n        var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n\n        var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n\n        var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n\n        var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n\n        var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n\n        var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n\n        var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n\n        var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n\n        var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n\n        var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n\n        var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n\n        var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n\n        var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n\n        var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n\n        var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n\n        var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n\n        var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n\n        var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n\n        var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n\n        var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n\n        var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n\n        var _classNameDragging = _cassNamesPrefix + 'dragging';\n\n        var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n        var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n\n        var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n        var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n        var _defaultOptions;\n\n        var _currentOptions;\n\n        var _currentPreparedOptions; //extensions:\t\n\n\n        var _extensions = {};\n        var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n        var _lastUpdateTime;\n\n        var _swallowedUpdateHints = {};\n\n        var _swallowedUpdateTimeout;\n\n        var _swallowUpdateLag = 42;\n        var _updateOnLoadEventName = 'load';\n        var _updateOnLoadElms = []; //DOM elements:\t\n\n        var _windowElement;\n\n        var _documentElement;\n\n        var _htmlElement;\n\n        var _bodyElement;\n\n        var _targetElement; //the target element of this OverlayScrollbars object\t\n\n\n        var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n\n        var _sizeAutoObserverElement; //observes size auto changes\t\n\n\n        var _sizeObserverElement; //observes size and padding changes\t\n\n\n        var _paddingElement; //manages the padding\t\n\n\n        var _viewportElement; //is the viewport of our scrollbar model\t\n\n\n        var _contentElement; //the element which holds the content\t\n\n\n        var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n\n        var _contentGlueElement; //has always the size of the content element\t\n\n\n        var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n\n        var _scrollbarCornerElement;\n\n        var _scrollbarHorizontalElement;\n\n        var _scrollbarHorizontalTrackElement;\n\n        var _scrollbarHorizontalHandleElement;\n\n        var _scrollbarVerticalElement;\n\n        var _scrollbarVerticalTrackElement;\n\n        var _scrollbarVerticalHandleElement;\n\n        var _windowElementNative;\n\n        var _documentElementNative;\n\n        var _targetElementNative;\n\n        var _hostElementNative;\n\n        var _sizeAutoObserverElementNative;\n\n        var _sizeObserverElementNative;\n\n        var _paddingElementNative;\n\n        var _viewportElementNative;\n\n        var _contentElementNative; //Cache:\t\n\n\n        var _hostSizeCache;\n\n        var _contentScrollSizeCache;\n\n        var _arrangeContentSizeCache;\n\n        var _hasOverflowCache;\n\n        var _hideOverflowCache;\n\n        var _widthAutoCache;\n\n        var _heightAutoCache;\n\n        var _cssBoxSizingCache;\n\n        var _cssPaddingCache;\n\n        var _cssBorderCache;\n\n        var _cssMarginCache;\n\n        var _cssDirectionCache;\n\n        var _cssDirectionDetectedCache;\n\n        var _paddingAbsoluteCache;\n\n        var _clipAlwaysCache;\n\n        var _contentGlueSizeCache;\n\n        var _overflowBehaviorCache;\n\n        var _overflowAmountCache;\n\n        var _ignoreOverlayScrollbarHidingCache;\n\n        var _autoUpdateCache;\n\n        var _sizeAutoCapableCache;\n\n        var _contentElementScrollSizeChangeDetectedCache;\n\n        var _hostElementSizeChangeDetectedCache;\n\n        var _scrollbarsVisibilityCache;\n\n        var _scrollbarsAutoHideCache;\n\n        var _scrollbarsClickScrollingCache;\n\n        var _scrollbarsDragScrollingCache;\n\n        var _resizeCache;\n\n        var _normalizeRTLCache;\n\n        var _classNameCache;\n\n        var _oldClassName;\n\n        var _textareaAutoWrappingCache;\n\n        var _textareaInfoCache;\n\n        var _textareaSizeCache;\n\n        var _textareaDynHeightCache;\n\n        var _textareaDynWidthCache;\n\n        var _bodyMinSizeCache;\n\n        var _updateAutoCache = {}; //MutationObserver:\t\n\n        var _mutationObserverHost;\n\n        var _mutationObserverContent;\n\n        var _mutationObserverHostCallback;\n\n        var _mutationObserverContentCallback;\n\n        var _mutationObserversConnected;\n\n        var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n\n        var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n\n        var _destroyEvents = []; //textarea:\t\n\n        var _textareaHasFocus; //scrollbars:\t\n\n\n        var _scrollbarsAutoHideTimeoutId;\n\n        var _scrollbarsAutoHideMoveTimeoutId;\n\n        var _scrollbarsAutoHideDelay;\n\n        var _scrollbarsAutoHideNever;\n\n        var _scrollbarsAutoHideScroll;\n\n        var _scrollbarsAutoHideMove;\n\n        var _scrollbarsAutoHideLeave;\n\n        var _scrollbarsHandleHovered;\n\n        var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n\n        var _resizeNone;\n\n        var _resizeBoth;\n\n        var _resizeHorizontal;\n\n        var _resizeVertical; //==== Event Listener ====//\t\n\n        /**\t\r\n         * Adds or removes a event listener from the given element. \t\r\n         * @param element The element to which the event listener shall be applied or removed.\t\r\n         * @param eventNames The name(s) of the events.\t\r\n         * @param listener The method which shall be called.\t\r\n         * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n         * @param passiveOrOptions The options for the event.\r\n         */\n\n\n        function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n          var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n          var method = remove ? 'removeEventListener' : 'addEventListener';\n          var onOff = remove ? 'off' : 'on';\n          var events = collected ? false : eventNames.split(_strSpace);\n          var i = 0;\n          var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n          var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n          var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n          var nativeParam = _supportPassiveEvents ? {\n            passive: passive,\n            capture: capture\n          } : capture;\n\n          if (collected) {\n            for (; i < eventNames[LEXICON.l]; i++) {\n              setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n            }\n          } else {\n            for (; i < events[LEXICON.l]; i++) {\n              if (_supportPassiveEvents) {\n                element[0][method](events[i], listener, nativeParam);\n              } else {\n                element[onOff](events[i], listener);\n              }\n            }\n          }\n        }\n\n        function addDestroyEventListener(element, eventNames, listener, passive) {\n          setupResponsiveEventListener(element, eventNames, listener, false, passive);\n\n          _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n        } //==== Resize Observer ====//\n\n        /**\r\n         * Adds or removes a resize observer from the given element.\r\n         * @param targetElement The element to which the resize observer shall be added or removed.\r\n         * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n         */\n\n\n        function setupResizeObserver(targetElement, onElementResizedCallback) {\n          if (targetElement) {\n            var resizeObserver = COMPATIBILITY.rO();\n            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n            var strChildNodes = 'childNodes';\n            var constScroll = 3333333;\n\n            var callback = function callback() {\n              targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n\n              onElementResizedCallback();\n            }; //add resize observer:\n\n\n            if (onElementResizedCallback) {\n              if (_supportResizeObserver) {\n                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n                observer.observe(element);\n              } else {\n                if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                    c: _classNameResizeObserverItemElement,\n                    dir: 'ltr'\n                  }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                    c: _classNameResizeObserverItemFinalElement,\n                    style: 'width: 200%; height: 200%'\n                  })))));\n                  var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                  var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                  var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                  var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                  var widthCache = observerElement[LEXICON.oW];\n                  var heightCache = observerElement[LEXICON.oH];\n                  var isDirty;\n                  var rAFId;\n                  var currWidth;\n                  var currHeight;\n                  var factor = 2;\n                  var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                  var reset = function reset() {\n                    /*\r\n                     var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var expandChildCSS = {};\r\n                     expandChildCSS[_strWidth] = sizeResetWidth;\r\n                     expandChildCSS[_strHeight] = sizeResetHeight;\r\n                     expandElementChild.css(expandChildCSS);\r\n                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     */\n                    expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n\n                    shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                  };\n\n                  var onResized = function onResized() {\n                    rAFId = 0;\n                    if (!isDirty) return;\n                    widthCache = currWidth;\n                    heightCache = currHeight;\n                    callback();\n                  };\n\n                  var onScroll = function onScroll(event) {\n                    currWidth = observerElement[LEXICON.oW];\n                    currHeight = observerElement[LEXICON.oH];\n                    isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                    if (event && isDirty && !rAFId) {\n                      COMPATIBILITY.cAF()(rAFId);\n                      rAFId = COMPATIBILITY.rAF()(onResized);\n                    } else if (!event) onResized();\n\n                    reset();\n\n                    if (event) {\n                      COMPATIBILITY.prvD(event);\n                      COMPATIBILITY.stpP(event);\n                    }\n\n                    return false;\n                  };\n\n                  var expandChildCSS = {};\n                  var observerElementCSS = {};\n                  setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                  FRAMEWORK(observerElement).css(observerElementCSS);\n                  expandElement.on(_strScroll, onScroll);\n                  shrinkElement.on(_strScroll, onScroll);\n                  targetElement.on(strAnimationStartEvent, function () {\n                    onScroll(false);\n                  }); //lets assume that the divs will never be that large and a constant value is enough\n\n                  expandChildCSS[_strWidth] = constScroll;\n                  expandChildCSS[_strHeight] = constScroll;\n                  expandElementChild.css(expandChildCSS);\n                  reset();\n                } else {\n                  var attachEvent = _documentElementNative.attachEvent;\n                  var isIE = _msieVersion !== undefined$1;\n\n                  if (attachEvent) {\n                    targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                    findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                  } else {\n                    var obj = _documentElementNative.createElement(TYPES.o);\n\n                    obj.setAttribute(LEXICON.ti, '-1');\n                    obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n\n                    obj.onload = function () {\n                      var wnd = this.contentDocument.defaultView;\n                      wnd.addEventListener('resize', callback);\n                      wnd.document.documentElement.style.display = 'none';\n                    };\n\n                    obj.type = 'text/html';\n                    if (isIE) targetElement.prepend(obj);\n                    obj.data = 'about:blank';\n                    if (!isIE) targetElement.prepend(obj);\n                    targetElement.on(strAnimationStartEvent, callback);\n                  }\n                }\n              }\n\n              if (targetElement[0] === _sizeObserverElementNative) {\n                var directionChanged = function directionChanged() {\n                  var dir = _hostElement.css('direction');\n\n                  var css = {};\n                  var scrollLeftValue = 0;\n                  var result = false;\n\n                  if (dir !== _cssDirectionDetectedCache) {\n                    if (dir === 'ltr') {\n                      css[_strLeft] = 0;\n                      css[_strRight] = _strAuto;\n                      scrollLeftValue = constScroll;\n                    } else {\n                      css[_strLeft] = _strAuto;\n                      css[_strRight] = 0;\n                      scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                    } //execution order is important for IE!!!\n\n\n                    _sizeObserverElement.children().eq(0).css(css);\n\n                    _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n\n                    _cssDirectionDetectedCache = dir;\n                    result = true;\n                  }\n\n                  return result;\n                };\n\n                directionChanged();\n                addDestroyEventListener(targetElement, _strScroll, function (event) {\n                  if (directionChanged()) update();\n                  COMPATIBILITY.prvD(event);\n                  COMPATIBILITY.stpP(event);\n                  return false;\n                });\n              }\n            } //remove resize observer:\n            else {\n              if (_supportResizeObserver) {\n                var element = targetElement.contents()[0];\n                var resizeObserverObj = element[_strResizeObserverProperty];\n\n                if (resizeObserverObj) {\n                  resizeObserverObj.disconnect();\n                  delete element[_strResizeObserverProperty];\n                }\n              } else {\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n              }\n            }\n          }\n        }\n        /**\r\n         * Freezes or unfreezes the given resize observer.\r\n         * @param targetElement The element to which the target resize observer is applied.\r\n         * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n         \r\n        function freezeResizeObserver(targetElement, freeze) {\r\n            if (targetElement !== undefined) {\r\n                if(freeze) {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].unobserve(element);\r\n                    }\r\n                    else {\r\n                        targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                        var w = targetElement.css(_strWidth);\r\n                        var h = targetElement.css(_strHeight);\r\n                        var css = {};\r\n                        css[_strWidth] = w;\r\n                        css[_strHeight] = h;\r\n                        targetElement.css(css);\r\n                    }\r\n                }\r\n                else {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].observe(element);\r\n                    }\r\n                    else {\r\n                        var css = { };\r\n                        css[_strHeight] = _strEmpty;\r\n                        css[_strWidth] = _strEmpty;\r\n                        targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        */\n        //==== Mutation Observers ====//\n\n        /**\r\n         * Creates MutationObservers for the host and content Element if they are supported.\r\n         */\n\n\n        function createMutationObservers() {\n          if (_supportMutationObserver) {\n            var mutationObserverContentLag = 11;\n            var mutationObserver = COMPATIBILITY.mO();\n            var contentLastUpdate = COMPATIBILITY.now();\n            var mutationTarget;\n            var mutationAttrName;\n            var mutationIsClass;\n            var oldMutationVal;\n            var newClassVal;\n            var hostClassNameRegex;\n            var contentTimeout;\n            var now;\n            var sizeAuto;\n            var action;\n\n            _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n              var doUpdate = false;\n              var doUpdateForce = false;\n              var mutation;\n              var mutatedAttrs = [];\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  mutationTarget = mutation.target;\n                  mutationAttrName = mutation.attributeName;\n                  mutationIsClass = mutationAttrName === LEXICON.c;\n                  oldMutationVal = mutation.oldValue;\n                  newClassVal = mutationTarget.className;\n\n                  if (_domExists && mutationIsClass && !doUpdateForce) {\n                    // if old class value contains _classNameHostElementForeign and new class value doesn't\n                    if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                      hostClassNameRegex = createHostClassNameRegExp(true);\n                      _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                        return name.match(hostClassNameRegex);\n                      })).join(_strSpace);\n                      doUpdate = doUpdateForce = true;\n                    }\n                  }\n\n                  if (!doUpdate) {\n                    doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                  }\n\n                  mutatedAttrs.push(mutationAttrName);\n                });\n                updateViewportAttrsFromTarget(mutatedAttrs);\n                if (doUpdate) _base.update(doUpdateForce || _strAuto);\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n              var doUpdate = false;\n              var mutation;\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  doUpdate = isUnknownMutation(mutation);\n                  return !doUpdate;\n                });\n\n                if (doUpdate) {\n                  now = COMPATIBILITY.now();\n                  sizeAuto = _heightAutoCache || _widthAutoCache;\n\n                  action = function action() {\n                    if (!_destroyed) {\n                      contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                      if (_isTextarea) textareaUpdate();\n                      if (sizeAuto) update();else _base.update(_strAuto);\n                    }\n                  };\n\n                  clearTimeout(contentTimeout);\n                  if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n                }\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n            _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n          }\n        }\n        /**\r\n         * Connects the MutationObservers if they are supported.\r\n         */\n\n\n        function connectMutationObservers() {\n          if (_supportMutationObserver && !_mutationObserversConnected) {\n            _mutationObserverHost.observe(_hostElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              attributeFilter: _mutationObserverAttrsHost\n            });\n\n            _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              subtree: !_isTextarea,\n              childList: !_isTextarea,\n              characterData: !_isTextarea,\n              attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n            });\n\n            _mutationObserversConnected = true;\n          }\n        }\n        /**\r\n         * Disconnects the MutationObservers if they are supported.\r\n         */\n\n\n        function disconnectMutationObservers() {\n          if (_supportMutationObserver && _mutationObserversConnected) {\n            _mutationObserverHost.disconnect();\n\n            _mutationObserverContent.disconnect();\n\n            _mutationObserversConnected = false;\n          }\n        } //==== Events of elements ====//\n\n        /**\r\n         * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n         * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n         * If there are any size changes, the update method gets called.\r\n         */\n\n\n        function hostOnResized() {\n          if (!_sleeping) {\n            var changed;\n            var hostSize = {\n              w: _sizeObserverElementNative[LEXICON.sW],\n              h: _sizeObserverElementNative[LEXICON.sH]\n            };\n            changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n            _hostElementSizeChangeDetectedCache = hostSize;\n            if (changed) update({\n              _hostSizeChanged: true\n            });\n          }\n        }\n        /**\r\n         * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseEnter() {\n          if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n        }\n        /**\r\n         * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseLeave() {\n          if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n        }\n        /**\r\n         * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n         */\n\n\n        function hostOnMouseMove() {\n          if (_scrollbarsAutoHideMove) {\n            refreshScrollbarsAutoHide(true);\n            clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n            _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n              if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n            }, 100);\n          }\n        }\n        /**\r\n         * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n         * @param event The select start event.\r\n         */\n\n\n        function documentOnSelectStart(event) {\n          COMPATIBILITY.prvD(event);\n          return false;\n        }\n        /**\t\r\n         * A callback which will be called after a element has loaded.\t\r\n         */\n\n\n        function updateOnLoadCallback(event) {\n          var elm = FRAMEWORK(event.target);\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            if (elm.is(updateOnLoadSelector)) {\n              update({\n                _contentSizeChanged: true\n              });\n            }\n          });\n        }\n        /**\r\n        * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n        * @param destroy Indicates whether the events shall be added or removed.\r\n        */\n\n\n        function setupHostMouseTouchEvents(destroy) {\n          if (!destroy) setupHostMouseTouchEvents(true);\n          setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n          setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n          if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n        } //==== Update Detection ====//\n\n        /**\r\n         * Measures the min width and min height of the body element and refreshes the related cache.\r\n         * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n         */\n\n\n        function bodyMinSizeChanged() {\n          var bodyMinSize = {};\n\n          if (_isBody && _contentArrangeElement) {\n            bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n            bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n            bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n            bodyMinSize.f = true; //flag for \"measured at least once\"\n          }\n\n          _bodyMinSizeCache = bodyMinSize;\n          return !!bodyMinSize.c;\n        }\n        /**\r\n         * Returns true if the class names really changed (new class without plugin host prefix)\r\n         * @param oldClassNames The old ClassName string or array.\r\n         * @param newClassNames The new ClassName string or array.\r\n         * @returns {boolean} True if the class names has really changed, false otherwise.\r\n         */\n\n\n        function hostClassNamesChanged(oldClassNames, newClassNames) {\n          var currClasses = _typeof(newClassNames) == TYPES.s ? newClassNames.split(_strSpace) : [];\n          var oldClasses = _typeof(oldClassNames) == TYPES.s ? oldClassNames.split(_strSpace) : [];\n          var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n          var idx = inArray(_classNameThemeNone, diff);\n          var i;\n          var regex;\n          if (idx > -1) diff.splice(idx, 1);\n\n          if (diff[LEXICON.l] > 0) {\n            regex = createHostClassNameRegExp(true, true);\n\n            for (i = 0; i < diff.length; i++) {\n              if (!diff[i].match(regex)) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        }\n        /**\r\n         * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n         * @param mutation The mutation which shall be checked.\r\n         * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n         */\n\n\n        function isUnknownMutation(mutation) {\n          var attributeName = mutation.attributeName;\n          var mutationTarget = mutation.target;\n          var mutationType = mutation.type;\n          var strClosest = 'closest';\n          if (mutationTarget === _contentElementNative) return attributeName === null;\n\n          if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n            //ignore className changes by the plugin\t\n            if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n            if (_typeof(mutationTarget[strClosest]) != TYPES.f) return true;\n            if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n          }\n\n          return true;\n        }\n        /**\r\n         * Returns true if the content size was changed since the last time this method was called.\r\n         * @returns {boolean} True if the content size was changed, false otherwise.\r\n         */\n\n\n        function updateAutoContentSizeChanged() {\n          if (_sleeping) return false;\n          var contentMeasureElement = getContentMeasureElement();\n          var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n          var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n          var css = {};\n          var float;\n          var bodyMinSizeC;\n          var changed;\n          var contentElementScrollSize;\n\n          if (setCSS) {\n            float = _contentElement.css(_strFloat);\n            css[_strFloat] = _isRTL ? _strRight : _strLeft;\n            css[_strWidth] = _strAuto;\n\n            _contentElement.css(css);\n          }\n\n          contentElementScrollSize = {\n            w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n            h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n          };\n\n          if (setCSS) {\n            css[_strFloat] = float;\n            css[_strWidth] = _strHundredPercent;\n\n            _contentElement.css(css);\n          }\n\n          bodyMinSizeC = bodyMinSizeChanged();\n          changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n          _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n          return changed || bodyMinSizeC;\n        }\n        /**\r\n         * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n         * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n         */\n\n\n        function meaningfulAttrsChanged() {\n          if (_sleeping || _mutationObserversConnected) return;\n          var elem;\n          var curr;\n          var cache;\n          var changedAttrs = [];\n          var checks = [{\n            _elem: _hostElement,\n            _attrs: _mutationObserverAttrsHost.concat(':visible')\n          }, {\n            _elem: _isTextarea ? _targetElement : undefined$1,\n            _attrs: _mutationObserverAttrsTextarea\n          }];\n          each(checks, function (index, check) {\n            elem = check._elem;\n\n            if (elem) {\n              each(check._attrs, function (index, attr) {\n                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n                cache = _updateAutoCache[attr];\n\n                if (checkCache(curr, cache)) {\n                  changedAttrs.push(attr);\n                }\n\n                _updateAutoCache[attr] = curr;\n              });\n            }\n          });\n          updateViewportAttrsFromTarget(changedAttrs);\n          return changedAttrs[LEXICON.l] > 0;\n        }\n        /**\r\n         * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n         * @param propertyName The CSS property name.\r\n         * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n         */\n\n\n        function isSizeAffectingCSSProperty(propertyName) {\n          if (!_initialized) return true;\n          var flexGrow = 'flex-grow';\n          var flexShrink = 'flex-shrink';\n          var flexBasis = 'flex-basis';\n          var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n          var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n          var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n          var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n          var _strS = 's';\n          var _strVS = 'v-s';\n          var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n          var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n          var sizeIsAffected = false;\n\n          var checkPropertyName = function checkPropertyName(arr, name) {\n            for (var i = 0; i < arr[LEXICON.l]; i++) {\n              if (arr[i] === name) return true;\n            }\n\n            return false;\n          };\n\n          if (checkY) {\n            sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n          }\n\n          if (checkX && !sizeIsAffected) {\n            sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n          }\n\n          return sizeIsAffected;\n        } //==== Update ====//\n\n        /**\r\n         * Sets the attribute values of the viewport element to the values from the target element.\r\n         * The value of a attribute is only set if the attribute is whitelisted.\r\n         * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n         */\n\n\n        function updateViewportAttrsFromTarget(attrs) {\n          attrs = attrs || _viewportAttrsFromTarget;\n          each(attrs, function (index, attr) {\n            if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n              var targetAttr = _targetElement.attr(attr);\n\n              if (type(targetAttr) == TYPES.s) {\n                _viewportElement.attr(attr, targetAttr);\n              } else {\n                _viewportElement.removeAttr(attr);\n              }\n            }\n          });\n        }\n        /**\r\n         * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n         */\n\n\n        function textareaUpdate() {\n          if (!_sleeping) {\n            var wrapAttrOff = !_textareaAutoWrappingCache;\n            var minWidth = _viewportSize.w;\n            var minHeight = _viewportSize.h;\n            var css = {};\n            var doMeasure = _widthAutoCache || wrapAttrOff;\n            var origWidth;\n            var width;\n            var origHeight;\n            var height; //reset min size\n\n            css[_strMinMinus + _strWidth] = _strEmpty;\n            css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n            css[_strWidth] = _strAuto;\n\n            _targetElement.css(css); //measure width\n\n\n            origWidth = _targetElementNative[LEXICON.oW];\n            width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n            /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n            //set measured width\n\n            css[_strWidth] = _widthAutoCache ? _strAuto\n            /*width*/\n            : _strHundredPercent;\n            css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n            css[_strHeight] = _strAuto;\n\n            _targetElement.css(css); //measure height\n\n\n            origHeight = _targetElementNative[LEXICON.oH];\n            height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n            css[_strWidth] = width;\n            css[_strHeight] = height;\n\n            _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n\n            css[_strMinMinus + _strWidth] = minWidth\n            /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\n            ;\n            css[_strMinMinus + _strHeight] = minHeight\n            /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\n            ;\n\n            _targetElement.css(css);\n\n            return {\n              _originalWidth: origWidth,\n              _originalHeight: origHeight,\n              _dynamicWidth: width,\n              _dynamicHeight: height\n            };\n          }\n        }\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param updateHints A objects which contains hints for this update:\r\n         * {\r\n         *   _hostSizeChanged : boolean,\r\n         *   _contentSizeChanged : boolean,\r\n         *   _force : boolean,                             == preventSwallowing\r\n         *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n        *  }\r\n         */\n\n\n        function update(updateHints) {\n          clearTimeout(_swallowedUpdateTimeout);\n          updateHints = updateHints || {};\n          _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n          _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n          _swallowedUpdateHints._force |= updateHints._force;\n          var now = COMPATIBILITY.now();\n          var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n          var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n          var force = !!_swallowedUpdateHints._force;\n          var changedOptions = updateHints._changedOptions;\n          var swallow = _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n          var displayIsHidden;\n          if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n          //destroyed\n          //swallowing\n          //sleeping\n          //host is hidden or has false display\n\n          if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n          _lastUpdateTime = now;\n          _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n          if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n            //native scrollbars are hidden, so change the values to zero\n            _nativeScrollbarSize.x = 0;\n            _nativeScrollbarSize.y = 0;\n          } else {\n            //refresh native scrollbar size (in case of zoom)\n            _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n          // The calculation: [scrollbar size +3 *3]\n          // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n          // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n\n          _nativeScrollbarMinSize = {\n            x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n            y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n          };\n          changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n          //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n          var checkCacheAutoForce = function checkCacheAutoForce() {\n            return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n          }; //save current scroll offset\n\n\n          var currScroll = {\n            x: _viewportElement[_strScrollLeft](),\n            y: _viewportElement[_strScrollTop]()\n          };\n          var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n          var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n          var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n          var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n          var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n          var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n          var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n          var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n          var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n          var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n          var className = _currentPreparedOptions.className;\n          var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n          var resize = _currentPreparedOptions.resize;\n          var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n          //paddingAbsolute\n\n          var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n          var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n          var clipAlways = _currentPreparedOptions.clipAlways;\n          var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n          var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n          var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n          var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n          var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n          var autoUpdate = _currentPreparedOptions.autoUpdate;\n          var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n          var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n          var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n          var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n          var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n          var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n          var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n          _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n          _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n          _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n          _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n          _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n          _oldClassName = _classNameCache; //resize\n\n          _resizeNone = resize === 'n';\n          _resizeBoth = resize === 'b';\n          _resizeHorizontal = resize === 'h';\n          _resizeVertical = resize === 'v'; //normalizeRTL\n\n          _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n          ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n          _scrollbarsVisibilityCache = scrollbarsVisibility;\n          _scrollbarsAutoHideCache = scrollbarsAutoHide;\n          _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n          _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n          _classNameCache = className;\n          _resizeCache = resize;\n          _paddingAbsoluteCache = paddingAbsolute;\n          _clipAlwaysCache = clipAlways;\n          _sizeAutoCapableCache = sizeAutoCapable;\n          _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n          _autoUpdateCache = autoUpdate;\n          _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n          _textareaDynWidthCache = textareaDynWidth;\n          _textareaDynHeightCache = textareaDynHeight;\n          _hasOverflowCache = _hasOverflowCache || {\n            x: false,\n            y: false\n          }; //set correct class name to the host element\n\n          if (classNameChanged) {\n            removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n            addClass(_hostElement, className !== undefined$1 && className !== null && className.length > 0 ? className : _classNameThemeNone);\n          } //set correct auto Update\n\n\n          if (autoUpdateChanged) {\n            if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n              disconnectMutationObservers();\n              autoUpdateLoop.add(_base);\n            } else {\n              autoUpdateLoop.remove(_base);\n              connectMutationObservers();\n            }\n          } //activate or deactivate size auto capability\n\n\n          if (sizeAutoCapableChanged) {\n            if (sizeAutoCapable) {\n              if (_contentGlueElement) {\n                _contentGlueElement.show();\n              } else {\n                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n\n                _paddingElement.before(_contentGlueElement);\n              }\n\n              if (_sizeAutoObserverAdded) {\n                _sizeAutoObserverElement.show();\n              } else {\n                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n                _contentGlueElement.before(_sizeAutoObserverElement);\n\n                var oldSize = {\n                  w: -1,\n                  h: -1\n                };\n                setupResizeObserver(_sizeAutoObserverElement, function () {\n                  var newSize = {\n                    w: _sizeAutoObserverElementNative[LEXICON.oW],\n                    h: _sizeAutoObserverElementNative[LEXICON.oH]\n                  };\n\n                  if (checkCache(newSize, oldSize)) {\n                    if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                      update();\n                    } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                      update();\n                    }\n                  }\n\n                  oldSize = newSize;\n                });\n                _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n                if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n              }\n            } else {\n              if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n              if (_contentGlueElement) _contentGlueElement.hide();\n            }\n          } //if force, update all resizeObservers too\n\n\n          if (force) {\n            _sizeObserverElement.find('*').trigger(_strScroll);\n\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n          } //display hidden:\n\n\n          displayIsHidden = displayIsHidden === undefined$1 ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n          var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n          var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n          var cssDirection = _hostElement.css('direction');\n\n          var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n          var boxSizing = _hostElement.css('box-sizing');\n\n          var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n          var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n          var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n          try {\n            sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n          } catch (ex) {\n            return;\n          }\n\n          _isRTL = cssDirection === 'rtl';\n          _isBorderBox = boxSizing === 'border-box';\n          var isRTLLeft = _isRTL ? _strLeft : _strRight;\n          var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n          var widthAutoResizeDetection = false;\n          var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n          /*|| _isTextarea */\n          ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n\n          if (sizeAutoCapable && !widthAutoObserverDetection) {\n            var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n\n            var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n\n            _contentGlueElement.css(_strWidth, _strAuto);\n\n            var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n\n            if (!widthAutoResizeDetection) {\n              _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n\n              tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n              _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n              widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n            }\n          }\n\n          var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n          var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n          var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n          var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\n          /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\n          : false;\n          var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n          var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n          //we need the border only if border box and auto size\n\n          var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n          var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n          var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n          var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n          var contentElementCSS = {};\n          var contentGlueElementCSS = {}; //funcs\n\n          var getHostSize = function getHostSize() {\n            //has to be clientSize because offsetSize respect borders\n            return {\n              w: _hostElementNative[LEXICON.cW],\n              h: _hostElementNative[LEXICON.cH]\n            };\n          };\n\n          var getViewportSize = function getViewportSize() {\n            //viewport size is padding container because it never has padding, margin and a border\n            //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n            //if this happens add the difference to the viewportSize to compensate the rounding error\n            return {\n              w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n              h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n            };\n          }; //set info for padding\n\n\n          var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n          var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n          paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n          paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n          padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n          _borderX = border.l + border.r;\n          _borderY = border.t + border.b;\n          border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n          _marginX = margin.l + margin.r;\n          _marginY = margin.t + margin.b;\n          margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n          _textareaAutoWrappingCache = textareaAutoWrapping;\n          _cssDirectionCache = cssDirection;\n          _cssBoxSizingCache = boxSizing;\n          _widthAutoCache = widthAuto;\n          _heightAutoCache = heightAuto;\n          _cssPaddingCache = padding;\n          _cssBorderCache = border;\n          _cssMarginCache = margin; //IEFix direction changed\n\n          if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n          if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n            var paddingElementCSS = {};\n            var textareaCSS = {};\n            var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n            setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n\n            if (paddingAbsolute) {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n            } else {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n            }\n\n            _paddingElement.css(paddingElementCSS);\n\n            _targetElement.css(textareaCSS);\n          } //viewport size is padding container because it never has padding, margin and a border.\n\n\n          _viewportSize = getViewportSize(); //update Textarea\n\n          var textareaSize = _isTextarea ? textareaUpdate() : false;\n\n          var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n\n          var textareaDynOrigSize = _isTextarea && textareaSize ? {\n            w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n            h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n          } : {};\n          _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n          if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n            contentElementCSS[_strHeight] = _strAuto;\n          } else if (heightAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strHeight] = _strHundredPercent;\n          }\n\n          if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n            contentElementCSS[_strWidth] = _strAuto;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n          } else if (widthAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strWidth] = _strHundredPercent;\n            contentElementCSS[_strFloat] = _strEmpty;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n          }\n\n          if (widthAuto) {\n            //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n            contentGlueElementCSS[_strWidth] = _strAuto;\n            contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n            contentElementCSS[_strFloat] = isRTLRight;\n          } else {\n            contentGlueElementCSS[_strWidth] = _strEmpty;\n          }\n\n          if (heightAuto) {\n            //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n            contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n          } else {\n            contentGlueElementCSS[_strHeight] = _strEmpty;\n          }\n\n          if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n\n          _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n\n          contentElementCSS = {};\n          contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n          if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n            var strOverflow = 'overflow';\n            var strOverflowX = strOverflow + '-x';\n            var strOverflowY = strOverflow + '-y';\n            var strHidden = 'hidden';\n            var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n            //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n            if (!_nativeScrollbarStyling) {\n              var viewportElementResetCSS = {};\n              var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n              var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n              setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n\n              _viewportElement.css(viewportElementResetCSS);\n            } //measure several sizes:\n\n\n            var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n            var contentSize = {\n              //use clientSize because natively overlaidScrollbars add borders\n              w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n              h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n            };\n            var scrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            }; //apply the correct viewport style and measure viewport size\n\n            if (!_nativeScrollbarStyling) {\n              viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n              viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n\n              _viewportElement.css(viewportElementResetCSS);\n            }\n\n            _viewportSize = getViewportSize(); //measure and correct several sizes\n\n            var hostSize = getHostSize();\n            var hostAbsoluteRectSize = {\n              w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n              h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n            };\n            var contentGlueSize = {\n              //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n              //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n              w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n              h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n            };\n            contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n            _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n            if (sizeAutoCapable) {\n              //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n              if (contentGlueSize.c || heightAuto || widthAuto) {\n                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n                contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n                if (!_isTextarea) {\n                  contentSize = {\n                    //use clientSize because natively overlaidScrollbars add borders\n                    w: contentMeasureElement[LEXICON.cW],\n                    h: contentMeasureElement[LEXICON.cH]\n                  };\n                }\n              }\n\n              var textareaCoverCSS = {};\n\n              var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var wh = scrollbarVars._w_h;\n                var strWH = scrollbarVars._width_height;\n                var autoSize = horizontal ? widthAuto : heightAuto;\n                var borderSize = horizontal ? _borderX : _borderY;\n                var paddingSize = horizontal ? _paddingX : _paddingY;\n                var marginSize = horizontal ? _marginX : _marginY;\n                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n                if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n                if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                  if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                  contentGlueElementCSS[strWH] -= 1;\n                } //make sure content glue size is at least 1\n\n\n                if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n              };\n\n              setContentGlueElementCSSfunction(true);\n              setContentGlueElementCSSfunction(false);\n              if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n\n              _contentGlueElement.css(contentGlueElementCSS);\n            }\n\n            if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n            if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n            _contentElement.css(contentElementCSS);\n\n            contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n            var contentScrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            };\n            contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n            _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n            _viewportSize = getViewportSize();\n            hostSize = getHostSize();\n            hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n            _hostSizeCache = hostSize;\n            var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n            var previousOverflowAmount = _overflowAmountCache;\n            var overflowBehaviorIsVS = {};\n            var overflowBehaviorIsVH = {};\n            var overflowBehaviorIsS = {};\n            var overflowAmount = {};\n            var hasOverflow = {};\n            var hideOverflow = {};\n            var canScroll = {};\n\n            var viewportRect = _paddingElementNative[LEXICON.bCR]();\n\n            var setOverflowVariables = function setOverflowVariables(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xyI = scrollbarVarsInverted._x_y;\n              var xy = scrollbarVars._x_y;\n              var wh = scrollbarVars._w_h;\n              var widthHeight = scrollbarVars._width_height;\n              var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n              var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n              var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n              overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n              overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n              overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n              overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n              overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n              hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n              //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n              //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n              hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n              hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n              canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n            };\n\n            setOverflowVariables(true);\n            setOverflowVariables(false);\n            overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n            _overflowAmountCache = overflowAmount;\n            hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n            _hasOverflowCache = hasOverflow;\n            hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n            _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n            if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n              var borderDesign = 'px solid transparent';\n              var contentArrangeElementCSS = {};\n              var arrangeContent = {};\n              var arrangeChanged = force;\n              var setContentElementCSS;\n\n              if (hasOverflow.x || hasOverflow.y) {\n                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n                _arrangeContentSizeCache = arrangeContent;\n              }\n\n              if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n\n                setContentElementCSS = function setContentElementCSS(horizontal) {\n                  var scrollbarVars = getScrollbarVars(horizontal);\n                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                  var xy = scrollbarVars._x_y;\n                  var strDirection = horizontal ? _strBottom : isRTLLeft;\n                  var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                  if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                    contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                    contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                  } else {\n                    arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                    arrangeChanged = true;\n                  }\n                };\n\n                if (_nativeScrollbarStyling) {\n                  addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n                } else {\n                  setContentElementCSS(true);\n                  setContentElementCSS(false);\n                }\n              }\n\n              if (ignoreOverlayScrollbarHiding) {\n                arrangeContent.w = arrangeContent.h = _strEmpty;\n                arrangeChanged = true;\n              }\n\n              if (arrangeChanged && !_nativeScrollbarStyling) {\n                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n                if (!_contentArrangeElement) {\n                  _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n\n                  _viewportElement.prepend(_contentArrangeElement);\n                }\n\n                _contentArrangeElement.css(contentArrangeElementCSS);\n              }\n\n              _contentElement.css(contentElementCSS);\n            }\n\n            var viewportElementCSS = {};\n            var paddingElementCSS = {};\n            var setViewportCSS;\n\n            if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n              viewportElementCSS[isRTLRight] = _strEmpty;\n\n              setViewportCSS = function setViewportCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var XY = scrollbarVars._X_Y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n                var reset = function reset() {\n                  viewportElementCSS[strDirection] = _strEmpty;\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n                };\n\n                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  viewportElementCSS[strOverflow + XY] = _strScroll;\n\n                  if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                    reset();\n                  } else {\n                    viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                    _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                  }\n                } else {\n                  viewportElementCSS[strOverflow + XY] = _strEmpty;\n                  reset();\n                }\n              };\n\n              setViewportCSS(true);\n              setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n              // make viewport element greater in size (Firefox hide Scrollbars fix)\n              // because firefox starts hiding scrollbars on too small elements\n              // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n              if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n              } else {\n                viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n              }\n\n              viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n              if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n                //only hide if is Textarea\n                if (_isTextarea && hideOverflowForceTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n                }\n              } else {\n                if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                  //only un-hide if Textarea\n                  if (_isTextarea) {\n                    paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                  }\n\n                  viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n                }\n              }\n\n              _paddingElement.css(paddingElementCSS);\n\n              _viewportElement.css(viewportElementCSS);\n\n              viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n              if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                var elementStyle = _contentElementNative[LEXICON.s];\n                elementStyle.webkitTransform = 'scale(1)';\n                elementStyle.display = 'run-in';\n                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n                elementStyle.webkitTransform = _strEmpty;\n              }\n              /*\r\n              //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n              if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                  _hostElement.hide();\r\n                  var dump = _hostElementNative[LEXICON.oH];\r\n                  _hostElement.show();\r\n              }\r\n              */\n\n            } //change to direction RTL and width auto Bugfix in Webkit\n            //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n\n            contentElementCSS = {};\n\n            if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n              if (_isRTL && widthAuto) {\n                var floatTmp = _contentElement.css(_strFloat);\n\n                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n\n                _contentElement.css(_strFloat, floatTmp);\n\n                var posLeftWithFloat = MATH.round(_contentElement.position().left);\n                if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n              } else {\n                contentElementCSS[_strLeft] = _strEmpty;\n              }\n            }\n\n            _contentElement.css(contentElementCSS); //handle scroll position\n\n\n            if (_isTextarea && contentSizeChanged) {\n              var textareaInfo = getTextareaInfo();\n\n              if (textareaInfo) {\n                var textareaRowsChanged = _textareaInfoCache === undefined$1 ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n                var cursorRow = textareaInfo._cursorRow;\n                var cursorCol = textareaInfo._cursorColumn;\n                var widestRow = textareaInfo._widestRow;\n                var lastRow = textareaInfo._rows;\n                var lastCol = textareaInfo._columns;\n                var cursorPos = textareaInfo._cursorPosition;\n                var cursorMax = textareaInfo._cursorMax;\n                var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n                var textareaScrollAmount = {\n                  x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                  y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n                };\n                currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n              }\n\n              _textareaInfoCache = textareaInfo;\n            }\n\n            if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n            if (widthAuto) _hostElement[_strScrollLeft](0);\n            if (heightAuto) _hostElement[_strScrollTop](0);\n\n            _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n\n            var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n            var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n            var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n            var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n              showY = showY === undefined$1 ? showX : showY;\n              refreshScrollbarAppearance(true, showX, canScroll.x);\n              refreshScrollbarAppearance(false, showY, canScroll.y);\n            }; //manage class name which indicates scrollable overflow\n\n\n            addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n            addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n            addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n            if (cssDirectionChanged && !_isBody) {\n              addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n            } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n\n            if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n\n            if (resizeChanged) {\n              addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n            } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n\n            if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n              if (ignoreOverlayScrollbarHiding) {\n                if (ignoreOverlayScrollbarHidingChanged) {\n                  removeClass(_hostElement, _classNameHostScrolling);\n\n                  if (ignoreOverlayScrollbarHiding) {\n                    refreshScrollbarsVisibility(false);\n                  }\n                }\n              } else if (scrollbarsVisibilityAuto) {\n                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n              } else if (scrollbarsVisibilityVisible) {\n                refreshScrollbarsVisibility(true);\n              } else if (scrollbarsVisibilityHidden) {\n                refreshScrollbarsVisibility(false);\n              }\n            } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n\n            if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n              setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n              refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n            } //manage scrollbars handle length & offset - don't remove!\n\n\n            if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n              refreshScrollbarHandleLength(true);\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleLength(false);\n              refreshScrollbarHandleOffset(false);\n            } //manage interactivity\n\n\n            if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n            if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n            dispatchCallback('onDirectionChanged', {\n              isRTL: _isRTL,\n              dir: cssDirection\n            }, cssDirectionChanged);\n            dispatchCallback('onHostSizeChanged', {\n              width: _hostSizeCache.w,\n              height: _hostSizeCache.h\n            }, hostSizeChanged);\n            dispatchCallback('onContentSizeChanged', {\n              width: _contentScrollSizeCache.w,\n              height: _contentScrollSizeCache.h\n            }, contentSizeChanged);\n            dispatchCallback('onOverflowChanged', {\n              x: hasOverflow.x,\n              y: hasOverflow.y,\n              xScrollable: hideOverflow.xs,\n              yScrollable: hideOverflow.ys,\n              clipped: hideOverflow.x || hideOverflow.y\n            }, hasOverflow.c || hideOverflow.c);\n            dispatchCallback('onOverflowAmountChanged', {\n              x: overflowAmount.x,\n              y: overflowAmount.y\n            }, overflowAmount.c);\n          } //fix body min size\n\n\n          if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n            //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n            if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n            if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n            if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n            _bodyMinSizeCache.c = false;\n          }\n\n          if (_initialized && changedOptions.updateOnLoad) {\n            updateElementsOnLoad();\n          } //freezeResizeObserver(_sizeObserverElement, false);\n          //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n\n          dispatchCallback('onUpdated', {\n            forced: force\n          });\n        }\n        /**\r\n         * Updates the found elements of which the load event shall be handled.\r\n         */\n\n\n        function updateElementsOnLoad() {\n          if (!_isTextarea) {\n            eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n              _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n                // if element doesn't have a updateOnLoadCallback applied\n                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                  _updateOnLoadElms.push(el);\n\n                  FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n                }\n              });\n            });\n          }\n        } //==== Options ====//\n\n        /**\r\n         * Sets new options but doesn't call the update method.\r\n         * @param newOptions The object which contains the new options.\r\n         * @returns {*} A object which contains the changed options.\r\n         */\n\n\n        function setOptions(newOptions) {\n          var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n\n          _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n          _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n          return validatedOpts._prepared;\n        } //==== Structure ====//\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupStructureDOM(destroy) {\n          var strParent = 'parent';\n          var classNameResizeObserverHost = 'os-resize-observer-host';\n          var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n          var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n          var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n          var adoptAttrsMap = {};\n\n          var applyAdoptedAttrs = function applyAdoptedAttrs() {\n            var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n            each(adoptAttrsMap, function (key, value) {\n              if (type(value) == TYPES.s) {\n                if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n              }\n            });\n          };\n\n          var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n          var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n          _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n          _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n          _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n          _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n          _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n          _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined$1); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n          if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n          //to prevent adopting generated class names\n\n          if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n          adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n\n          if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n            each(adoptAttrs, function (i, v) {\n              if (type(v) == TYPES.s) {\n                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n              }\n            });\n          }\n\n          if (!destroy) {\n            if (_isTextarea) {\n              if (!_currentPreparedOptions.sizeAutoCapable) {\n                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n              }\n\n              if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n              _hostElement = _targetElement[strParent]().css(hostElementCSS);\n            }\n\n            if (!_domExists) {\n              //add the correct class to the target element\n              addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n              _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n\n              _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n              _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n              _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n              if (_isTextarea) {\n                _contentElement.prepend(_textareaCoverElement);\n\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n            if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n            if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n            _sizeObserverElementNative = _sizeObserverElement[0];\n            _hostElementNative = _hostElement[0];\n            _paddingElementNative = _paddingElement[0];\n            _viewportElementNative = _viewportElement[0];\n            _contentElementNative = _contentElement[0];\n            updateViewportAttrsFromTarget();\n          } else {\n            if (_domExists && _initialized) {\n              //clear size observer\n              _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n\n              each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n                if (elm) {\n                  removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n                }\n              }); //add classes to the host element which was removed previously to match the expected DOM\n\n              addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n            } else {\n              //remove size observer\n              remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n              _contentElement.contents().unwrap().unwrap().unwrap();\n\n              if (_isTextarea) {\n                _targetElement.unwrap();\n\n                remove(_hostElement);\n                remove(_textareaCoverElement);\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n            if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n          }\n        }\n        /**\r\n         * Adds or removes all wrapper elements interactivity events.\r\n         * @param destroy Indicates whether the Events shall be added or removed.\r\n         */\n\n\n        function setupStructureEvents() {\n          var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\n          33, 34, //page up, page down\n          37, 38, 39, 40, //left, up, right, down arrows\n          16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n          ];\n          var textareaKeyDownKeyCodesList = [];\n          var textareaUpdateIntervalID;\n          var scrollStopTimeoutId;\n          var scrollStopDelay = 175;\n          var strFocus = 'focus';\n\n          function updateTextarea(doClearInterval) {\n            textareaUpdate();\n\n            _base.update(_strAuto);\n\n            if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n          }\n\n          function textareaOnScroll(event) {\n            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n\n            _targetElement[_strScrollTop](0);\n\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n            return false;\n          }\n\n          function textareaOnDrop(event) {\n            setTimeout(function () {\n              if (!_destroyed) updateTextarea();\n            }, 50);\n          }\n\n          function textareaOnFocus() {\n            _textareaHasFocus = true;\n            addClass(_hostElement, strFocus);\n          }\n\n          function textareaOnFocusout() {\n            _textareaHasFocus = false;\n            textareaKeyDownKeyCodesList = [];\n            removeClass(_hostElement, strFocus);\n            updateTextarea(true);\n          }\n\n          function textareaOnKeyDown(event) {\n            var keyCode = event.keyCode;\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n                updateTextarea();\n                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n              }\n\n              if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n            }\n          }\n\n          function textareaOnKeyUp(event) {\n            var keyCode = event.keyCode;\n            var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n            }\n          }\n\n          function contentOnTransitionEnd(event) {\n            if (_autoUpdateCache === true) return;\n            event = event.originalEvent || event;\n            if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n          }\n\n          function viewportOnScroll(event) {\n            if (!_sleeping) {\n              if (scrollStopTimeoutId !== undefined$1) clearTimeout(scrollStopTimeoutId);else {\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n                if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStart', event);\n              } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n              //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n              //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n              if (!_scrollbarsHandlesDefineScrollPos) {\n                refreshScrollbarHandleOffset(true);\n                refreshScrollbarHandleOffset(false);\n              }\n\n              dispatchCallback('onScroll', event);\n              scrollStopTimeoutId = setTimeout(function () {\n                if (!_destroyed) {\n                  //OnScrollStop:\n                  clearTimeout(scrollStopTimeoutId);\n                  scrollStopTimeoutId = undefined$1;\n                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                  if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                  dispatchCallback('onScrollStop', event);\n                }\n              }, scrollStopDelay);\n            }\n          }\n\n          if (_isTextarea) {\n            if (_msieVersion > 9 || !_autoUpdateRecommended) {\n              addDestroyEventListener(_targetElement, 'input', updateTextarea);\n            } else {\n              addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n            }\n\n            addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n          } else {\n            addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n          }\n\n          addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n        } //==== Scrollbars ====//\n\n        /**\r\n         * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarsDOM(destroy) {\n          var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n            var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n            var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n            var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n            var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n\n            if (!_domExists && !destroy) {\n              scrollbar.append(track);\n              track.append(handle);\n            }\n\n            return {\n              _scrollbar: scrollbar,\n              _track: track,\n              _handle: handle\n            };\n          };\n\n          function resetScrollbarDOM(isHorizontal) {\n            var scrollbarVars = getScrollbarVars(isHorizontal);\n            var scrollbar = scrollbarVars._scrollbar;\n            var track = scrollbarVars._track;\n            var handle = scrollbarVars._handle;\n\n            if (_domExists && _initialized) {\n              each([scrollbar, track, handle], function (i, elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              });\n            } else {\n              remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n            }\n          }\n\n          var horizontalElements;\n          var verticalElements;\n\n          if (!destroy) {\n            horizontalElements = selectOrGenerateScrollbarDOM(true);\n            verticalElements = selectOrGenerateScrollbarDOM();\n            _scrollbarHorizontalElement = horizontalElements._scrollbar;\n            _scrollbarHorizontalTrackElement = horizontalElements._track;\n            _scrollbarHorizontalHandleElement = horizontalElements._handle;\n            _scrollbarVerticalElement = verticalElements._scrollbar;\n            _scrollbarVerticalTrackElement = verticalElements._track;\n            _scrollbarVerticalHandleElement = verticalElements._handle;\n\n            if (!_domExists) {\n              _paddingElement.after(_scrollbarVerticalElement);\n\n              _paddingElement.after(_scrollbarHorizontalElement);\n            }\n          } else {\n            resetScrollbarDOM(true);\n            resetScrollbarDOM();\n          }\n        }\n        /**\r\n         * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n         * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n         */\n\n\n        function setupScrollbarEvents(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var xy = scrollbarVars._x_y;\n          var XY = scrollbarVars._X_Y;\n          var scroll = _strScroll + scrollbarVars._Left_Top;\n          var strActive = 'active';\n          var strSnapHandle = 'snapHandle';\n          var strClickEvent = 'click';\n          var scrollDurationFactor = 1;\n          var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n          var trackTimeout;\n          var mouseDownScroll;\n          var mouseDownOffset;\n          var mouseDownInvertedScale;\n\n          function getPointerPosition(event) {\n            return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n          }\n\n          function getPreparedScrollbarsOption(name) {\n            return _currentPreparedOptions.scrollbars[name];\n          }\n\n          function increaseTrackScrollAmount() {\n            scrollDurationFactor = 0.5;\n          }\n\n          function decreaseTrackScrollAmount() {\n            scrollDurationFactor = 1;\n          }\n\n          function stopClickEventPropagation(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          function documentKeyDown(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n          }\n\n          function documentKeyUp(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var trackLength = scrollbarVarsInfo._trackLength;\n              var handleLength = scrollbarVarsInfo._handleLength;\n              var scrollRange = scrollbarVarsInfo._maxScroll;\n              var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n              var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n              var scrollDelta = scrollRange * scrollDeltaPercent;\n              scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n              if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n\n              _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n              if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n            } else documentMouseTouchUp(event);\n          }\n\n          function documentMouseTouchUp(event) {\n            event = event || event.originalEvent;\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n                _capture: true\n              });\n            });\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n            _scrollbarsHandlesDefineScrollPos = false;\n            removeClass(_bodyElement, _classNameDragging);\n            removeClass(scrollbarVars._handle, strActive);\n            removeClass(scrollbarVars._track, strActive);\n            removeClass(scrollbarVars._scrollbar, strActive);\n            mouseDownScroll = undefined$1;\n            mouseDownOffset = undefined$1;\n            mouseDownInvertedScale = 1;\n            decreaseTrackScrollAmount();\n\n            if (trackTimeout !== undefined$1) {\n              _base.scrollStop();\n\n              clearTimeout(trackTimeout);\n              trackTimeout = undefined$1;\n            }\n\n            if (event) {\n              var rect = _hostElementNative[LEXICON.bCR]();\n\n              var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n              if (!mouseInsideHost) hostOnMouseLeave();\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n            }\n          }\n\n          function onHandleMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n          }\n\n          function onHandleMouseTouchDownAction(event) {\n            mouseDownScroll = _viewportElement[scroll]();\n            mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = getPointerPosition(event);\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._handle, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n                _capture: true\n              });\n            });\n            if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n\n          function onTrackMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n              var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n              var scrollBaseDuration = 270 * handleToViewportRatio;\n              var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n\n              var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n\n              var ctrlKey = event.ctrlKey;\n              var instantScroll = event.shiftKey;\n              var instantScrollTransition = instantScroll && ctrlKey;\n              var isFirstIteration = true;\n              var easing = 'linear';\n              var decreaseScroll;\n              var finishedCondition;\n\n              var scrollActionFinsished = function scrollActionFinsished(transition) {\n                if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n              };\n\n              var scrollActionInstantFinished = function scrollActionInstantFinished() {\n                scrollActionFinsished();\n                onHandleMouseTouchDownAction(event);\n              };\n\n              var scrollAction = function scrollAction() {\n                if (!_destroyed) {\n                  var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                  var handleOffset = scrollbarVarsInfo._handleOffset;\n                  var trackLength = scrollbarVarsInfo._trackLength;\n                  var handleLength = scrollbarVarsInfo._handleLength;\n                  var scrollRange = scrollbarVarsInfo._maxScroll;\n                  var currScroll = scrollbarVarsInfo._currentScroll;\n                  var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                  var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                  var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                  var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                  var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                  var scrollObj = {};\n                  var animationObj = {\n                    easing: easing,\n                    step: function step(now) {\n                      if (_scrollbarsHandlesDefineScrollPos) {\n                        _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n\n                        refreshScrollbarHandleOffset(isHorizontal, now);\n                      }\n                    }\n                  };\n                  instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                  instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                  if (instantScroll) {\n                    _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n\n                    if (instantScrollTransition) {\n                      //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                      //and the animation stops at the correct point\n                      instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                      _viewportElement[scroll](currScroll);\n\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                      scrollObj[xy] = instantScrollPosition;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: 130,\n                        complete: scrollActionInstantFinished\n                      }));\n                    } else scrollActionInstantFinished();\n                  } else {\n                    decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                    finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n\n                    if (finishedCondition) {\n                      clearTimeout(trackTimeout);\n\n                      _base.scrollStop();\n\n                      trackTimeout = undefined$1;\n                      scrollActionFinsished(true);\n                    } else {\n                      trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                      scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: scrollDuration\n                      }));\n                    }\n\n                    isFirstIteration = false;\n                  }\n                }\n              };\n\n              if (ctrlKey) increaseTrackScrollAmount();\n              mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n              mouseDownOffset = COMPATIBILITY.page(event)[xy];\n              _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n              addClass(_bodyElement, _classNameDragging);\n              addClass(scrollbarVars._track, strActive);\n              addClass(scrollbarVars._scrollbar, strActive);\n              setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n              scrollAction();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          }\n\n          function onTrackMouseTouchEnter(event) {\n            //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n            _scrollbarsHandleHovered = true;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n          }\n\n          function onTrackMouseTouchLeave(event) {\n            _scrollbarsHandleHovered = false;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n\n          function onScrollbarMouseTouchDown(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n          addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n          addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n\n          if (_supportTransition) {\n            addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n              if (event.target !== scrollbarVars._scrollbar[0]) return;\n              refreshScrollbarHandleLength(isHorizontal);\n              refreshScrollbarHandleOffset(isHorizontal);\n            });\n          }\n        }\n        /**\r\n         * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n         * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n         * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n         * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n         */\n\n\n        function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n          var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n          var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n          addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n          addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n        }\n        /**\r\n         * Autoshows / autohides both scrollbars with.\r\n         * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n         * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n         */\n\n\n        function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n          clearTimeout(_scrollbarsAutoHideTimeoutId);\n\n          if (shallBeVisible) {\n            //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n            removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n            removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n          } else {\n            var anyActive;\n            var strActive = 'active';\n\n            var hide = function hide() {\n              if (!_scrollbarsHandleHovered && !_destroyed) {\n                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n              }\n            };\n\n            if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n          }\n        }\n        /**\r\n         * Refreshes the handle length of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         */\n\n\n        function refreshScrollbarHandleLength(isHorizontal) {\n          var handleCSS = {};\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var digit = 1000000; //get and apply intended handle length\n\n          var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n          handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n          if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n          scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n          scrollbarVarsInfo._handleLengthRatio = handleRatio;\n        }\n        /**\r\n         * Refreshes the handle offset of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n         */\n\n\n        function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n          var transition = type(scrollOrTransition) == TYPES.b;\n          var transitionDuration = 250;\n          var isRTLisHorizontal = _isRTL && isHorizontal;\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var strTranslateBrace = 'translate(';\n\n          var strTransform = VENDORS._cssProperty('transform');\n\n          var strTransition = VENDORS._cssProperty('transition');\n\n          var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n          var currentScroll = scrollOrTransition === undefined$1 || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n          var handleLength = scrollbarVarsInfo._handleLength;\n          var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n          var handleTrackDiff = trackLength - handleLength;\n          var handleCSS = {};\n          var transformOffset;\n          var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n          // because its a bit behind during the small delay when content size updates\n          //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n          var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n          var getScrollRatio = function getScrollRatio(base) {\n            return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n          };\n\n          var getHandleOffset = function getHandleOffset(scrollRatio) {\n            var offset = handleTrackDiff * scrollRatio;\n            offset = isNaN(offset) ? 0 : offset;\n            offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n            offset = MATH.max(0, offset);\n            return offset;\n          };\n\n          var scrollRatio = getScrollRatio(nativeScroll);\n          var unsnappedScrollRatio = getScrollRatio(currentScroll);\n          var handleOffset = getHandleOffset(unsnappedScrollRatio);\n          var snappedHandleOffset = getHandleOffset(scrollRatio);\n          scrollbarVarsInfo._maxScroll = maxScroll;\n          scrollbarVarsInfo._currentScroll = nativeScroll;\n          scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n          if (_supportTransform) {\n            transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n            //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n            translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n            handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n            if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n          } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n\n          if (!nativeOverlayScrollbarsAreActive()) {\n            scrollbarVars._handle.css(handleCSS); //clear up transition\n\n\n            if (_supportTransform && _supportTransition && transition) {\n              scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n                if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n              });\n            }\n          }\n\n          scrollbarVarsInfo._handleOffset = handleOffset;\n          scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n          scrollbarVarsInfo._trackLength = trackLength;\n        }\n        /**\r\n         * Refreshes the interactivity of the given scrollbar element.\r\n         * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n         * @param value True for interactivity false for no interactivity.\r\n         */\n\n\n        function refreshScrollbarsInteractive(isTrack, value) {\n          var action = value ? 'removeClass' : 'addClass';\n          var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n          var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n          var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n          element1[action](className);\n          element2[action](className);\n        }\n        /**\r\n         * Returns a object which is used for fast access for specific variables.\r\n         * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n         * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n         */\n\n\n        function getScrollbarVars(isHorizontal) {\n          return {\n            _width_height: isHorizontal ? _strWidth : _strHeight,\n            _Width_Height: isHorizontal ? 'Width' : 'Height',\n            _left_top: isHorizontal ? _strLeft : _strTop,\n            _Left_Top: isHorizontal ? 'Left' : 'Top',\n            _x_y: isHorizontal ? _strX : _strY,\n            _X_Y: isHorizontal ? 'X' : 'Y',\n            _w_h: isHorizontal ? 'w' : 'h',\n            _l_t: isHorizontal ? 'l' : 't',\n            _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n            _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n            _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n            _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n          };\n        } //==== Scrollbar Corner ====//\n\n        /**\r\n         * Builds or destroys the scrollbar corner DOM element.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarCornerDOM(destroy) {\n          _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n\n          if (!destroy) {\n            if (!_domExists) {\n              _hostElement.append(_scrollbarCornerElement);\n            }\n          } else {\n            if (_domExists && _initialized) {\n              removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            } else {\n              remove(_scrollbarCornerElement);\n            }\n          }\n        }\n        /**\r\n         * Initializes all scrollbar corner interactivity events.\r\n         */\n\n\n        function setupScrollbarCornerEvents() {\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var mouseDownPosition = {};\n          var mouseDownSize = {};\n          var mouseDownInvertedScale = {};\n          var reconnectMutationObserver;\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var pageOffset = getCoordinates(event);\n              var hostElementCSS = {};\n              if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n              if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n\n              _hostElement.css(hostElementCSS);\n\n              COMPATIBILITY.stpP(event);\n            } else {\n              documentMouseTouchUp(event);\n            }\n          }\n\n          function documentMouseTouchUp(event) {\n            var eventIsTrusted = event !== undefined$1;\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n            removeClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n\n            if (eventIsTrusted) {\n              if (reconnectMutationObserver) connectMutationObservers();\n\n              _base.update(_strAuto);\n            }\n\n            reconnectMutationObserver = false;\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function getCoordinates(event) {\n            return _msieVersion && insideIFrame ? {\n              x: event.screenX,\n              y: event.screenY\n            } : COMPATIBILITY.page(event);\n          }\n\n          addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n            if (onMouseTouchDownContinue(event) && !_resizeNone) {\n              if (_mutationObserversConnected) {\n                reconnectMutationObserver = true;\n                disconnectMutationObservers();\n              }\n\n              mouseDownPosition = getCoordinates(event);\n              mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n              mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n              mouseDownInvertedScale = getHostElementInvertedScale();\n              setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n              addClass(_bodyElement, _classNameDragging);\n              if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          });\n        } //==== Utils ====//\n\n        /**\r\n         * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n         * @param name The name of the target which shall be called.\r\n         * @param args The args with which the callback shall be called.\r\n         * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n         */\n\n\n        function dispatchCallback(name, args, dependent) {\n          if (dependent === false) return;\n\n          if (_initialized) {\n            var callback = _currentPreparedOptions.callbacks[name];\n            var extensionOnName = name;\n            var ext;\n            if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n            if (type(callback) == TYPES.f) callback.call(_base, args);\n            each(_extensions, function () {\n              ext = this;\n              if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n            });\n          } else if (!_destroyed) _callbacksInitQeueue.push({\n            n: name,\n            a: args\n          });\n        }\n        /**\r\n         * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n         * @param targetCSSObject The css object to which the values shall be applied.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n         * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n         */\n\n\n        function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n          prefix = prefix || _strEmpty;\n          values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n          targetCSSObject[prefix + _strTop] = values[0];\n          targetCSSObject[prefix + _strRight] = values[1];\n          targetCSSObject[prefix + _strBottom] = values[2];\n          targetCSSObject[prefix + _strLeft] = values[3];\n        }\n        /**\r\n         * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n         * @param zeroX True if the x axis shall be 0.\r\n         * @param zeroY True if the y axis shall be 0.\r\n         * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n         */\n\n\n        function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n          suffix = suffix || _strEmpty;\n          prefix = prefix || _strEmpty;\n          return {\n            t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n            r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n            b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n            l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n          };\n        }\n        /**\r\n         * Returns the computed CSS transition string from the given element.\r\n         * @param element The element from which the transition string shall be returned.\r\n         * @returns {string} The CSS transition string from the given element.\r\n         */\n\n\n        function getCSSTransitionString(element) {\n          var transitionStr = VENDORS._cssProperty('transition');\n\n          var assembledValue = element.css(transitionStr);\n          if (assembledValue) return assembledValue;\n          var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n          var regExpMain = new RegExp(regExpString);\n          var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n          var properties = 'property duration timing-function delay'.split(' ');\n          var result = [];\n          var strResult;\n          var valueArray;\n          var i = 0;\n          var j;\n\n          var splitCssStyleByComma = function splitCssStyleByComma(str) {\n            strResult = [];\n            if (!str.match(regExpValidate)) return str;\n\n            while (str.match(regExpMain)) {\n              strResult.push(RegExp.$1);\n              str = str.replace(regExpMain, _strEmpty);\n            }\n\n            return strResult;\n          };\n\n          for (; i < properties[LEXICON.l]; i++) {\n            valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n\n            for (j = 0; j < valueArray[LEXICON.l]; j++) {\n              result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n            }\n          }\n\n          return result.join(', ');\n        }\n        /**\r\n         * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n         * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n         * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n         */\n\n\n        function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n          var i;\n          var split;\n          var appendix;\n\n          var appendClasses = function appendClasses(classes, condition) {\n            appendix = '';\n\n            if (condition && _typeof(classes) == TYPES.s) {\n              split = classes.split(_strSpace);\n\n              for (i = 0; i < split[LEXICON.l]; i++) {\n                appendix += '|' + split[i] + '$';\n              } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n\n            }\n\n            return appendix;\n          };\n\n          return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n        }\n        /**\r\n         * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n         * @returns {{x: number, y: number}} The scale of the host-element.\r\n         */\n\n\n        function getHostElementInvertedScale() {\n          var rect = _paddingElementNative[LEXICON.bCR]();\n\n          return {\n            x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n            y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n          };\n        }\n        /**\r\n         * Checks whether the given object is a HTMLElement.\r\n         * @param o The object which shall be checked.\r\n         * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n         */\n\n\n        function isHTMLElement(o) {\n          var strOwnerDocument = 'ownerDocument';\n          var strHTMLElement = 'HTMLElement';\n          var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n          return _typeof(wnd[strHTMLElement]) == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n          o && _typeof(o) == TYPES.o && o !== null && o.nodeType === 1 && _typeof(o.nodeName) == TYPES.s;\n        }\n        /**\r\n         * Compares 2 arrays and returns the differences between them as a array.\r\n         * @param a1 The first array which shall be compared.\r\n         * @param a2 The second array which shall be compared.\r\n         * @returns {Array} The differences between the two arrays.\r\n         */\n\n\n        function getArrayDifferences(a1, a2) {\n          var a = [];\n          var diff = [];\n          var i;\n          var k;\n\n          for (i = 0; i < a1.length; i++) {\n            a[a1[i]] = true;\n          }\n\n          for (i = 0; i < a2.length; i++) {\n            if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n          }\n\n          for (k in a) {\n            diff.push(k);\n          }\n\n          return diff;\n        }\n        /**\r\n         * Returns Zero or the number to which the value can be parsed.\r\n         * @param value The value which shall be parsed.\r\n         * @param toFloat Indicates whether the number shall be parsed to a float.\r\n         */\n\n\n        function parseToZeroOrNumber(value, toFloat) {\n          var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n          return isNaN(num) ? 0 : num;\n        }\n        /**\r\n         * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n         * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n         */\n\n\n        function getTextareaInfo() {\n          //read needed values\n          var textareaCursorPosition = _targetElementNative.selectionStart;\n          if (textareaCursorPosition === undefined$1) return;\n\n          var textareaValue = _targetElement.val();\n\n          var textareaLength = textareaValue[LEXICON.l];\n          var textareaRowSplit = textareaValue.split('\\n');\n          var textareaLastRow = textareaRowSplit[LEXICON.l];\n          var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n          var widestRow = 0;\n          var textareaLastCol = 0;\n          var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n          var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n          var rowCols;\n          var i; //get widest Row and the last column of the textarea\n\n          for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n            rowCols = textareaRowSplit[i][LEXICON.l];\n\n            if (rowCols > textareaLastCol) {\n              widestRow = i + 1;\n              textareaLastCol = rowCols;\n            }\n          }\n\n          return {\n            _cursorRow: cursorRow,\n            //cursorRow\n            _cursorColumn: cursorCol,\n            //cursorCol\n            _rows: textareaLastRow,\n            //rows\n            _columns: textareaLastCol,\n            //cols\n            _widestRow: widestRow,\n            //wRow\n            _cursorPosition: textareaCursorPosition,\n            //pos\n            _cursorMax: textareaLength //max\n\n          };\n        }\n        /**\r\n         * Determines whether native overlay scrollbars are active.\r\n         * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n         */\n\n\n        function nativeOverlayScrollbarsAreActive() {\n          return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n        }\n        /**\r\n         * Gets the element which is used to measure the content size.\r\n         * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n         */\n\n\n        function getContentMeasureElement() {\n          return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n        }\n        /**\r\n         * Generates a string which represents a HTML div with the given classes or attributes.\r\n         * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n         * @param content The content of the div as string.\r\n         * @returns {string} The concated string which represents a HTML div and its content.\r\n         */\n\n\n        function generateDiv(classesOrAttrs, content) {\n          return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n            var key;\n            var attrs = _strEmpty;\n\n            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n              for (key in classesOrAttrs) {\n                attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n              }\n            }\n\n            return attrs;\n          }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n        }\n        /**\r\n         * Selects or generates a div with the given class attribute.\r\n         * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n         * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n         * If its a boolean it decides whether only the children of the host element shall be selected.\r\n         * @returns {*} The generated or selected element.\r\n         */\n\n\n        function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n          var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n          var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n          return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n        }\n        /**\r\n         * Gets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be got.\r\n         * @param path The property of which the value shall be got.\r\n         * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n         */\n\n\n        function getObjectPropVal(obj, path) {\n          var splits = path.split(_strDot);\n          var i = 0;\n          var val;\n\n          for (; i < splits.length; i++) {\n            if (!obj[LEXICON.hOP](splits[i])) return;\n            val = obj[splits[i]];\n            if (i < splits.length && type(val) == TYPES.o) obj = val;\n          }\n\n          return val;\n        }\n        /**\r\n         * Sets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be set.\r\n         * @param path The property of which the value shall be set.\r\n         * @param val The value of the property which shall be set.\r\n         */\n\n\n        function setObjectPropVal(obj, path, val) {\n          var splits = path.split(_strDot);\n          var splitsLength = splits.length;\n          var i = 0;\n          var extendObj = {};\n          var extendObjRoot = extendObj;\n\n          for (; i < splitsLength; i++) {\n            extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n          }\n\n          FRAMEWORK.extend(obj, extendObjRoot, true);\n        }\n        /**\t\r\n         * Runs a action for each selector inside the updateOnLoad option.\t\r\n         * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n         */\n\n\n        function eachUpdateOnLoad(action) {\n          var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n          updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n\n          if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n            each(updateOnLoad, action);\n          }\n        } //==== Utils Cache ====//\n\n        /**\r\n         * Compares two values or objects and returns true if they aren't equal.\r\n         * @param current The first value or object which shall be compared.\r\n         * @param cache The second value or object which shall be compared.\r\n         * @param force If true the returned value is always true.\r\n         * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n         */\n\n\n        function checkCache(current, cache, force) {\n          if (force) return force;\n\n          if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n            for (var prop in current) {\n              if (prop !== 'c') {\n                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                  if (checkCache(current[prop], cache[prop])) return true;\n                } else {\n                  return true;\n                }\n              }\n            }\n          } else {\n            return current !== cache;\n          }\n\n          return false;\n        } //==== Shortcuts ====//\n\n        /**\r\n         * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n         */\n\n\n        function extendDeep() {\n          return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n        }\n        /**\r\n         * jQuery addClass method shortcut.\r\n         */\n\n\n        function addClass(el, classes) {\n          return _frameworkProto.addClass.call(el, classes);\n        }\n        /**\r\n         * jQuery removeClass method shortcut.\r\n         */\n\n\n        function removeClass(el, classes) {\n          return _frameworkProto.removeClass.call(el, classes);\n        }\n        /**\r\n         * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n         */\n\n\n        function addRemoveClass(el, classes, doAdd) {\n          return doAdd ? addClass(el, classes) : removeClass(el, classes);\n        }\n        /**\r\n         * jQuery remove method shortcut.\r\n         */\n\n\n        function remove(el) {\n          return _frameworkProto.remove.call(el);\n        }\n        /**\r\n         * Finds the first child element with the given selector of the given element.\r\n         * @param el The root element from which the selector shall be valid.\r\n         * @param selector The selector of the searched element.\r\n         * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n         */\n\n\n        function findFirst(el, selector) {\n          return _frameworkProto.find.call(el, selector).eq(0);\n        } //==== API ====//\n\n        /**\r\n         * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n         * This behavior can be reset by calling the update method.\r\n         */\n\n\n        _base.sleep = function () {\n          _sleeping = true;\n        };\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param force True if every property shall be updated and the cache shall be ignored.\r\n         * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n         * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n         * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n         * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n         * @returns {boolean|undefined} \r\n         * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n         * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n         * undefined otherwise.\r\n         */\n\n\n        _base.update = function (force) {\n          if (_destroyed) return;\n          var attrsChanged;\n          var contentSizeC;\n          var isString = type(force) == TYPES.s;\n          var doUpdateAuto;\n          var mutHost;\n          var mutContent;\n\n          if (isString) {\n            if (force === _strAuto) {\n              attrsChanged = meaningfulAttrsChanged();\n              contentSizeC = updateAutoContentSizeChanged();\n              doUpdateAuto = attrsChanged || contentSizeC;\n\n              if (doUpdateAuto) {\n                update({\n                  _contentSizeChanged: contentSizeC,\n                  _changedOptions: _initialized ? undefined$1 : _currentPreparedOptions\n                });\n              }\n            } else if (force === _strSync) {\n              if (_mutationObserversConnected) {\n                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n              } else {\n                mutHost = _base.update(_strAuto);\n              }\n            } else if (force === 'zoom') {\n              update({\n                _hostSizeChanged: true,\n                _contentSizeChanged: true\n              });\n            }\n          } else {\n            force = _sleeping || force;\n            _sleeping = false;\n            if (!_base.update(_strSync) || force) update({\n              _force: force\n            });\n          }\n\n          updateElementsOnLoad();\n          return doUpdateAuto || mutHost || mutContent;\n        };\n        /**\r\n         Gets or sets the current options. The update method will be called automatically if new options were set.\r\n         * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n         * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n         * @returns {*}\r\n         */\n\n\n        _base.options = function (newOptions, value) {\n          var option = {};\n          var changedOps; //return current options if newOptions are undefined or empty\n\n          if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n            if (type(newOptions) == TYPES.s) {\n              if (arguments.length > 1) {\n                setObjectPropVal(option, newOptions, value);\n                changedOps = setOptions(option);\n              } else return getObjectPropVal(_currentOptions, newOptions);\n            } else return _currentOptions;\n          } else {\n            changedOps = setOptions(newOptions);\n          }\n\n          if (!FRAMEWORK.isEmptyObject(changedOps)) {\n            update({\n              _changedOptions: changedOps\n            });\n          }\n        };\n        /**\r\n         * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n         */\n\n\n        _base.destroy = function () {\n          if (_destroyed) return; //remove this instance from auto update loop\n\n          autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n          disconnectMutationObservers(); //remove all resize observers\n\n          setupResizeObserver(_sizeObserverElement);\n          setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n          for (var extName in _extensions) {\n            _base.removeExt(extName);\n          } //remove all 'destroy' events\n\n\n          while (_destroyEvents[LEXICON.l] > 0) {\n            _destroyEvents.pop()();\n          } //remove all events from host element\n\n\n          setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n          if (_contentGlueElement) remove(_contentGlueElement);\n          if (_contentArrangeElement) remove(_contentArrangeElement);\n          if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n          setupScrollbarsDOM(true);\n          setupScrollbarCornerDOM(true);\n          setupStructureDOM(true); //remove all generated image load events\n\n          for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n            FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n          }\n\n          _updateOnLoadElms = undefined$1;\n          _destroyed = true;\n          _sleeping = true; //remove this instance from the instances list\n\n          INSTANCES(pluginTargetElement, 0);\n          dispatchCallback('onDestroyed'); //remove all properties and methods\n          //for (var property in _base)\n          //    delete _base[property];\n          //_base = undefined;\n        };\n        /**\r\n         * Scrolls to a given position or element.\r\n         * @param coordinates\r\n         * 1. Can be \"coordinates\" which looks like:\r\n         *    { x : ?, y : ? } OR          Object with x and y properties\r\n         *    { left : ?, top : ? } OR     Object with left and top properties\r\n         *    { l : ?, t : ? } OR          Object with l and t properties\r\n         *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n         *    ?                            A single value which stays for both axis\r\n         *    A value can be a number, a string or a calculation.\r\n         *\r\n         *    Operators:\r\n         *    [NONE]  The current scroll will be overwritten by the value.\r\n         *    '+='    The value will be added to the current scroll offset\r\n         *    '-='    The value will be subtracted from the current scroll offset\r\n         *    '*='    The current scroll wil be multiplicated by the value.\r\n         *    '/='    The current scroll wil be divided by the value.\r\n         *\r\n         *    Units:\r\n         *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n         *    'px'    Same as none\r\n         *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n         *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n         *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n         *\r\n         *    example final values:\r\n         *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n         *\r\n         * 2. Can be a HTML or jQuery element:\r\n         *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n         *\r\n         * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n         *    {\r\n         *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n         *      scroll : [string, array, object],               Default value is 'always'.\r\n         *      block : [string, array, object],                Default value is 'begin'.\r\n         *      margin : [number, boolean, array, object]       Default value is false.\r\n         *    }\r\n         *\r\n         *    Possible scroll settings are:\r\n         *    'always'      Scrolls always.\r\n         *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n         *    'never'       Scrolls never.\r\n         *\r\n         *    Possible block settings are:\r\n         *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n         *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n         *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n         *    'nearest' The element will be docked to the nearest edge(s).\r\n         *\r\n         *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n         *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n         *    [NUMBER]                                          The margin will be used for all edges.\r\n         *\r\n         * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n         * @param easing The animation easing.\r\n         * @param complete The animation complete callback.\r\n         * @returns {{\r\n         *   position: {x: number, y: number},\r\n         *   ratio: {x: number, y: number},\r\n         *   max: {x: number, y: number},\r\n         *   handleOffset: {x: number, y: number},\r\n         *   handleLength: {x: number, y: number},\r\n         *   handleLengthRatio: {x: number, y: number}, t\r\n         *   rackLength: {x: number, y: number},\r\n         *   isRTL: boolean,\r\n         *   isRTLNormalized: boolean\r\n         *  }}\r\n         */\n\n\n        _base.scroll = function (coordinates, duration, easing, complete) {\n          if (arguments.length === 0 || coordinates === undefined$1) {\n            var infoX = _scrollHorizontalInfo;\n            var infoY = _scrollVerticalInfo;\n            var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n            var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n            var scrollX = infoX._currentScroll;\n            var scrollXRatio = infoX._currentScrollRatio;\n            var maxScrollX = infoX._maxScroll;\n            scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n            scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n            scrollX *= normalizeNegate ? -1 : 1;\n            maxScrollX *= normalizeNegate ? -1 : 1;\n            return {\n              position: {\n                x: scrollX,\n                y: infoY._currentScroll\n              },\n              ratio: {\n                x: scrollXRatio,\n                y: infoY._currentScrollRatio\n              },\n              max: {\n                x: maxScrollX,\n                y: infoY._maxScroll\n              },\n              handleOffset: {\n                x: infoX._handleOffset,\n                y: infoY._handleOffset\n              },\n              handleLength: {\n                x: infoX._handleLength,\n                y: infoY._handleLength\n              },\n              handleLengthRatio: {\n                x: infoX._handleLengthRatio,\n                y: infoY._handleLengthRatio\n              },\n              trackLength: {\n                x: infoX._trackLength,\n                y: infoY._trackLength\n              },\n              snappedHandleOffset: {\n                x: infoX._snappedHandleOffset,\n                y: infoY._snappedHandleOffset\n              },\n              isRTL: _isRTL,\n              isRTLNormalized: _normalizeRTLCache\n            };\n          }\n\n          _base.update(_strSync);\n\n          var normalizeRTL = _normalizeRTLCache;\n          var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n          var coordinatesYAxisProps = [_strY, _strTop, 't'];\n          var coordinatesOperators = ['+=', '-=', '*=', '/='];\n          var durationIsObject = type(duration) == TYPES.o;\n          var completeCallback = durationIsObject ? duration.complete : complete;\n          var i;\n          var finalScroll = {};\n          var specialEasing = {};\n          var doScrollLeft;\n          var doScrollTop;\n          var animationOptions;\n          var strEnd = 'end';\n          var strBegin = 'begin';\n          var strCenter = 'center';\n          var strNearest = 'nearest';\n          var strAlways = 'always';\n          var strNever = 'never';\n          var strIfNeeded = 'ifneeded';\n          var strLength = LEXICON.l;\n          var settingsAxis;\n          var settingsScroll;\n          var settingsBlock;\n          var settingsMargin;\n          var finalElement;\n          var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n          var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n          var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n          var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n          var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n          var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n          var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n\n          var updateScrollbarInfos = function updateScrollbarInfos() {\n            if (doScrollLeft) refreshScrollbarHandleOffset(true);\n            if (doScrollTop) refreshScrollbarHandleOffset(false);\n          };\n\n          var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined$1 : function () {\n            updateScrollbarInfos();\n            completeCallback();\n          };\n\n          function checkSettingsStringValue(currValue, allowedValues) {\n            for (i = 0; i < allowedValues[strLength]; i++) {\n              if (currValue === allowedValues[i]) return true;\n            }\n\n            return false;\n          }\n\n          function getRawScroll(isX, coordinates) {\n            var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n            coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n            if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n              //decides RTL normalization \"hack\" with .n\n              //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n              for (i = 0; i < coordinateProps[strLength]; i++) {\n                if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n              }\n            }\n          }\n\n          function getFinalScroll(isX, rawScroll) {\n            var isString = type(rawScroll) == TYPES.s;\n            var operator;\n            var amount;\n            var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n            var currScroll = scrollInfo._currentScroll;\n            var maxScroll = scrollInfo._maxScroll;\n            var mult = ' * ';\n            var finalValue;\n            var isRTLisX = _isRTL && isX;\n            var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n            var strReplace = 'replace';\n            var evalFunc = eval;\n            var possibleOperator;\n\n            if (isString) {\n              //check operator\n              if (rawScroll[strLength] > 2) {\n                possibleOperator = rawScroll.substr(0, 2);\n                if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n              } //calculate units and shortcuts\n\n\n              rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n              rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n              [strReplace](/</g, 0) //'<'   = 0%\n              [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n              [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n              [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n              amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n            } else {\n              amount = rawScroll;\n            }\n\n            if (amount !== undefined$1 && !isNaN(amount) && type(amount) == TYPES.n) {\n              var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n              var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n              var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n              var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n              operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n\n              switch (operator) {\n                case '+=':\n                  finalValue = operatorCurrScroll + amount;\n                  break;\n\n                case '-=':\n                  finalValue = operatorCurrScroll - amount;\n                  break;\n\n                case '*=':\n                  finalValue = operatorCurrScroll * amount;\n                  break;\n\n                case '/=':\n                  finalValue = operatorCurrScroll / amount;\n                  break;\n\n                default:\n                  finalValue = amount;\n                  break;\n              }\n\n              finalValue = invert ? maxScroll - finalValue : finalValue;\n              finalValue *= negate ? -1 : 1;\n              finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n            }\n\n            return finalValue === currScroll ? undefined$1 : finalValue;\n          }\n\n          function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n            var resultDefault = [defaultValue, defaultValue];\n            var valueType = type(value);\n            var valueArrLength;\n            var valueArrItem; //value can be [ string, or array of two strings ]\n\n            if (valueType == valueInternalType) {\n              value = [value, value];\n            } else if (valueType == TYPES.a) {\n              valueArrLength = value[strLength];\n              if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n                if (valueArrLength === 1) value[1] = defaultValue;\n\n                for (i = 0; i < valueArrLength; i++) {\n                  valueArrItem = value[i];\n\n                  if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                    value = resultDefault;\n                    break;\n                  }\n                }\n              }\n            } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n\n            return {\n              x: value[0],\n              y: value[1]\n            };\n          }\n\n          function generateMargin(marginTopRightBottomLeftArray) {\n            var result = [];\n            var currValue;\n            var currValueType;\n            var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n\n            for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n              if (i === valueDirections[strLength]) break;\n              currValue = marginTopRightBottomLeftArray[i];\n              currValueType = type(currValue);\n              if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n            }\n\n            return result;\n          }\n\n          if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n            //get settings\n            var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n            var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n            var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n            var block = coordinatesIsElementObj ? coordinates.block : 0;\n            var marginDefault = [0, 0, 0, 0];\n            var marginType = type(margin);\n            var marginLength;\n            finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n\n            if (finalElement[strLength] > 0) {\n              //margin can be [ boolean, number, array of 2, array of 4, object ]\n              if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n                marginLength = margin[strLength];\n                if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n              } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n              settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n              settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n              settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n              settingsMargin = margin;\n              var viewportScroll = {\n                l: _scrollHorizontalInfo._currentScroll,\n                t: _scrollVerticalInfo._currentScroll\n              }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n              var viewportOffset = _paddingElement.offset(); //get coordinates\n\n\n              var elementOffset = finalElement.offset();\n              var doNotScroll = {\n                x: settingsScroll.x == strNever || settingsAxis == _strY,\n                y: settingsScroll.y == strNever || settingsAxis == _strX\n              };\n              elementOffset[_strTop] -= settingsMargin[0];\n              elementOffset[_strLeft] -= settingsMargin[3];\n              var elementScrollCoordinates = {\n                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n              };\n\n              if (_isRTL) {\n                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n                if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n                if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n              } //measuring is required\n\n\n              if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n                var measuringElm = finalElement[0];\n                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                  width: measuringElm[LEXICON.oW],\n                  height: measuringElm[LEXICON.oH]\n                };\n                var elementSize = {\n                  w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                  h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n                };\n\n                var finalizeBlock = function finalizeBlock(isX) {\n                  var vars = getScrollbarVars(isX);\n                  var wh = vars._w_h;\n                  var lt = vars._left_top;\n                  var xy = vars._x_y;\n                  var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                  var blockIsCenter = settingsBlock[xy] == strCenter;\n                  var blockIsNearest = settingsBlock[xy] == strNearest;\n                  var scrollNever = settingsScroll[xy] == strNever;\n                  var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                  var vpSize = _viewportSize[wh];\n                  var vpOffset = viewportOffset[lt];\n                  var elSize = elementSize[wh];\n                  var elOffset = elementOffset[lt];\n                  var divide = blockIsCenter ? 2 : 1;\n                  var elementCenterOffset = elOffset + elSize / 2;\n                  var viewportCenterOffset = vpOffset + vpSize / 2;\n                  var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                  if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                    if (blockIsNearest || scrollIfNeeded) {\n                      doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                      blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                    }\n\n                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                  }\n                };\n\n                finalizeBlock(true);\n                finalizeBlock(false);\n              }\n\n              if (doNotScroll.y) delete elementScrollCoordinates.y;\n              if (doNotScroll.x) delete elementScrollCoordinates.x;\n              coordinates = elementScrollCoordinates;\n            }\n          }\n\n          finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n          finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n          doScrollLeft = finalScroll[_strScrollLeft] !== undefined$1;\n          doScrollTop = finalScroll[_strScrollTop] !== undefined$1;\n\n          if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n            if (durationIsObject) {\n              duration.complete = proxyCompleteCallback;\n\n              _viewportElement.animate(finalScroll, duration);\n            } else {\n              animationOptions = {\n                duration: duration,\n                complete: proxyCompleteCallback\n              };\n\n              if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n                specialEasing[_strScrollLeft] = easing[0] || easing.x;\n                specialEasing[_strScrollTop] = easing[1] || easing.y;\n                animationOptions.specialEasing = specialEasing;\n              } else {\n                animationOptions.easing = easing;\n              }\n\n              _viewportElement.animate(finalScroll, animationOptions);\n            }\n          } else {\n            if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n            if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n            updateScrollbarInfos();\n          }\n        };\n        /**\r\n         * Stops all scroll animations.\r\n         * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n         */\n\n\n        _base.scrollStop = function (param1, param2, param3) {\n          _viewportElement.stop(param1, param2, param3);\n\n          return _base;\n        };\n        /**\r\n         * Returns all relevant elements.\r\n         * @param elementName The name of the element which shall be returned.\r\n         * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n         */\n\n\n        _base.getElements = function (elementName) {\n          var obj = {\n            target: _targetElementNative,\n            host: _hostElementNative,\n            padding: _paddingElementNative,\n            viewport: _viewportElementNative,\n            content: _contentElementNative,\n            scrollbarHorizontal: {\n              scrollbar: _scrollbarHorizontalElement[0],\n              track: _scrollbarHorizontalTrackElement[0],\n              handle: _scrollbarHorizontalHandleElement[0]\n            },\n            scrollbarVertical: {\n              scrollbar: _scrollbarVerticalElement[0],\n              track: _scrollbarVerticalTrackElement[0],\n              handle: _scrollbarVerticalHandleElement[0]\n            },\n            scrollbarCorner: _scrollbarCornerElement[0]\n          };\n          return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n        };\n        /**\r\n         * Returns a object which describes the current state of this instance.\r\n         * @param stateProperty A specific property from the state object which shall be returned.\r\n         * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n         */\n\n\n        _base.getState = function (stateProperty) {\n          function prepare(obj) {\n            if (!FRAMEWORK.isPlainObject(obj)) return obj;\n            var extended = extendDeep({}, obj);\n\n            var changePropertyName = function changePropertyName(from, to) {\n              if (extended[LEXICON.hOP](from)) {\n                extended[to] = extended[from];\n                delete extended[from];\n              }\n            };\n\n            changePropertyName('w', _strWidth); //change w to width\n\n            changePropertyName('h', _strHeight); //change h to height\n\n            delete extended.c; //delete c (the 'changed' prop)\n\n            return extended;\n          }\n\n          var obj = {\n            destroyed: !!prepare(_destroyed),\n            sleeping: !!prepare(_sleeping),\n            autoUpdate: prepare(!_mutationObserversConnected),\n            widthAuto: prepare(_widthAutoCache),\n            heightAuto: prepare(_heightAutoCache),\n            padding: prepare(_cssPaddingCache),\n            overflowAmount: prepare(_overflowAmountCache),\n            hideOverflow: prepare(_hideOverflowCache),\n            hasOverflow: prepare(_hasOverflowCache),\n            contentScrollSize: prepare(_contentScrollSizeCache),\n            viewportSize: prepare(_viewportSize),\n            hostSize: prepare(_hostSizeCache),\n            documentMixed: prepare(_documentMixed)\n          };\n          return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n        };\n        /**\r\n         * Gets all or specific extension instance.\r\n         * @param extName The name of the extension from which the instance shall be got.\r\n         * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n         */\n\n\n        _base.ext = function (extName) {\n          var result;\n\n          var privateMethods = _extensionsPrivateMethods.split(' ');\n\n          var i = 0;\n\n          if (type(extName) == TYPES.s) {\n            if (_extensions[LEXICON.hOP](extName)) {\n              result = extendDeep({}, _extensions[extName]);\n\n              for (; i < privateMethods.length; i++) {\n                delete result[privateMethods[i]];\n              }\n            }\n          } else {\n            result = {};\n\n            for (i in _extensions) {\n              result[i] = extendDeep({}, _base.ext(i));\n            }\n          }\n\n          return result;\n        };\n        /**\r\n         * Adds a extension to this instance.\r\n         * @param extName The name of the extension which shall be added.\r\n         * @param extensionOptions The extension options which shall be used.\r\n         * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n         */\n\n\n        _base.addExt = function (extName, extensionOptions) {\n          var registeredExtensionObj = _plugin.extension(extName);\n\n          var instance;\n          var instanceAdded;\n          var instanceContract;\n          var contractResult;\n          var contractFulfilled = true;\n\n          if (registeredExtensionObj) {\n            if (!_extensions[LEXICON.hOP](extName)) {\n              instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n\n              if (instance) {\n                instanceContract = instance.contract;\n\n                if (type(instanceContract) == TYPES.f) {\n                  contractResult = instanceContract(window);\n                  contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n                }\n\n                if (contractFulfilled) {\n                  _extensions[extName] = instance;\n                  instanceAdded = instance.added;\n                  if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                  return _base.ext(extName);\n                }\n              }\n            } else return _base.ext(extName);\n          } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n        };\n        /**\r\n         * Removes a extension from this instance.\r\n         * @param extName The name of the extension which shall be removed.\r\n         * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n         */\n\n\n        _base.removeExt = function (extName) {\n          var instance = _extensions[extName];\n          var instanceRemoved;\n\n          if (instance) {\n            delete _extensions[extName];\n            instanceRemoved = instance.removed;\n            if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n            return true;\n          }\n\n          return false;\n        };\n        /**\r\n         * Constructs the plugin.\r\n         * @param targetElement The element to which the plugin shall be applied.\r\n         * @param options The initial options of the plugin.\r\n         * @param extensions The extension(s) which shall be added right after the initialization.\r\n         * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n         */\n\n\n        function construct(targetElement, options, extensions) {\n          _defaultOptions = globals.defaultOptions;\n          _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n          _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n          _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n          setOptions(extendDeep({}, _defaultOptions, options));\n          _cssCalc = globals.cssCalc;\n          _msieVersion = globals.msie;\n          _autoUpdateRecommended = globals.autoUpdateRecommended;\n          _supportTransition = globals.supportTransition;\n          _supportTransform = globals.supportTransform;\n          _supportPassiveEvents = globals.supportPassiveEvents;\n          _supportResizeObserver = globals.supportResizeObserver;\n          _supportMutationObserver = globals.supportMutationObserver;\n          _documentElement = FRAMEWORK(targetElement.ownerDocument);\n          _documentElementNative = _documentElement[0];\n          _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n          _windowElementNative = _windowElement[0];\n          _htmlElement = findFirst(_documentElement, 'html');\n          _bodyElement = findFirst(_htmlElement, 'body');\n          _targetElement = FRAMEWORK(targetElement);\n          _targetElementNative = _targetElement[0];\n          _isTextarea = _targetElement.is('textarea');\n          _isBody = _targetElement.is('body');\n          _documentMixed = _documentElementNative !== document;\n          /* On a div Element The if checks only whether:\r\n           * - the targetElement has the class \"os-host\"\r\n           * - the targetElement has a a child with the class \"os-padding\"\r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-host\" element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding\">\r\n           *          <div class=\"os-viewport\">\r\n           *              <div class=\"os-content\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           *\r\n           * =====================================================================================\r\n           * \r\n           * On a Textarea Element The if checks only whether:\r\n           * - the targetElement has the class \"os-textarea\" \r\n           * - the targetElement is inside a element with the class \"os-content\" \r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-textarea\" (textarea) element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host-textarea\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding os-text-inherit\">\r\n           *          <div class=\"os-viewport os-text-inherit\">\r\n           *              <div class=\"os-content os-text-inherit\">\r\n           *                  <div class=\"os-textarea-cover\"></div>\r\n           *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n           *              </div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           */\n\n          _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n          var initBodyScroll;\n\n          var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n            dispatchCallback('onInitializationWithdrawn');\n\n            if (_domExists) {\n              setupStructureDOM(true);\n              setupScrollbarsDOM(true);\n              setupScrollbarCornerDOM(true);\n            }\n\n            _destroyed = true;\n            _sleeping = true;\n            return _base;\n          }\n\n          if (_isBody) {\n            initBodyScroll = {};\n            initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n            initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n\n            _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n              _viewportElement.removeAttr(LEXICON.ti);\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n            };\n          } //build OverlayScrollbars DOM\n\n\n          setupStructureDOM();\n          setupScrollbarsDOM();\n          setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n          setupStructureEvents();\n          setupScrollbarEvents(true);\n          setupScrollbarEvents(false);\n          setupScrollbarCornerEvents(); //create mutation observers\n\n          createMutationObservers(); //build resize observer for the host element\n\n          setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n          if (_isBody) {\n            //apply the body scroll to handle it right in the update method\n            _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n\n            if (document.activeElement == targetElement && _viewportElementNative.focus) {\n              //set a tabindex to make the viewportElement focusable\n              _viewportElement.attr(LEXICON.ti, '-1');\n\n              _viewportElementNative.focus();\n              /* the tabindex has to be removed due to;\r\n               * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n               * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n               */\n\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n            }\n          } //update for the first time & initialize cache\n\n\n          _base.update(_strAuto); //the plugin is initialized now!\n\n\n          _initialized = true;\n          dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n          each(_callbacksInitQeueue, function (index, value) {\n            dispatchCallback(value.n, value.a);\n          });\n          _callbacksInitQeueue = []; //add extensions\n\n          if (type(extensions) == TYPES.s) extensions = [extensions];\n          if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n            _base.addExt(value);\n          });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n            _base.addExt(key, value);\n          }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n          setTimeout(function () {\n            if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n          }, 333);\n          return _base;\n        }\n\n        if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n          INSTANCES(pluginTargetElement, _base);\n        }\n\n        return _base;\n      }\n      /**\r\n       * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n       * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n       * @param options The custom options with which the plugin shall be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*}\r\n       */\n\n\n      _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var arr = [];\n        var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n        var inst;\n        var result; //pluginTargetElements is null or undefined\n\n        if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n        /*\r\n           pluginTargetElements will be converted to:\r\n           1. A jQueryElement Array\r\n           2. A HTMLElement Array\r\n           3. A Array with a single HTML Element\r\n           so pluginTargetElements is always a array.\r\n        */\n\n        pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined$1 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n        initOverlayScrollbarsStatics();\n\n        if (pluginTargetElements[LEXICON.l] > 0) {\n          if (optsIsPlainObj) {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = v;\n              if (inst !== undefined$1) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n            });\n          } else {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = INSTANCES(v);\n              if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined$1) arr.push(inst);\n            });\n          }\n\n          result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n        }\n\n        return result;\n      };\n      /**\r\n       * Returns a object which contains global information about the plugin and each instance of it.\r\n       * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n       */\n\n\n      _plugin.globals = function () {\n        initOverlayScrollbarsStatics();\n        var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n        delete globals['msie'];\n        return globals;\n      };\n      /**\r\n       * Gets or Sets the default options for each new plugin initialization.\r\n       * @param newDefaultOptions The object with which the default options shall be extended.\r\n       */\n\n\n      _plugin.defaultOptions = function (newDefaultOptions) {\n        initOverlayScrollbarsStatics();\n        var currDefaultOptions = _pluginsGlobals.defaultOptions;\n        if (newDefaultOptions === undefined$1) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n        _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n      };\n      /**\r\n       * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n       * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n       * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n       */\n\n\n      _plugin.valid = function (osInstance) {\n        return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n      };\n      /**\r\n       * Registers, Unregisters or returns a extension.\r\n       * Register: Pass the name and the extension. (defaultOptions is optional)\r\n       * Unregister: Pass the name and anything except a function as extension parameter.\r\n       * Get extension: Pass the name of the extension which shall be got.\r\n       * Get all extensions: Pass no arguments.\r\n       * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n       * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n       * @param defaultOptions The default options which shall be used for the registered extension.\r\n       */\n\n\n      _plugin.extension = function (extensionName, extension, defaultOptions) {\n        var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n        var argLen = arguments[LEXICON.l];\n        var i = 0;\n\n        if (argLen < 1 || !extNameTypeString) {\n          //return a copy of all extension objects\n          return FRAMEWORK.extend(true, {\n            length: _pluginsExtensions[LEXICON.l]\n          }, _pluginsExtensions);\n        } else if (extNameTypeString) {\n          if (COMPATIBILITY.type(extension) == TYPES.f) {\n            //register extension\n            _pluginsExtensions.push({\n              name: extensionName,\n              extensionFactory: extension,\n              defaultOptions: defaultOptions\n            });\n          } else {\n            for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n              if (_pluginsExtensions[i].name === extensionName) {\n                if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n                else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n              }\n            }\n          }\n        }\n      };\n\n      return _plugin;\n    }();\n\n    if (JQUERY && JQUERY.fn) {\n      /**\r\n       * The jQuery initialization interface.\r\n       * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n       */\n      JQUERY.fn.overlayScrollbars = function (options, extensions) {\n        var _elements = this;\n\n        if (JQUERY.isPlainObject(options)) {\n          JQUERY.each(_elements, function () {\n            PLUGIN(this, options, extensions);\n          });\n          return _elements;\n        } else return PLUGIN(_elements, options);\n      };\n    }\n\n    return PLUGIN;\n  });\n})(OverlayScrollbars$1);\n\nvar OverlayScrollbars = OverlayScrollbars$1.exports;\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\n\nvar OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_a) {\n  var _a$options = _a.options,\n      options = _a$options === void 0 ? {} : _a$options,\n      extensions = _a.extensions,\n      className = _a.className,\n      children = _a.children,\n      rest = __rest(_a, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = useRef();\n  var osInstance = useRef();\n  useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), React__default.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), React__default.createElement(\"div\", {\n    className: \"os-padding\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport { OverlayScrollbarsComponent, OverlayScrollbarsComponent as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}