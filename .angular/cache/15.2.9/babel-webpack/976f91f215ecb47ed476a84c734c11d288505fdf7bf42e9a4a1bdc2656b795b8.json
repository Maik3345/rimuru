{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { TypeSystem } from './types';\nimport { createSummaryValue } from '../utils';\nimport { createFlowPropDef } from './flow/createPropDef';\nimport { isDefaultValueBlacklisted } from './utils/defaultValue';\nimport { createTsPropDef } from './typeScript/createPropDef';\nimport { convert } from '../convert';\nfunction createType(type) {\n  // A type could be null if a defaultProp has been provided without a type definition.\n  return type != null ? createSummaryValue(type.name) : null;\n} // A heuristic to tell if a defaultValue comes from RDT\n\nfunction isReactDocgenTypescript(defaultValue) {\n  var computed = defaultValue.computed,\n    func = defaultValue.func;\n  return typeof computed === 'undefined' && typeof func === 'undefined';\n}\nfunction isStringValued(type) {\n  if (!type) {\n    return false;\n  }\n  if (type.name === 'string') {\n    return true;\n  }\n  if (type.name === 'enum') {\n    return Array.isArray(type.value) && type.value.every(function (_ref) {\n      var tv = _ref.value;\n      return typeof tv === 'string' && tv[0] === '\"' && tv[tv.length - 1] === '\"';\n    });\n  }\n  return false;\n}\nfunction createDefaultValue(defaultValue, type) {\n  if (defaultValue != null) {\n    var value = defaultValue.value;\n    if (!isDefaultValueBlacklisted(value)) {\n      // Work around a bug in `react-docgen-typescript-loader`, which returns 'string' for a string\n      // default, instead of \"'string'\" -- which is incorrect\n      if (isReactDocgenTypescript(defaultValue) && isStringValued(type)) {\n        return createSummaryValue(JSON.stringify(value));\n      }\n      return createSummaryValue(value);\n    }\n  }\n  return null;\n}\nfunction createBasicPropDef(name, type, docgenInfo) {\n  var description = docgenInfo.description,\n    required = docgenInfo.required,\n    defaultValue = docgenInfo.defaultValue;\n  return {\n    name: name,\n    type: createType(type),\n    required: required,\n    description: description,\n    defaultValue: createDefaultValue(defaultValue, type)\n  };\n}\nfunction applyJsDocResult(propDef, jsDocParsingResult) {\n  if (jsDocParsingResult.includesJsDoc) {\n    var description = jsDocParsingResult.description,\n      extractedTags = jsDocParsingResult.extractedTags;\n    if (description != null) {\n      // eslint-disable-next-line no-param-reassign\n      propDef.description = jsDocParsingResult.description;\n    }\n    var hasParams = extractedTags.params != null;\n    var hasReturns = extractedTags.returns != null && extractedTags.returns.type != null;\n    if (hasParams || hasReturns) {\n      // eslint-disable-next-line no-param-reassign\n      propDef.jsDocTags = {\n        params: hasParams && extractedTags.params.map(function (x) {\n          return {\n            name: x.getPrettyName(),\n            description: x.description\n          };\n        }),\n        returns: hasReturns && {\n          description: extractedTags.returns.description\n        }\n      };\n    }\n  }\n  return propDef;\n}\nexport var javaScriptFactory = function javaScriptFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createBasicPropDef(propName, docgenInfo.type, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var tsFactory = function tsFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createTsPropDef(propName, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var flowFactory = function flowFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createFlowPropDef(propName, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var unknownFactory = function unknownFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createBasicPropDef(propName, {\n    name: 'unknown'\n  }, docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var getPropDefFactory = function getPropDefFactory(typeSystem) {\n  switch (typeSystem) {\n    case TypeSystem.JAVASCRIPT:\n      return javaScriptFactory;\n    case TypeSystem.TYPESCRIPT:\n      return tsFactory;\n    case TypeSystem.FLOW:\n      return flowFactory;\n    default:\n      return unknownFactory;\n  }\n};","map":{"version":3,"names":["TypeSystem","createSummaryValue","createFlowPropDef","isDefaultValueBlacklisted","createTsPropDef","convert","createType","type","name","isReactDocgenTypescript","defaultValue","computed","func","isStringValued","Array","isArray","value","every","_ref","tv","length","createDefaultValue","JSON","stringify","createBasicPropDef","docgenInfo","description","required","applyJsDocResult","propDef","jsDocParsingResult","includesJsDoc","extractedTags","hasParams","params","hasReturns","returns","jsDocTags","map","x","getPrettyName","javaScriptFactory","propName","sbType","tsFactory","flowFactory","unknownFactory","getPropDefFactory","typeSystem","JAVASCRIPT","TYPESCRIPT","FLOW"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/createPropDef.js"],"sourcesContent":["import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { TypeSystem } from './types';\nimport { createSummaryValue } from '../utils';\nimport { createFlowPropDef } from './flow/createPropDef';\nimport { isDefaultValueBlacklisted } from './utils/defaultValue';\nimport { createTsPropDef } from './typeScript/createPropDef';\nimport { convert } from '../convert';\n\nfunction createType(type) {\n  // A type could be null if a defaultProp has been provided without a type definition.\n  return type != null ? createSummaryValue(type.name) : null;\n} // A heuristic to tell if a defaultValue comes from RDT\n\n\nfunction isReactDocgenTypescript(defaultValue) {\n  var computed = defaultValue.computed,\n      func = defaultValue.func;\n  return typeof computed === 'undefined' && typeof func === 'undefined';\n}\n\nfunction isStringValued(type) {\n  if (!type) {\n    return false;\n  }\n\n  if (type.name === 'string') {\n    return true;\n  }\n\n  if (type.name === 'enum') {\n    return Array.isArray(type.value) && type.value.every(function (_ref) {\n      var tv = _ref.value;\n      return typeof tv === 'string' && tv[0] === '\"' && tv[tv.length - 1] === '\"';\n    });\n  }\n\n  return false;\n}\n\nfunction createDefaultValue(defaultValue, type) {\n  if (defaultValue != null) {\n    var value = defaultValue.value;\n\n    if (!isDefaultValueBlacklisted(value)) {\n      // Work around a bug in `react-docgen-typescript-loader`, which returns 'string' for a string\n      // default, instead of \"'string'\" -- which is incorrect\n      if (isReactDocgenTypescript(defaultValue) && isStringValued(type)) {\n        return createSummaryValue(JSON.stringify(value));\n      }\n\n      return createSummaryValue(value);\n    }\n  }\n\n  return null;\n}\n\nfunction createBasicPropDef(name, type, docgenInfo) {\n  var description = docgenInfo.description,\n      required = docgenInfo.required,\n      defaultValue = docgenInfo.defaultValue;\n  return {\n    name: name,\n    type: createType(type),\n    required: required,\n    description: description,\n    defaultValue: createDefaultValue(defaultValue, type)\n  };\n}\n\nfunction applyJsDocResult(propDef, jsDocParsingResult) {\n  if (jsDocParsingResult.includesJsDoc) {\n    var description = jsDocParsingResult.description,\n        extractedTags = jsDocParsingResult.extractedTags;\n\n    if (description != null) {\n      // eslint-disable-next-line no-param-reassign\n      propDef.description = jsDocParsingResult.description;\n    }\n\n    var hasParams = extractedTags.params != null;\n    var hasReturns = extractedTags.returns != null && extractedTags.returns.type != null;\n\n    if (hasParams || hasReturns) {\n      // eslint-disable-next-line no-param-reassign\n      propDef.jsDocTags = {\n        params: hasParams && extractedTags.params.map(function (x) {\n          return {\n            name: x.getPrettyName(),\n            description: x.description\n          };\n        }),\n        returns: hasReturns && {\n          description: extractedTags.returns.description\n        }\n      };\n    }\n  }\n\n  return propDef;\n}\n\nexport var javaScriptFactory = function javaScriptFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createBasicPropDef(propName, docgenInfo.type, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var tsFactory = function tsFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createTsPropDef(propName, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var flowFactory = function flowFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createFlowPropDef(propName, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var unknownFactory = function unknownFactory(propName, docgenInfo, jsDocParsingResult) {\n  var propDef = createBasicPropDef(propName, {\n    name: 'unknown'\n  }, docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport var getPropDefFactory = function getPropDefFactory(typeSystem) {\n  switch (typeSystem) {\n    case TypeSystem.JAVASCRIPT:\n      return javaScriptFactory;\n\n    case TypeSystem.TYPESCRIPT:\n      return tsFactory;\n\n    case TypeSystem.FLOW:\n      return flowFactory;\n\n    default:\n      return unknownFactory;\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}