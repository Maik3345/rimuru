{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar Call = require('./Call');\nvar CompletionRecord = require('./CompletionRecord');\nvar GetMethod = require('./GetMethod');\nvar IsCallable = require('./IsCallable');\nvar Type = require('./Type');\nvar isIteratorRecord = require('../helpers/records/iterator-record');\n\n// https://262.ecma-international.org/14.0/#sec-iteratorclose\n\nmodule.exports = function IteratorClose(iteratorRecord, completion) {\n  if (!isIteratorRecord(iteratorRecord)) {\n    throw new $TypeError('Assertion failed: `iteratorRecord` must be an Iterator Record'); // step 1\n  }\n  if (Type(iteratorRecord['[[Iterator]]']) !== 'Object') {\n    throw new $TypeError('Assertion failed: iteratorRecord.[[Iterator]] must be an Object'); // step 1\n  }\n  if (!IsCallable(completion) && !(completion instanceof CompletionRecord)) {\n    // step 2\n    throw new $TypeError('Assertion failed: completion is not a thunk representing a Completion Record, nor a Completion Record instance');\n  }\n  var completionThunk = completion instanceof CompletionRecord ? function () {\n    return completion['?']();\n  } : completion;\n  var iterator = iteratorRecord['[[Iterator]]']; // step 3\n\n  var iteratorReturn;\n  try {\n    iteratorReturn = GetMethod(iterator, 'return'); // step 4\n  } catch (e) {\n    completionThunk(); // throws if `completion` is a throw completion // step 6\n    completionThunk = null; // ensure it's not called twice.\n    throw e; // step 7\n  }\n  if (typeof iteratorReturn === 'undefined') {\n    return completionThunk(); // step 5.a - 5.b\n  }\n  var innerResult;\n  try {\n    innerResult = Call(iteratorReturn, iterator, []);\n  } catch (e) {\n    // if we hit here, then \"e\" is the innerResult completion that needs re-throwing\n\n    completionThunk(); // throws if `completion` is a throw completion // step 6\n    completionThunk = null; // ensure it's not called twice.\n\n    // if not, then return the innerResult completion\n    throw e; // step 7\n  }\n  var completionRecord = completionThunk(); // if innerResult worked, then throw if the completion does\n  completionThunk = null; // ensure it's not called twice.\n\n  if (Type(innerResult) !== 'Object') {\n    throw new $TypeError('iterator .return must return an object');\n  }\n  return completionRecord;\n};","map":{"version":3,"names":["$TypeError","require","Call","CompletionRecord","GetMethod","IsCallable","Type","isIteratorRecord","module","exports","IteratorClose","iteratorRecord","completion","completionThunk","iterator","iteratorReturn","e","innerResult","completionRecord"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/es-abstract/2023/IteratorClose.js"],"sourcesContent":["'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('./Call');\nvar CompletionRecord = require('./CompletionRecord');\nvar GetMethod = require('./GetMethod');\nvar IsCallable = require('./IsCallable');\nvar Type = require('./Type');\n\nvar isIteratorRecord = require('../helpers/records/iterator-record');\n\n// https://262.ecma-international.org/14.0/#sec-iteratorclose\n\nmodule.exports = function IteratorClose(iteratorRecord, completion) {\n\tif (!isIteratorRecord(iteratorRecord)) {\n\t\tthrow new $TypeError('Assertion failed: `iteratorRecord` must be an Iterator Record'); // step 1\n\t}\n\tif (Type(iteratorRecord['[[Iterator]]']) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: iteratorRecord.[[Iterator]] must be an Object'); // step 1\n\t}\n\n\tif (!IsCallable(completion) && !(completion instanceof CompletionRecord)) { // step 2\n\t\tthrow new $TypeError('Assertion failed: completion is not a thunk representing a Completion Record, nor a Completion Record instance');\n\t}\n\tvar completionThunk = completion instanceof CompletionRecord ? function () { return completion['?'](); } : completion;\n\n\tvar iterator = iteratorRecord['[[Iterator]]']; // step 3\n\n\tvar iteratorReturn;\n\ttry {\n\t\titeratorReturn = GetMethod(iterator, 'return'); // step 4\n\t} catch (e) {\n\t\tcompletionThunk(); // throws if `completion` is a throw completion // step 6\n\t\tcompletionThunk = null; // ensure it's not called twice.\n\t\tthrow e; // step 7\n\t}\n\tif (typeof iteratorReturn === 'undefined') {\n\t\treturn completionThunk(); // step 5.a - 5.b\n\t}\n\n\tvar innerResult;\n\ttry {\n\t\tinnerResult = Call(iteratorReturn, iterator, []);\n\t} catch (e) {\n\t\t// if we hit here, then \"e\" is the innerResult completion that needs re-throwing\n\n\t\tcompletionThunk(); // throws if `completion` is a throw completion // step 6\n\t\tcompletionThunk = null; // ensure it's not called twice.\n\n\t\t// if not, then return the innerResult completion\n\t\tthrow e; // step 7\n\t}\n\tvar completionRecord = completionThunk(); // if innerResult worked, then throw if the completion does\n\tcompletionThunk = null; // ensure it's not called twice.\n\n\tif (Type(innerResult) !== 'Object') {\n\t\tthrow new $TypeError('iterator .return must return an object');\n\t}\n\n\treturn completionRecord;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE1C,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AACpD,IAAIG,SAAS,GAAGH,OAAO,CAAC,aAAa,CAAC;AACtC,IAAII,UAAU,GAAGJ,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIK,IAAI,GAAGL,OAAO,CAAC,QAAQ,CAAC;AAE5B,IAAIM,gBAAgB,GAAGN,OAAO,CAAC,oCAAoC,CAAC;;AAEpE;;AAEAO,MAAM,CAACC,OAAO,GAAG,SAASC,aAAaA,CAACC,cAAc,EAAEC,UAAU,EAAE;EACnE,IAAI,CAACL,gBAAgB,CAACI,cAAc,CAAC,EAAE;IACtC,MAAM,IAAIX,UAAU,CAAC,+DAA+D,CAAC,CAAC,CAAC;EACxF;EACA,IAAIM,IAAI,CAACK,cAAc,CAAC,cAAc,CAAC,CAAC,KAAK,QAAQ,EAAE;IACtD,MAAM,IAAIX,UAAU,CAAC,iEAAiE,CAAC,CAAC,CAAC;EAC1F;EAEA,IAAI,CAACK,UAAU,CAACO,UAAU,CAAC,IAAI,EAAEA,UAAU,YAAYT,gBAAgB,CAAC,EAAE;IAAE;IAC3E,MAAM,IAAIH,UAAU,CAAC,gHAAgH,CAAC;EACvI;EACA,IAAIa,eAAe,GAAGD,UAAU,YAAYT,gBAAgB,GAAG,YAAY;IAAE,OAAOS,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;EAAE,CAAC,GAAGA,UAAU;EAErH,IAAIE,QAAQ,GAAGH,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC;;EAE/C,IAAII,cAAc;EAClB,IAAI;IACHA,cAAc,GAAGX,SAAS,CAACU,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC,OAAOE,CAAC,EAAE;IACXH,eAAe,CAAC,CAAC,CAAC,CAAC;IACnBA,eAAe,GAAG,IAAI,CAAC,CAAC;IACxB,MAAMG,CAAC,CAAC,CAAC;EACV;EACA,IAAI,OAAOD,cAAc,KAAK,WAAW,EAAE;IAC1C,OAAOF,eAAe,CAAC,CAAC,CAAC,CAAC;EAC3B;EAEA,IAAII,WAAW;EACf,IAAI;IACHA,WAAW,GAAGf,IAAI,CAACa,cAAc,EAAED,QAAQ,EAAE,EAAE,CAAC;EACjD,CAAC,CAAC,OAAOE,CAAC,EAAE;IACX;;IAEAH,eAAe,CAAC,CAAC,CAAC,CAAC;IACnBA,eAAe,GAAG,IAAI,CAAC,CAAC;;IAExB;IACA,MAAMG,CAAC,CAAC,CAAC;EACV;EACA,IAAIE,gBAAgB,GAAGL,eAAe,CAAC,CAAC,CAAC,CAAC;EAC1CA,eAAe,GAAG,IAAI,CAAC,CAAC;;EAExB,IAAIP,IAAI,CAACW,WAAW,CAAC,KAAK,QAAQ,EAAE;IACnC,MAAM,IAAIjB,UAAU,CAAC,wCAAwC,CAAC;EAC/D;EAEA,OAAOkB,gBAAgB;AACxB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}