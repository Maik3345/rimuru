{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport React, { useContext } from 'react';\nimport { Source as PureSource, SourceError } from '@storybook/components';\nimport { DocsContext } from './DocsContext';\nimport { SourceContext } from './SourceContainer';\nimport { CURRENT_SELECTION } from './types';\nimport { SourceType } from '../shared';\nimport { enhanceSource } from './enhanceSource';\nimport { useStories } from './useStory';\nexport var SourceState;\n(function (SourceState) {\n  SourceState[\"OPEN\"] = \"open\";\n  SourceState[\"CLOSED\"] = \"closed\";\n  SourceState[\"NONE\"] = \"none\";\n})(SourceState || (SourceState = {}));\nvar getSourceState = function getSourceState(stories) {\n  var states = stories.map(function (story) {\n    var _story$parameters$doc, _story$parameters$doc2;\n    return (_story$parameters$doc = story.parameters.docs) === null || _story$parameters$doc === void 0 ? void 0 : (_story$parameters$doc2 = _story$parameters$doc.source) === null || _story$parameters$doc2 === void 0 ? void 0 : _story$parameters$doc2.state;\n  }).filter(Boolean);\n  if (states.length === 0) return SourceState.CLOSED; // FIXME: handling multiple stories is a pain\n\n  return states[0];\n};\nvar getStorySource = function getStorySource(storyId, sourceContext) {\n  var sources = sourceContext.sources; // source rendering is async so source is unavailable at the start of the render cycle,\n  // so we fail gracefully here without warning\n\n  return (sources === null || sources === void 0 ? void 0 : sources[storyId]) || {\n    code: '',\n    format: false\n  };\n};\nvar getSnippet = function getSnippet(snippet, story) {\n  var _parameters$docs, _parameters$docs$sour, _parameters$docs2, _parameters$docs2$sou, _enhanced$docs, _enhanced$docs$source;\n  if (!story) {\n    return snippet;\n  }\n  var parameters = story.parameters; // eslint-disable-next-line no-underscore-dangle\n\n  var isArgsStory = parameters.__isArgsStory;\n  var type = ((_parameters$docs = parameters.docs) === null || _parameters$docs === void 0 ? void 0 : (_parameters$docs$sour = _parameters$docs.source) === null || _parameters$docs$sour === void 0 ? void 0 : _parameters$docs$sour.type) || SourceType.AUTO; // if user has hard-coded the snippet, that takes precedence\n\n  var userCode = (_parameters$docs2 = parameters.docs) === null || _parameters$docs2 === void 0 ? void 0 : (_parameters$docs2$sou = _parameters$docs2.source) === null || _parameters$docs2$sou === void 0 ? void 0 : _parameters$docs2$sou.code;\n  if (userCode !== undefined) {\n    return userCode;\n  } // if user has explicitly set this as dynamic, use snippet\n\n  if (type === SourceType.DYNAMIC) {\n    var _parameters$docs3, _parameters$docs3$tra;\n    return ((_parameters$docs3 = parameters.docs) === null || _parameters$docs3 === void 0 ? void 0 : (_parameters$docs3$tra = _parameters$docs3.transformSource) === null || _parameters$docs3$tra === void 0 ? void 0 : _parameters$docs3$tra.call(_parameters$docs3, snippet, story)) || snippet;\n  } // if this is an args story and there's a snippet\n\n  if (type === SourceType.AUTO && snippet && isArgsStory) {\n    var _parameters$docs4, _parameters$docs4$tra;\n    return ((_parameters$docs4 = parameters.docs) === null || _parameters$docs4 === void 0 ? void 0 : (_parameters$docs4$tra = _parameters$docs4.transformSource) === null || _parameters$docs4$tra === void 0 ? void 0 : _parameters$docs4$tra.call(_parameters$docs4, snippet, story)) || snippet;\n  } // otherwise, use the source code logic\n\n  var enhanced = enhanceSource(story) || parameters;\n  return (enhanced === null || enhanced === void 0 ? void 0 : (_enhanced$docs = enhanced.docs) === null || _enhanced$docs === void 0 ? void 0 : (_enhanced$docs$source = _enhanced$docs.source) === null || _enhanced$docs$source === void 0 ? void 0 : _enhanced$docs$source.code) || '';\n};\nexport var getSourceProps = function getSourceProps(props, docsContext, sourceContext) {\n  var currentId = docsContext.id,\n    storyById = docsContext.storyById;\n  var _storyById = storyById(currentId),\n    parameters = _storyById.parameters;\n  var codeProps = props;\n  var singleProps = props;\n  var multiProps = props;\n  var source = codeProps.code; // prefer user-specified code\n\n  var format = codeProps.format; // prefer user-specified code\n\n  var targetIds = multiProps.ids || [singleProps.id || currentId];\n  var storyIds = targetIds.map(function (targetId) {\n    return targetId === CURRENT_SELECTION ? currentId : targetId;\n  });\n  var stories = useStories(storyIds, docsContext);\n  if (!stories.every(Boolean)) {\n    return {\n      error: SourceError.SOURCE_UNAVAILABLE,\n      state: SourceState.NONE\n    };\n  }\n  if (!source) {\n    // just take the format from the first story, given how they're all concatinated together...\n    // TODO: we should consider sending an event with all the sources separately, instead of concatenating them here\n    var _getStorySource = getStorySource(storyIds[0], sourceContext);\n    format = _getStorySource.format;\n    source = storyIds.map(function (storyId, idx) {\n      var _getStorySource2 = getStorySource(storyId, sourceContext),\n        storySource = _getStorySource2.code;\n      var storyObj = stories[idx];\n      return getSnippet(storySource, storyObj);\n    }).join('\\n\\n');\n  }\n  var state = getSourceState(stories);\n  var _parameters$docs5 = parameters.docs,\n    docsParameters = _parameters$docs5 === void 0 ? {} : _parameters$docs5;\n  var _docsParameters$sourc = docsParameters.source,\n    sourceParameters = _docsParameters$sourc === void 0 ? {} : _docsParameters$sourc;\n  var _sourceParameters$lan = sourceParameters.language,\n    docsLanguage = _sourceParameters$lan === void 0 ? null : _sourceParameters$lan;\n  return source ? {\n    code: source,\n    state: state,\n    format: format,\n    language: props.language || docsLanguage || 'jsx',\n    dark: props.dark || false\n  } : {\n    error: SourceError.SOURCE_UNAVAILABLE,\n    state: state\n  };\n};\n/**\n * Story source doc block renders source code if provided,\n * or the source for a story if `storyId` is provided, or\n * the source for the current story if nothing is provided.\n */\n\nexport var Source = function Source(props) {\n  var sourceContext = useContext(SourceContext);\n  var docsContext = useContext(DocsContext);\n  var sourceProps = getSourceProps(props, docsContext, sourceContext);\n  return /*#__PURE__*/React.createElement(PureSource, sourceProps);\n};","map":{"version":3,"names":["React","useContext","Source","PureSource","SourceError","DocsContext","SourceContext","CURRENT_SELECTION","SourceType","enhanceSource","useStories","SourceState","getSourceState","stories","states","map","story","_story$parameters$doc","_story$parameters$doc2","parameters","docs","source","state","filter","Boolean","length","CLOSED","getStorySource","storyId","sourceContext","sources","code","format","getSnippet","snippet","_parameters$docs","_parameters$docs$sour","_parameters$docs2","_parameters$docs2$sou","_enhanced$docs","_enhanced$docs$source","isArgsStory","__isArgsStory","type","AUTO","userCode","undefined","DYNAMIC","_parameters$docs3","_parameters$docs3$tra","transformSource","call","_parameters$docs4","_parameters$docs4$tra","enhanced","getSourceProps","props","docsContext","currentId","id","storyById","_storyById","codeProps","singleProps","multiProps","targetIds","ids","storyIds","targetId","every","error","SOURCE_UNAVAILABLE","NONE","_getStorySource","idx","_getStorySource2","storySource","storyObj","join","_parameters$docs5","docsParameters","_docsParameters$sourc","sourceParameters","_sourceParameters$lan","language","docsLanguage","dark","sourceProps","createElement"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/@storybook/addon-docs/dist/esm/blocks/Source.js"],"sourcesContent":["import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport React, { useContext } from 'react';\nimport { Source as PureSource, SourceError } from '@storybook/components';\nimport { DocsContext } from './DocsContext';\nimport { SourceContext } from './SourceContainer';\nimport { CURRENT_SELECTION } from './types';\nimport { SourceType } from '../shared';\nimport { enhanceSource } from './enhanceSource';\nimport { useStories } from './useStory';\nexport var SourceState;\n\n(function (SourceState) {\n  SourceState[\"OPEN\"] = \"open\";\n  SourceState[\"CLOSED\"] = \"closed\";\n  SourceState[\"NONE\"] = \"none\";\n})(SourceState || (SourceState = {}));\n\nvar getSourceState = function getSourceState(stories) {\n  var states = stories.map(function (story) {\n    var _story$parameters$doc, _story$parameters$doc2;\n\n    return (_story$parameters$doc = story.parameters.docs) === null || _story$parameters$doc === void 0 ? void 0 : (_story$parameters$doc2 = _story$parameters$doc.source) === null || _story$parameters$doc2 === void 0 ? void 0 : _story$parameters$doc2.state;\n  }).filter(Boolean);\n  if (states.length === 0) return SourceState.CLOSED; // FIXME: handling multiple stories is a pain\n\n  return states[0];\n};\n\nvar getStorySource = function getStorySource(storyId, sourceContext) {\n  var sources = sourceContext.sources; // source rendering is async so source is unavailable at the start of the render cycle,\n  // so we fail gracefully here without warning\n\n  return (sources === null || sources === void 0 ? void 0 : sources[storyId]) || {\n    code: '',\n    format: false\n  };\n};\n\nvar getSnippet = function getSnippet(snippet, story) {\n  var _parameters$docs, _parameters$docs$sour, _parameters$docs2, _parameters$docs2$sou, _enhanced$docs, _enhanced$docs$source;\n\n  if (!story) {\n    return snippet;\n  }\n\n  var parameters = story.parameters; // eslint-disable-next-line no-underscore-dangle\n\n  var isArgsStory = parameters.__isArgsStory;\n  var type = ((_parameters$docs = parameters.docs) === null || _parameters$docs === void 0 ? void 0 : (_parameters$docs$sour = _parameters$docs.source) === null || _parameters$docs$sour === void 0 ? void 0 : _parameters$docs$sour.type) || SourceType.AUTO; // if user has hard-coded the snippet, that takes precedence\n\n  var userCode = (_parameters$docs2 = parameters.docs) === null || _parameters$docs2 === void 0 ? void 0 : (_parameters$docs2$sou = _parameters$docs2.source) === null || _parameters$docs2$sou === void 0 ? void 0 : _parameters$docs2$sou.code;\n\n  if (userCode !== undefined) {\n    return userCode;\n  } // if user has explicitly set this as dynamic, use snippet\n\n\n  if (type === SourceType.DYNAMIC) {\n    var _parameters$docs3, _parameters$docs3$tra;\n\n    return ((_parameters$docs3 = parameters.docs) === null || _parameters$docs3 === void 0 ? void 0 : (_parameters$docs3$tra = _parameters$docs3.transformSource) === null || _parameters$docs3$tra === void 0 ? void 0 : _parameters$docs3$tra.call(_parameters$docs3, snippet, story)) || snippet;\n  } // if this is an args story and there's a snippet\n\n\n  if (type === SourceType.AUTO && snippet && isArgsStory) {\n    var _parameters$docs4, _parameters$docs4$tra;\n\n    return ((_parameters$docs4 = parameters.docs) === null || _parameters$docs4 === void 0 ? void 0 : (_parameters$docs4$tra = _parameters$docs4.transformSource) === null || _parameters$docs4$tra === void 0 ? void 0 : _parameters$docs4$tra.call(_parameters$docs4, snippet, story)) || snippet;\n  } // otherwise, use the source code logic\n\n\n  var enhanced = enhanceSource(story) || parameters;\n  return (enhanced === null || enhanced === void 0 ? void 0 : (_enhanced$docs = enhanced.docs) === null || _enhanced$docs === void 0 ? void 0 : (_enhanced$docs$source = _enhanced$docs.source) === null || _enhanced$docs$source === void 0 ? void 0 : _enhanced$docs$source.code) || '';\n};\n\nexport var getSourceProps = function getSourceProps(props, docsContext, sourceContext) {\n  var currentId = docsContext.id,\n      storyById = docsContext.storyById;\n\n  var _storyById = storyById(currentId),\n      parameters = _storyById.parameters;\n\n  var codeProps = props;\n  var singleProps = props;\n  var multiProps = props;\n  var source = codeProps.code; // prefer user-specified code\n\n  var format = codeProps.format; // prefer user-specified code\n\n  var targetIds = multiProps.ids || [singleProps.id || currentId];\n  var storyIds = targetIds.map(function (targetId) {\n    return targetId === CURRENT_SELECTION ? currentId : targetId;\n  });\n  var stories = useStories(storyIds, docsContext);\n\n  if (!stories.every(Boolean)) {\n    return {\n      error: SourceError.SOURCE_UNAVAILABLE,\n      state: SourceState.NONE\n    };\n  }\n\n  if (!source) {\n    // just take the format from the first story, given how they're all concatinated together...\n    // TODO: we should consider sending an event with all the sources separately, instead of concatenating them here\n    var _getStorySource = getStorySource(storyIds[0], sourceContext);\n\n    format = _getStorySource.format;\n    source = storyIds.map(function (storyId, idx) {\n      var _getStorySource2 = getStorySource(storyId, sourceContext),\n          storySource = _getStorySource2.code;\n\n      var storyObj = stories[idx];\n      return getSnippet(storySource, storyObj);\n    }).join('\\n\\n');\n  }\n\n  var state = getSourceState(stories);\n  var _parameters$docs5 = parameters.docs,\n      docsParameters = _parameters$docs5 === void 0 ? {} : _parameters$docs5;\n  var _docsParameters$sourc = docsParameters.source,\n      sourceParameters = _docsParameters$sourc === void 0 ? {} : _docsParameters$sourc;\n  var _sourceParameters$lan = sourceParameters.language,\n      docsLanguage = _sourceParameters$lan === void 0 ? null : _sourceParameters$lan;\n  return source ? {\n    code: source,\n    state: state,\n    format: format,\n    language: props.language || docsLanguage || 'jsx',\n    dark: props.dark || false\n  } : {\n    error: SourceError.SOURCE_UNAVAILABLE,\n    state: state\n  };\n};\n/**\n * Story source doc block renders source code if provided,\n * or the source for a story if `storyId` is provided, or\n * the source for the current story if nothing is provided.\n */\n\nexport var Source = function Source(props) {\n  var sourceContext = useContext(SourceContext);\n  var docsContext = useContext(DocsContext);\n  var sourceProps = getSourceProps(props, docsContext, sourceContext);\n  return /*#__PURE__*/React.createElement(PureSource, sourceProps);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}