{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport mapValues from 'lodash/mapValues';\nimport { logger } from '@storybook/client-logger';\nimport { filterArgTypes } from './filterArgTypes';\nimport { combineParameters } from './parameters';\nvar inferControl = function inferControl(argType, name, matchers) {\n  var type = argType.type,\n    options = argType.options;\n  if (!type && !options) {\n    return undefined;\n  } // args that end with background or color e.g. iconColor\n\n  if (matchers.color && matchers.color.test(name)) {\n    var controlType = argType.type.name;\n    if (controlType === 'string') {\n      return {\n        control: {\n          type: 'color'\n        }\n      };\n    }\n    logger.warn(\"Addon controls: Control of type color only supports string, received \\\"\".concat(controlType, \"\\\" instead\"));\n  } // args that end with date e.g. purchaseDate\n\n  if (matchers.date && matchers.date.test(name)) {\n    return {\n      control: {\n        type: 'date'\n      }\n    };\n  }\n  switch (type.name) {\n    case 'array':\n      return {\n        control: {\n          type: 'object'\n        }\n      };\n    case 'boolean':\n      return {\n        control: {\n          type: 'boolean'\n        }\n      };\n    case 'string':\n      return {\n        control: {\n          type: 'text'\n        }\n      };\n    case 'number':\n      return {\n        control: {\n          type: 'number'\n        }\n      };\n    case 'enum':\n      {\n        var _ref = type,\n          value = _ref.value;\n        return {\n          control: {\n            type: (value === null || value === void 0 ? void 0 : value.length) <= 5 ? 'radio' : 'select'\n          },\n          options: value\n        };\n      }\n    case 'function':\n    case 'symbol':\n      return null;\n    default:\n      return {\n        control: {\n          type: options ? 'select' : 'object'\n        }\n      };\n  }\n};\nexport var inferControls = function inferControls(context) {\n  var argTypes = context.argTypes,\n    _context$parameters = context.parameters,\n    __isArgsStory = _context$parameters.__isArgsStory,\n    _context$parameters$c = _context$parameters.controls;\n  _context$parameters$c = _context$parameters$c === void 0 ? {} : _context$parameters$c;\n  var _context$parameters$c2 = _context$parameters$c.include,\n    include = _context$parameters$c2 === void 0 ? null : _context$parameters$c2,\n    _context$parameters$c3 = _context$parameters$c.exclude,\n    exclude = _context$parameters$c3 === void 0 ? null : _context$parameters$c3,\n    _context$parameters$c4 = _context$parameters$c.matchers,\n    matchers = _context$parameters$c4 === void 0 ? {} : _context$parameters$c4;\n  if (!__isArgsStory) return argTypes;\n  var filteredArgTypes = filterArgTypes(argTypes, include, exclude);\n  var withControls = mapValues(filteredArgTypes, function (argType, name) {\n    return (argType === null || argType === void 0 ? void 0 : argType.type) && inferControl(argType, name, matchers);\n  });\n  return combineParameters(withControls, filteredArgTypes);\n};\ninferControls.secondPass = true;\nexport var argTypesEnhancers = [inferControls];","map":{"version":3,"names":["mapValues","logger","filterArgTypes","combineParameters","inferControl","argType","name","matchers","type","options","undefined","color","test","controlType","control","warn","concat","date","_ref","value","length","inferControls","context","argTypes","_context$parameters","parameters","__isArgsStory","_context$parameters$c","controls","_context$parameters$c2","include","_context$parameters$c3","exclude","_context$parameters$c4","filteredArgTypes","withControls","secondPass","argTypesEnhancers"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/@storybook/store/dist/esm/inferControls.js"],"sourcesContent":["import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport mapValues from 'lodash/mapValues';\nimport { logger } from '@storybook/client-logger';\nimport { filterArgTypes } from './filterArgTypes';\nimport { combineParameters } from './parameters';\n\nvar inferControl = function inferControl(argType, name, matchers) {\n  var type = argType.type,\n      options = argType.options;\n\n  if (!type && !options) {\n    return undefined;\n  } // args that end with background or color e.g. iconColor\n\n\n  if (matchers.color && matchers.color.test(name)) {\n    var controlType = argType.type.name;\n\n    if (controlType === 'string') {\n      return {\n        control: {\n          type: 'color'\n        }\n      };\n    }\n\n    logger.warn(\"Addon controls: Control of type color only supports string, received \\\"\".concat(controlType, \"\\\" instead\"));\n  } // args that end with date e.g. purchaseDate\n\n\n  if (matchers.date && matchers.date.test(name)) {\n    return {\n      control: {\n        type: 'date'\n      }\n    };\n  }\n\n  switch (type.name) {\n    case 'array':\n      return {\n        control: {\n          type: 'object'\n        }\n      };\n\n    case 'boolean':\n      return {\n        control: {\n          type: 'boolean'\n        }\n      };\n\n    case 'string':\n      return {\n        control: {\n          type: 'text'\n        }\n      };\n\n    case 'number':\n      return {\n        control: {\n          type: 'number'\n        }\n      };\n\n    case 'enum':\n      {\n        var _ref = type,\n            value = _ref.value;\n        return {\n          control: {\n            type: (value === null || value === void 0 ? void 0 : value.length) <= 5 ? 'radio' : 'select'\n          },\n          options: value\n        };\n      }\n\n    case 'function':\n    case 'symbol':\n      return null;\n\n    default:\n      return {\n        control: {\n          type: options ? 'select' : 'object'\n        }\n      };\n  }\n};\n\nexport var inferControls = function inferControls(context) {\n  var argTypes = context.argTypes,\n      _context$parameters = context.parameters,\n      __isArgsStory = _context$parameters.__isArgsStory,\n      _context$parameters$c = _context$parameters.controls;\n  _context$parameters$c = _context$parameters$c === void 0 ? {} : _context$parameters$c;\n  var _context$parameters$c2 = _context$parameters$c.include,\n      include = _context$parameters$c2 === void 0 ? null : _context$parameters$c2,\n      _context$parameters$c3 = _context$parameters$c.exclude,\n      exclude = _context$parameters$c3 === void 0 ? null : _context$parameters$c3,\n      _context$parameters$c4 = _context$parameters$c.matchers,\n      matchers = _context$parameters$c4 === void 0 ? {} : _context$parameters$c4;\n  if (!__isArgsStory) return argTypes;\n  var filteredArgTypes = filterArgTypes(argTypes, include, exclude);\n  var withControls = mapValues(filteredArgTypes, function (argType, name) {\n    return (argType === null || argType === void 0 ? void 0 : argType.type) && inferControl(argType, name, matchers);\n  });\n  return combineParameters(withControls, filteredArgTypes);\n};\ninferControls.secondPass = true;\nexport var argTypesEnhancers = [inferControls];"],"mappings":"AAAA,OAAO,mCAAmC;AAC1C,OAAO,qCAAqC;AAC5C,OAAOA,SAAS,MAAM,kBAAkB;AACxC,SAASC,MAAM,QAAQ,0BAA0B;AACjD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,iBAAiB,QAAQ,cAAc;AAEhD,IAAIC,YAAY,GAAG,SAASA,YAAYA,CAACC,OAAO,EAAEC,IAAI,EAAEC,QAAQ,EAAE;EAChE,IAAIC,IAAI,GAAGH,OAAO,CAACG,IAAI;IACnBC,OAAO,GAAGJ,OAAO,CAACI,OAAO;EAE7B,IAAI,CAACD,IAAI,IAAI,CAACC,OAAO,EAAE;IACrB,OAAOC,SAAS;EAClB,CAAC,CAAC;;EAGF,IAAIH,QAAQ,CAACI,KAAK,IAAIJ,QAAQ,CAACI,KAAK,CAACC,IAAI,CAACN,IAAI,CAAC,EAAE;IAC/C,IAAIO,WAAW,GAAGR,OAAO,CAACG,IAAI,CAACF,IAAI;IAEnC,IAAIO,WAAW,KAAK,QAAQ,EAAE;MAC5B,OAAO;QACLC,OAAO,EAAE;UACPN,IAAI,EAAE;QACR;MACF,CAAC;IACH;IAEAP,MAAM,CAACc,IAAI,CAAC,yEAAyE,CAACC,MAAM,CAACH,WAAW,EAAE,YAAY,CAAC,CAAC;EAC1H,CAAC,CAAC;;EAGF,IAAIN,QAAQ,CAACU,IAAI,IAAIV,QAAQ,CAACU,IAAI,CAACL,IAAI,CAACN,IAAI,CAAC,EAAE;IAC7C,OAAO;MACLQ,OAAO,EAAE;QACPN,IAAI,EAAE;MACR;IACF,CAAC;EACH;EAEA,QAAQA,IAAI,CAACF,IAAI;IACf,KAAK,OAAO;MACV,OAAO;QACLQ,OAAO,EAAE;UACPN,IAAI,EAAE;QACR;MACF,CAAC;IAEH,KAAK,SAAS;MACZ,OAAO;QACLM,OAAO,EAAE;UACPN,IAAI,EAAE;QACR;MACF,CAAC;IAEH,KAAK,QAAQ;MACX,OAAO;QACLM,OAAO,EAAE;UACPN,IAAI,EAAE;QACR;MACF,CAAC;IAEH,KAAK,QAAQ;MACX,OAAO;QACLM,OAAO,EAAE;UACPN,IAAI,EAAE;QACR;MACF,CAAC;IAEH,KAAK,MAAM;MACT;QACE,IAAIU,IAAI,GAAGV,IAAI;UACXW,KAAK,GAAGD,IAAI,CAACC,KAAK;QACtB,OAAO;UACLL,OAAO,EAAE;YACPN,IAAI,EAAE,CAACW,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACC,MAAM,KAAK,CAAC,GAAG,OAAO,GAAG;UACtF,CAAC;UACDX,OAAO,EAAEU;QACX,CAAC;MACH;IAEF,KAAK,UAAU;IACf,KAAK,QAAQ;MACX,OAAO,IAAI;IAEb;MACE,OAAO;QACLL,OAAO,EAAE;UACPN,IAAI,EAAEC,OAAO,GAAG,QAAQ,GAAG;QAC7B;MACF,CAAC;EACL;AACF,CAAC;AAED,OAAO,IAAIY,aAAa,GAAG,SAASA,aAAaA,CAACC,OAAO,EAAE;EACzD,IAAIC,QAAQ,GAAGD,OAAO,CAACC,QAAQ;IAC3BC,mBAAmB,GAAGF,OAAO,CAACG,UAAU;IACxCC,aAAa,GAAGF,mBAAmB,CAACE,aAAa;IACjDC,qBAAqB,GAAGH,mBAAmB,CAACI,QAAQ;EACxDD,qBAAqB,GAAGA,qBAAqB,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,qBAAqB;EACrF,IAAIE,sBAAsB,GAAGF,qBAAqB,CAACG,OAAO;IACtDA,OAAO,GAAGD,sBAAsB,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,sBAAsB;IAC3EE,sBAAsB,GAAGJ,qBAAqB,CAACK,OAAO;IACtDA,OAAO,GAAGD,sBAAsB,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGA,sBAAsB;IAC3EE,sBAAsB,GAAGN,qBAAqB,CAACpB,QAAQ;IACvDA,QAAQ,GAAG0B,sBAAsB,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,sBAAsB;EAC9E,IAAI,CAACP,aAAa,EAAE,OAAOH,QAAQ;EACnC,IAAIW,gBAAgB,GAAGhC,cAAc,CAACqB,QAAQ,EAAEO,OAAO,EAAEE,OAAO,CAAC;EACjE,IAAIG,YAAY,GAAGnC,SAAS,CAACkC,gBAAgB,EAAE,UAAU7B,OAAO,EAAEC,IAAI,EAAE;IACtE,OAAO,CAACD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,IAAI,KAAKJ,YAAY,CAACC,OAAO,EAAEC,IAAI,EAAEC,QAAQ,CAAC;EAClH,CAAC,CAAC;EACF,OAAOJ,iBAAiB,CAACgC,YAAY,EAAED,gBAAgB,CAAC;AAC1D,CAAC;AACDb,aAAa,CAACe,UAAU,GAAG,IAAI;AAC/B,OAAO,IAAIC,iBAAiB,GAAG,CAAChB,aAAa,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}