{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $preventExtensions = GetIntrinsic('%Object.preventExtensions%', true);\nvar $isExtensible = GetIntrinsic('%Object.isExtensible%', true);\nvar isPrimitive = require('../helpers/isPrimitive');\n\n// https://262.ecma-international.org/6.0/#sec-isextensible-o\n\nmodule.exports = $preventExtensions ? function IsExtensible(obj) {\n  return !isPrimitive(obj) && $isExtensible(obj);\n} : function IsExtensible(obj) {\n  return !isPrimitive(obj);\n};","map":{"version":3,"names":["GetIntrinsic","require","$preventExtensions","$isExtensible","isPrimitive","module","exports","IsExtensible","obj"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/es-abstract/2023/IsExtensible.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $preventExtensions = GetIntrinsic('%Object.preventExtensions%', true);\nvar $isExtensible = GetIntrinsic('%Object.isExtensible%', true);\n\nvar isPrimitive = require('../helpers/isPrimitive');\n\n// https://262.ecma-international.org/6.0/#sec-isextensible-o\n\nmodule.exports = $preventExtensions\n\t? function IsExtensible(obj) {\n\t\treturn !isPrimitive(obj) && $isExtensible(obj);\n\t}\n\t: function IsExtensible(obj) {\n\t\treturn !isPrimitive(obj);\n\t};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAIC,kBAAkB,GAAGF,YAAY,CAAC,4BAA4B,EAAE,IAAI,CAAC;AACzE,IAAIG,aAAa,GAAGH,YAAY,CAAC,uBAAuB,EAAE,IAAI,CAAC;AAE/D,IAAII,WAAW,GAAGH,OAAO,CAAC,wBAAwB,CAAC;;AAEnD;;AAEAI,MAAM,CAACC,OAAO,GAAGJ,kBAAkB,GAChC,SAASK,YAAYA,CAACC,GAAG,EAAE;EAC5B,OAAO,CAACJ,WAAW,CAACI,GAAG,CAAC,IAAIL,aAAa,CAACK,GAAG,CAAC;AAC/C,CAAC,GACC,SAASD,YAAYA,CAACC,GAAG,EAAE;EAC5B,OAAO,CAACJ,WAAW,CAACI,GAAG,CAAC;AACzB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}