{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar regexExec = require('call-bind/callBound')('RegExp.prototype.exec');\nvar Call = require('./Call');\nvar Get = require('./Get');\nvar IsCallable = require('./IsCallable');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-regexpexec\n\nmodule.exports = function RegExpExec(R, S) {\n  if (Type(R) !== 'Object') {\n    throw new $TypeError('Assertion failed: `R` must be an Object');\n  }\n  if (typeof S !== 'string') {\n    throw new $TypeError('Assertion failed: `S` must be a String');\n  }\n  var exec = Get(R, 'exec');\n  if (IsCallable(exec)) {\n    var result = Call(exec, R, [S]);\n    if (typeof result === 'object') {\n      return result;\n    }\n    throw new $TypeError('\"exec\" method must return `null` or an Object');\n  }\n  return regexExec(R, S);\n};","map":{"version":3,"names":["$TypeError","require","regexExec","Call","Get","IsCallable","Type","module","exports","RegExpExec","R","S","exec","result"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/es-abstract/2023/RegExpExec.js"],"sourcesContent":["'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar regexExec = require('call-bind/callBound')('RegExp.prototype.exec');\n\nvar Call = require('./Call');\nvar Get = require('./Get');\nvar IsCallable = require('./IsCallable');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-regexpexec\n\nmodule.exports = function RegExpExec(R, S) {\n\tif (Type(R) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `R` must be an Object');\n\t}\n\tif (typeof S !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `S` must be a String');\n\t}\n\tvar exec = Get(R, 'exec');\n\tif (IsCallable(exec)) {\n\t\tvar result = Call(exec, R, [S]);\n\t\tif (typeof result === 'object') {\n\t\t\treturn result;\n\t\t}\n\t\tthrow new $TypeError('\"exec\" method must return `null` or an Object');\n\t}\n\treturn regexExec(R, S);\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAE1C,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC,CAAC,uBAAuB,CAAC;AAEvE,IAAIE,IAAI,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIG,GAAG,GAAGH,OAAO,CAAC,OAAO,CAAC;AAC1B,IAAII,UAAU,GAAGJ,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIK,IAAI,GAAGL,OAAO,CAAC,QAAQ,CAAC;;AAE5B;;AAEAM,MAAM,CAACC,OAAO,GAAG,SAASC,UAAUA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC1C,IAAIL,IAAI,CAACI,CAAC,CAAC,KAAK,QAAQ,EAAE;IACzB,MAAM,IAAIV,UAAU,CAAC,yCAAyC,CAAC;EAChE;EACA,IAAI,OAAOW,CAAC,KAAK,QAAQ,EAAE;IAC1B,MAAM,IAAIX,UAAU,CAAC,wCAAwC,CAAC;EAC/D;EACA,IAAIY,IAAI,GAAGR,GAAG,CAACM,CAAC,EAAE,MAAM,CAAC;EACzB,IAAIL,UAAU,CAACO,IAAI,CAAC,EAAE;IACrB,IAAIC,MAAM,GAAGV,IAAI,CAACS,IAAI,EAAEF,CAAC,EAAE,CAACC,CAAC,CAAC,CAAC;IAC/B,IAAI,OAAOE,MAAM,KAAK,QAAQ,EAAE;MAC/B,OAAOA,MAAM;IACd;IACA,MAAM,IAAIb,UAAU,CAAC,+CAA+C,CAAC;EACtE;EACA,OAAOE,SAAS,CAACQ,CAAC,EAAEC,CAAC,CAAC;AACvB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}