{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar hasSymbols = require('has-symbols')();\nvar $TypeError = require('es-errors/type');\nvar IteratorPrototype = GetIntrinsic('%IteratorPrototype%', true);\nvar AdvanceStringIndex = require('./AdvanceStringIndex');\nvar CreateIterResultObject = require('./CreateIterResultObject');\nvar CreateMethodProperty = require('./CreateMethodProperty');\nvar Get = require('./Get');\nvar OrdinaryObjectCreate = require('./OrdinaryObjectCreate');\nvar RegExpExec = require('./RegExpExec');\nvar Set = require('./Set');\nvar ToLength = require('./ToLength');\nvar ToString = require('./ToString');\nvar Type = require('./Type');\nvar SLOT = require('internal-slot');\nvar setToStringTag = require('es-set-tostringtag');\nvar RegExpStringIterator = function RegExpStringIterator(R, S, global, fullUnicode) {\n  if (typeof S !== 'string') {\n    throw new $TypeError('`S` must be a string');\n  }\n  if (typeof global !== 'boolean') {\n    throw new $TypeError('`global` must be a boolean');\n  }\n  if (typeof fullUnicode !== 'boolean') {\n    throw new $TypeError('`fullUnicode` must be a boolean');\n  }\n  SLOT.set(this, '[[IteratingRegExp]]', R);\n  SLOT.set(this, '[[IteratedString]]', S);\n  SLOT.set(this, '[[Global]]', global);\n  SLOT.set(this, '[[Unicode]]', fullUnicode);\n  SLOT.set(this, '[[Done]]', false);\n};\nif (IteratorPrototype) {\n  RegExpStringIterator.prototype = OrdinaryObjectCreate(IteratorPrototype);\n}\nvar RegExpStringIteratorNext = function next() {\n  var O = this; // eslint-disable-line no-invalid-this\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('receiver must be an object');\n  }\n  if (!(O instanceof RegExpStringIterator) || !SLOT.has(O, '[[IteratingRegExp]]') || !SLOT.has(O, '[[IteratedString]]') || !SLOT.has(O, '[[Global]]') || !SLOT.has(O, '[[Unicode]]') || !SLOT.has(O, '[[Done]]')) {\n    throw new $TypeError('\"this\" value must be a RegExpStringIterator instance');\n  }\n  if (SLOT.get(O, '[[Done]]')) {\n    return CreateIterResultObject(undefined, true);\n  }\n  var R = SLOT.get(O, '[[IteratingRegExp]]');\n  var S = SLOT.get(O, '[[IteratedString]]');\n  var global = SLOT.get(O, '[[Global]]');\n  var fullUnicode = SLOT.get(O, '[[Unicode]]');\n  var match = RegExpExec(R, S);\n  if (match === null) {\n    SLOT.set(O, '[[Done]]', true);\n    return CreateIterResultObject(undefined, true);\n  }\n  if (global) {\n    var matchStr = ToString(Get(match, '0'));\n    if (matchStr === '') {\n      var thisIndex = ToLength(Get(R, 'lastIndex'));\n      var nextIndex = AdvanceStringIndex(S, thisIndex, fullUnicode);\n      Set(R, 'lastIndex', nextIndex, true);\n    }\n    return CreateIterResultObject(match, false);\n  }\n  SLOT.set(O, '[[Done]]', true);\n  return CreateIterResultObject(match, false);\n};\nCreateMethodProperty(RegExpStringIterator.prototype, 'next', RegExpStringIteratorNext);\nif (hasSymbols) {\n  setToStringTag(RegExpStringIterator.prototype, 'RegExp String Iterator');\n  if (Symbol.iterator && typeof RegExpStringIterator.prototype[Symbol.iterator] !== 'function') {\n    var iteratorFn = function SymbolIterator() {\n      return this;\n    };\n    CreateMethodProperty(RegExpStringIterator.prototype, Symbol.iterator, iteratorFn);\n  }\n}\n\n// https://262.ecma-international.org/11.0/#sec-createregexpstringiterator\nmodule.exports = function CreateRegExpStringIterator(R, S, global, fullUnicode) {\n  // assert R.global === global && R.unicode === fullUnicode?\n  return new RegExpStringIterator(R, S, global, fullUnicode);\n};","map":{"version":3,"names":["GetIntrinsic","require","hasSymbols","$TypeError","IteratorPrototype","AdvanceStringIndex","CreateIterResultObject","CreateMethodProperty","Get","OrdinaryObjectCreate","RegExpExec","Set","ToLength","ToString","Type","SLOT","setToStringTag","RegExpStringIterator","R","S","global","fullUnicode","set","prototype","RegExpStringIteratorNext","next","O","has","get","undefined","match","matchStr","thisIndex","nextIndex","Symbol","iterator","iteratorFn","SymbolIterator","module","exports","CreateRegExpStringIterator"],"sources":["/Users/michael.restrepo/code/personal/web-components/rimuru/node_modules/es-abstract/2023/CreateRegExpStringIterator.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar hasSymbols = require('has-symbols')();\n\nvar $TypeError = require('es-errors/type');\nvar IteratorPrototype = GetIntrinsic('%IteratorPrototype%', true);\n\nvar AdvanceStringIndex = require('./AdvanceStringIndex');\nvar CreateIterResultObject = require('./CreateIterResultObject');\nvar CreateMethodProperty = require('./CreateMethodProperty');\nvar Get = require('./Get');\nvar OrdinaryObjectCreate = require('./OrdinaryObjectCreate');\nvar RegExpExec = require('./RegExpExec');\nvar Set = require('./Set');\nvar ToLength = require('./ToLength');\nvar ToString = require('./ToString');\nvar Type = require('./Type');\n\nvar SLOT = require('internal-slot');\nvar setToStringTag = require('es-set-tostringtag');\n\nvar RegExpStringIterator = function RegExpStringIterator(R, S, global, fullUnicode) {\n\tif (typeof S !== 'string') {\n\t\tthrow new $TypeError('`S` must be a string');\n\t}\n\tif (typeof global !== 'boolean') {\n\t\tthrow new $TypeError('`global` must be a boolean');\n\t}\n\tif (typeof fullUnicode !== 'boolean') {\n\t\tthrow new $TypeError('`fullUnicode` must be a boolean');\n\t}\n\tSLOT.set(this, '[[IteratingRegExp]]', R);\n\tSLOT.set(this, '[[IteratedString]]', S);\n\tSLOT.set(this, '[[Global]]', global);\n\tSLOT.set(this, '[[Unicode]]', fullUnicode);\n\tSLOT.set(this, '[[Done]]', false);\n};\n\nif (IteratorPrototype) {\n\tRegExpStringIterator.prototype = OrdinaryObjectCreate(IteratorPrototype);\n}\n\nvar RegExpStringIteratorNext = function next() {\n\tvar O = this; // eslint-disable-line no-invalid-this\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('receiver must be an object');\n\t}\n\tif (\n\t\t!(O instanceof RegExpStringIterator)\n\t\t|| !SLOT.has(O, '[[IteratingRegExp]]')\n\t\t|| !SLOT.has(O, '[[IteratedString]]')\n\t\t|| !SLOT.has(O, '[[Global]]')\n\t\t|| !SLOT.has(O, '[[Unicode]]')\n\t\t|| !SLOT.has(O, '[[Done]]')\n\t) {\n\t\tthrow new $TypeError('\"this\" value must be a RegExpStringIterator instance');\n\t}\n\tif (SLOT.get(O, '[[Done]]')) {\n\t\treturn CreateIterResultObject(undefined, true);\n\t}\n\tvar R = SLOT.get(O, '[[IteratingRegExp]]');\n\tvar S = SLOT.get(O, '[[IteratedString]]');\n\tvar global = SLOT.get(O, '[[Global]]');\n\tvar fullUnicode = SLOT.get(O, '[[Unicode]]');\n\tvar match = RegExpExec(R, S);\n\tif (match === null) {\n\t\tSLOT.set(O, '[[Done]]', true);\n\t\treturn CreateIterResultObject(undefined, true);\n\t}\n\tif (global) {\n\t\tvar matchStr = ToString(Get(match, '0'));\n\t\tif (matchStr === '') {\n\t\t\tvar thisIndex = ToLength(Get(R, 'lastIndex'));\n\t\t\tvar nextIndex = AdvanceStringIndex(S, thisIndex, fullUnicode);\n\t\t\tSet(R, 'lastIndex', nextIndex, true);\n\t\t}\n\t\treturn CreateIterResultObject(match, false);\n\t}\n\tSLOT.set(O, '[[Done]]', true);\n\treturn CreateIterResultObject(match, false);\n};\nCreateMethodProperty(RegExpStringIterator.prototype, 'next', RegExpStringIteratorNext);\n\nif (hasSymbols) {\n\tsetToStringTag(RegExpStringIterator.prototype, 'RegExp String Iterator');\n\n\tif (Symbol.iterator && typeof RegExpStringIterator.prototype[Symbol.iterator] !== 'function') {\n\t\tvar iteratorFn = function SymbolIterator() {\n\t\t\treturn this;\n\t\t};\n\t\tCreateMethodProperty(RegExpStringIterator.prototype, Symbol.iterator, iteratorFn);\n\t}\n}\n\n// https://262.ecma-international.org/11.0/#sec-createregexpstringiterator\nmodule.exports = function CreateRegExpStringIterator(R, S, global, fullUnicode) {\n\t// assert R.global === global && R.unicode === fullUnicode?\n\treturn new RegExpStringIterator(R, S, global, fullUnicode);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}